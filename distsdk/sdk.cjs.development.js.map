{"version":3,"file":"sdk.cjs.development.js","sources":["../src/types/index.ts","../src/utils/Tokens.ts","../src/utils/index.ts","../src/utils/BeanNumber/BeanNumber.ts","../src/utils/BeanNumber/utils.ts","../src/utils/BeanNumber/BeanNumberExtend.ts","../src/constants/chains.ts","../src/classes/Address.ts","../src/constants/addresses.ts","../src/constants/index.ts","../src/utils/Ledger.ts","../src/classes/Token/Token.ts","../src/classes/Token/BeanstalkToken.ts","../src/constants/generated/factories/Beanstalk/Beanstalk__factory.ts","../src/constants/generated/factories/Beanstalk/BeanstalkFertilizer__factory.ts","../src/constants/generated/factories/Beanstalk/Root__factory.ts","../src/constants/generated/factories/Curve/Pool/Curve3Pool__factory.ts","../src/constants/generated/factories/Curve/Pool/CurveTriCrypto2Pool__factory.ts","../src/constants/generated/factories/Curve/Registry/CurveCryptoFactory__factory.ts","../src/constants/generated/factories/Curve/Registry/CurveMetaFactory__factory.ts","../src/constants/generated/factories/Curve/Registry/CurveRegistry__factory.ts","../src/constants/generated/factories/Curve/Template/CurveMetaPool__factory.ts","../src/constants/generated/factories/Curve/Template/CurvePlainPool__factory.ts","../src/constants/generated/factories/Curve/CurveZap__factory.ts","../src/constants/generated/factories/ERC20__factory.ts","../src/constants/generated/factories/ERC20Permit__factory.ts","../src/classes/Token/ERC20Token.ts","../src/classes/Token/NativeToken.ts","../src/lib/permit.ts","../src/lib/tokens.ts","../src/lib/contracts.ts","../src/lib/events/utils.ts","../src/constants/blocks.ts","../src/lib/events/EventManager.ts","../src/lib/events/processor.ts","../src/lib/silo.utils.ts","../src/lib/silo.ts","../src/lib/sun.ts","../src/constants/generated-gql/graphql.ts","../src/lib/farm/types.ts","../src/lib/farm/Work.ts","../src/lib/farm/actions/Exchange.ts","../src/lib/farm/actions/ExchangeUnderlying.ts","../src/lib/farm/actions/WrapEth.ts","../src/lib/farm/actions/UnwrapEth.ts","../src/lib/farm/actions/AddLiquidity.ts","../src/lib/farm/actions/RemoveLiquidityOneToken.ts","../src/lib/farm/actions/TransferToken.ts","../src/lib/farm/LibraryPresets.ts","../src/lib/farm.ts","../src/lib/root.ts","../src/lib/BeanstalkSDK.ts","../src/utils/DecimalBigNumber.ts"],"sourcesContent":["import { ethers } from 'ethers';\n\nexport type Provider = ethers.providers.Provider;\n\nexport type Signer = ethers.Signer;\n\nexport type BeanstalkConfig = Partial<{\n  // Ledger\n  provider: Provider;\n  signer: Signer;\n  rpcUrl: string;\n  // Subgraph\n  subgraphUrl: string;\n  // Defaults\n  source: DataSource;\n  // Debug\n  DEBUG: boolean;\n}>;\n\nexport type Reconfigurable = Pick<\n  BeanstalkConfig,\n  \"source\"\n>\n\n// Returns the type of the value of a Map<key, value>\nexport type MapValueType<A> = A extends Map<any, infer V> ? V : never;\nexport type StringMap<T> = { [address: string]: T };\n\n// FIXME: add tests to ensure the proper DataSource is used. Setting a value to 0 causes issues rn\nexport enum DataSource {\n  LEDGER   = 1,\n  SUBGRAPH = 2, \n}\n\n// export function excludeHead<T extends any[]>(arr: readonly [any, ...T]) {\n//   const [_, ...rest] = arr;\n//   return rest;\n// }","import BigNumber from 'bignumber.js';\n// import {Token} from '../classes/Token';\n// import { ZERO_BN } from '../constants';\n// import { bigNumberResult } from './Ledger';\n// // import { STALK } from '~/constants/tokens';\n\n// // -------------------------\n// // BigNumber Comparators\n// // -------------------------\n\n// export function MinBNs(arr: BigNumber[]): BigNumber {\n//   return arr.reduce((prev, curr) => {\n//     if (prev.isLessThanOrEqualTo(curr)) {\n//       return prev;\n//     }\n//     return curr;\n//   });\n// }\n\n// export function MaxBNs(arr: BigNumber[]): BigNumber {\n//   return arr.reduce((prev, curr) => (prev.isGreaterThan(curr) ? prev : curr));\n// }\n\n// export function MinBN(bn1: BigNumber, bn2: BigNumber): BigNumber {\n//   if (bn1.isLessThanOrEqualTo(bn2)) return bn1;\n//   return bn2;\n// }\n\n// export function MaxBN(bn1: BigNumber, bn2: BigNumber): BigNumber {\n//   if (bn1.isGreaterThan(bn2)) return bn1;\n//   return bn2;\n// }\n\n// // -------------------------\n// // BigNumber Display Helpers\n// // -------------------------\n\n// /**\n//  * Trim a BigNumber to a set number of decimals.\n//  *\n//  * @FIXME legacy code, seems very inefficient.\n//  */\n// export function TrimBN(bn: BigNumber, decimals: number, allowNegative: boolean = false): BigNumber {\n//   if (typeof bn !== 'object') return new BigNumber(bn);\n\n//   const numberString = bn.toString();\n//   const decimalComponents = numberString.split('.');\n//   if ((bn.isLessThan(0) && !allowNegative) || decimalComponents.length < 2) return bn;\n\n//   // If too many decimals are provided, trim them.\n//   // If there aren't enough decimals, do nothing.\n//   // 1.123456 => [1, 123456]\n//   const decimalsFound = decimalComponents[1].length;\n//   const decimalsToTrim = decimalsFound < decimals ? 0 : decimalsFound - decimals;\n\n//   return new BigNumber(numberString.substr(0, numberString.length - decimalsToTrim));\n// }\n\n/**\n * Display a BigNumber with the specified range of decimals.\n */\nexport function displayFullBN(bn: BigNumber, maxDecimals: number = 18, minDecimals: number = 0) {\n  return bn.toNumber().toLocaleString('en-US', {\n    minimumFractionDigits: minDecimals,\n    maximumFractionDigits: maxDecimals,\n  });\n}\n\n// /**\n//  * Display an amount of a Token. Uses the Token's preferred\n//  * displayDecimals for display. Includes the Token name.\n//  */\n// export function displayTokenAmount(\n//   amount: BigNumber,\n//   token: Token,\n//   config: {\n//     allowNegative?: boolean;\n//     showName?: boolean;\n//     modifier?: string;\n//   } = {\n//     allowNegative: false,\n//     showName: true,\n//   }\n// ) {\n//   return `${(config.allowNegative ? amount : amount.abs()).toNumber().toLocaleString('en-US', {\n//     maximumFractionDigits: token.displayDecimals,\n//   })} ${config.modifier ? `${config.modifier} ` : ''}${config.showName ? token.name : ''}`;\n// }\n\n// /**\n//  * Display a BigNumber with abbreviations for large numbers.\n//  */\n// export function displayBN(bn: BigNumber, allowNegative: boolean = false): string {\n//   if (bn === undefined || !(bn instanceof BigNumber)) return '0';\n//   if (bn.isLessThan(new BigNumber(0))) {\n//     return allowNegative ? `-${displayBN(bn.multipliedBy(-1))}` : '0';\n//   }\n//   if (bn.isEqualTo(0)) {\n//     return '0';\n//   }\n//   if (bn.isLessThanOrEqualTo(1e-8)) {\n//     return '<.00000001';\n//   }\n//   if (bn.isLessThanOrEqualTo(1e-3)) {\n//     return TrimBN(bn, 8).toFixed();\n//   }\n\n//   if (bn.isGreaterThanOrEqualTo(1e12)) {\n//     return `${TrimBN(bn.dividedBy(1e12), 4)}T`; /* Trillions */\n//   }\n//   if (bn.isGreaterThanOrEqualTo(1e9)) {\n//     return `${TrimBN(bn.dividedBy(1e9), 3)}B`; /* Billions */\n//   }\n//   if (bn.isGreaterThanOrEqualTo(1e8)) {\n//     return `${TrimBN(bn.dividedBy(1e6), 2)}M`; /* Millions */\n//   }\n//   if (bn.isGreaterThanOrEqualTo(1e6)) {\n//     return `${TrimBN(bn.dividedBy(1e6), 2)}M`; /* Millions */\n//   }\n//   if (bn.isGreaterThanOrEqualTo(1e3)) {\n//     return `${displayFullBN(bn, 0)}`; /* Small Thousands */\n//   }\n\n//   const decimals = bn.isGreaterThan(10) ? 2 : bn.isGreaterThan(1) ? 3 : 4;\n//   return TrimBN(bn, decimals).toFixed();\n// }\n\n// /**\n//  *\n//  */\n// export function smallDecimalPercent(bn: BigNumber) {\n//   if (bn.isLessThanOrEqualTo(1e-4)) return '<.0001';\n//   // if (bn.isLessThanOrEqualTo(1e-4)) return bn.toFixed(5);\n//   if (bn.isLessThanOrEqualTo(1e-3)) return bn.toFixed(4);\n//   return TrimBN(bn, 3).toFixed();\n// }\n\n// /**\n//  *\n//  */\n// export function displayUSD(bn: BigNumber, allowNegative: boolean = false) {\n//   const v = allowNegative === false ? MaxBN(ZERO_BN, bn).abs() : bn;\n//   return `$${displayFullBN(v, 2, 2)}`;\n// }\n\n// /**\n//  * Standard Bean price display: truncate with ROUND_FLOOR.\n//  *\n//  * 0.99995 => \"0.9999\"\n//  * 1.00006 => \"1.0000\"\n//  *\n//  * @param price Bean price\n//  * @param decimals number of decimals to display\n//  * @returns string; truncated Bean price\n//  */\n// export function displayBeanPrice(price: BigNumber, decimals: number = 4) {\n//   return price.dp(decimals, BigNumber.ROUND_FLOOR).toFixed(decimals);\n// }\n\n// // export function displayStalk(\n// //   stalk: BigNumber,\n// //   decimals : number = STALK.displayDecimals,\n// // ) {\n// //   return stalk.lt(0.0001) ? '0' : displayFullBN(stalk, decimals);\n// // }\n\n// export function displayPercentage(pct: BigNumber, decimals: number = 4) {\n//   return pct.lt(10 ** -decimals) ? '0%' : `${pct.toFixed(4)}%`;\n// }\n\n// // -------------------------\n// // Token Unit Conversions\n// // -------------------------\n\n/**\n * Convert a \"decimal amount\" (decimal form) to \"token amount\" (integer form).\n * This is what's stored on chain.\n *\n * @param decimalAmt\n * @param decimals\n * @returns int\n */\nexport function toBaseUnitBN(decimalAmt: BigNumber.Value, decimals: BigNumber.Value): BigNumber {\n  const amt = new BigNumber(decimalAmt);\n  const base = new BigNumber(10);\n  const decimalsBN = new BigNumber(decimals);\n  const digits = base.pow(decimalsBN);\n  return amt.multipliedBy(digits).integerValue();\n}\n\n/**\n * Convert a \"token amount\" (integer form) to \"decimal amount\" (decimal form).\n * This is typically what's displayed to users within the application.\n *\n * @param tokenAmt BigNumber.Value\n * @param decimals BigNumber.Value\n * @returns BigNumber\n */\nexport function toTokenUnitsBN(tokenAmt: BigNumber.Value, decimals: BigNumber.Value): BigNumber {\n  const amt = new BigNumber(tokenAmt.toString());\n  const base = new BigNumber(10);\n  const decimalsBN = new BigNumber(decimals);\n  const digits = base.pow(decimalsBN);\n  return amt.dividedBy(digits);\n}\n\n/**\n * Convert a \"raw amount\" (decimal form) to \"token amount\" (integer form).\n * This is what's stored on chain.\n *\n * @param decimalAmt\n * @param decimals\n * @returns string\n */\nexport function toStringBaseUnitBN(decimalAmt: BigNumber.Value, decimals: BigNumber.Value): string {\n  return toBaseUnitBN(decimalAmt, decimals).toFixed();\n}\n","export * as tokens from './Tokens';\n\nexport const enumFromValue = <T extends Record<number, string>>(val: number, _enum: T) => {\n  // @ts-ignore\n  const enumName = (Object.keys(_enum) as Array<keyof T>).find(k => _enum[k] === val);\n  if (!enumName) throw Error(`The network id ${val} is not valid`);\n  return _enum[enumName];\n};\n\nexport function assert(condition: boolean, message?: string): asserts condition is true {\n  if (!condition) throw Error(message || 'Assertion failed');\n}\n\nexport const zeros = (numZeros: number) => ''.padEnd(numZeros, '0');","/**\n *  BigNumber\n *\n *  Extened from ethers.BigNumber\n *  https://github.com/ethers-io/ethers.js/blob/master/packages/bignumber/src.ts/bignumber.ts\n *\n *  Minimal changs here. Extended through BeanNumberExtend.ts\n *\n */\n\nimport BN from 'bn.js';\n\nimport { Bytes, Hexable, hexlify, isBytes, isHexString } from '@ethersproject/bytes';\n\nimport { Logger } from '@ethersproject/logger';\nimport { BigNumber } from 'ethers';\nconst logger = new Logger('beannumber');\n\nconst _constructorGuard = {};\n\nconst MAX_SAFE = 0x1fffffffffffff;\n\ntype BigNumberish = BeanNumber | BigNumber | Bytes | bigint | string | number;\n\n// Only warn about passing 10 into radix once\nlet _warnedToStringRadix = false;\n\nexport class BeanNumber implements Hexable {\n  readonly _hex: string;\n  readonly _isBigNumber: boolean;\n  private _decimals: number;\n\n  constructor(constructorGuard: any, hex: string) {\n    if (constructorGuard !== _constructorGuard) {\n      logger.throwError('cannot call constructor directly; use BigNumber.from', Logger.errors.UNSUPPORTED_OPERATION, {\n        operation: 'new (BigNumber)',\n      });\n    }\n\n    this._hex = hex;\n    this._isBigNumber = true;\n\n    // don't freeze everything\n    // Object.freeze(this);\n    Object.defineProperty(this, '_hex', { configurable: false, writable: false });\n    Object.defineProperty(this, 'isBigNumber', { configurable: false, writable: false });\n  }\n\n  ////// Custom methods\n  get decimals() {\n    return this._decimals;\n  }\n\n  set decimals(decimals: number) {\n    this._decimals = decimals;\n    Object.defineProperty(this, \"_decimals\", { configurable: false, writable: false });\n  }\n\n  //////\n\n  fromTwos(value: number): BeanNumber {\n    return toBeanNumbe(toBN(this).fromTwos(value));\n  }\n\n  toTwos(value: number): BeanNumber {\n    return toBeanNumbe(toBN(this).toTwos(value));\n  }\n\n  abs(): BeanNumber {\n    if (this._hex[0] === '-') {\n      return BeanNumber.from(this._hex.substring(1));\n    }\n    return this;\n  }\n\n  add(other: BigNumberish): BeanNumber {\n    return toBeanNumbe(toBN(this).add(toBN(other)));\n  }\n\n  sub(other: BigNumberish): BeanNumber {\n    return toBeanNumbe(toBN(this).sub(toBN(other)));\n  }\n\n  div(other: BigNumberish): BeanNumber {\n    const o = BeanNumber.from(other);\n    if (o.isZero()) {\n      throwFault('division-by-zero', 'div');\n    }\n    return toBeanNumbe(toBN(this).div(toBN(other)));\n  }\n\n  mul(other: BigNumberish): BeanNumber {\n    return toBeanNumbe(toBN(this).mul(toBN(other)));\n  }\n\n  mod(other: BigNumberish): BeanNumber {\n    const value = toBN(other);\n    if (value.isNeg()) {\n      throwFault('division-by-zero', 'mod');\n    }\n    return toBeanNumbe(toBN(this).umod(value));\n  }\n\n  pow(other: BigNumberish): BeanNumber {\n    const value = toBN(other);\n    if (value.isNeg()) {\n      throwFault('negative-power', 'pow');\n    }\n    return toBeanNumbe(toBN(this).pow(value));\n  }\n\n  and(other: BigNumberish): BeanNumber {\n    const value = toBN(other);\n    if (this.isNegative() || value.isNeg()) {\n      throwFault('unbound-bitwise-result', 'and');\n    }\n    return toBeanNumbe(toBN(this).and(value));\n  }\n\n  or(other: BigNumberish): BeanNumber {\n    const value = toBN(other);\n    if (this.isNegative() || value.isNeg()) {\n      throwFault('unbound-bitwise-result', 'or');\n    }\n    return toBeanNumbe(toBN(this).or(value));\n  }\n\n  xor(other: BigNumberish): BeanNumber {\n    const value = toBN(other);\n    if (this.isNegative() || value.isNeg()) {\n      throwFault('unbound-bitwise-result', 'xor');\n    }\n    return toBeanNumbe(toBN(this).xor(value));\n  }\n\n  mask(value: number): BeanNumber {\n    if (this.isNegative() || value < 0) {\n      throwFault('negative-width', 'mask');\n    }\n    return toBeanNumbe(toBN(this).maskn(value));\n  }\n\n  shl(value: number): BeanNumber {\n    if (this.isNegative() || value < 0) {\n      throwFault('negative-width', 'shl');\n    }\n    return toBeanNumbe(toBN(this).shln(value));\n  }\n\n  shr(value: number): BeanNumber {\n    if (this.isNegative() || value < 0) {\n      throwFault('negative-width', 'shr');\n    }\n    return toBeanNumbe(toBN(this).shrn(value));\n  }\n\n  eq(other: BigNumberish): boolean {\n    return toBN(this).eq(toBN(other));\n  }\n\n  lt(other: BigNumberish): boolean {\n    return toBN(this).lt(toBN(other));\n  }\n\n  lte(other: BigNumberish): boolean {\n    return toBN(this).lte(toBN(other));\n  }\n\n  gt(other: BigNumberish): boolean {\n    return toBN(this).gt(toBN(other));\n  }\n\n  gte(other: BigNumberish): boolean {\n    return toBN(this).gte(toBN(other));\n  }\n\n  isNegative(): boolean {\n    return this._hex[0] === '-';\n  }\n\n  isZero(): boolean {\n    return toBN(this).isZero();\n  }\n\n  toNumber(): number {\n    try {\n      return toBN(this).toNumber();\n    } catch (error) {\n      throwFault('overflow', 'toNumber', this.toString());\n    }\n  }\n\n  toBigInt(): bigint {\n    try {\n      return BigInt(this.toString());\n    } catch (e) {}\n\n    return logger.throwError('this platform does not support BigInt', Logger.errors.UNSUPPORTED_OPERATION, {\n      value: this.toString(),\n    });\n  }\n\n  toString(): string {\n    // Lots of people expect this, which we do not support, so check (See: #889)\n    if (arguments.length > 0) {\n      if (arguments[0] === 10) {\n        if (!_warnedToStringRadix) {\n          _warnedToStringRadix = true;\n          logger.warn('BigNumber.toString does not accept any parameters; base-10 is assumed');\n        }\n      } else if (arguments[0] === 16) {\n        logger.throwError(\n          'BigNumber.toString does not accept any parameters; use bigNumber.toHexString()',\n          Logger.errors.UNEXPECTED_ARGUMENT,\n          {}\n        );\n      } else {\n        logger.throwError('BigNumber.toString does not accept parameters', Logger.errors.UNEXPECTED_ARGUMENT, {});\n      }\n    }\n    return toBN(this).toString(10);\n  }\n\n  toHexString(): string {\n    return this._hex;\n  }\n\n  toJSON(key?: string): any {\n    return { type: 'BigNumber', hex: this.toHexString() };\n  }\n\n  static from(value: any): BeanNumber {\n    // TODO verify BigNumber pass here too\n    if (value instanceof BeanNumber) {\n      return value;\n    }\n\n    if (typeof value === 'string') {\n      if (value.match(/^-?0x[0-9a-f]+$/i)) {\n        return new BeanNumber(_constructorGuard, toHex(value));\n      }\n\n      if (value.match(/^-?[0-9]+$/)) {\n        return new BeanNumber(_constructorGuard, toHex(new BN(value)));\n      }\n\n      return logger.throwArgumentError('invalid BigNumber string', 'value', value);\n    }\n\n    if (typeof value === 'number') {\n      if (value % 1) {\n        throwFault('underflow', 'BigNumber.from', value);\n      }\n\n      if (value >= MAX_SAFE || value <= -MAX_SAFE) {\n        throwFault('overflow', 'BigNumber.from', value);\n      }\n\n      return BeanNumber.from(String(value));\n    }\n\n    const anyValue = <any>value;\n\n    if (typeof anyValue === 'bigint') {\n      return BeanNumber.from(anyValue.toString());\n    }\n\n    if (isBytes(anyValue)) {\n      return BeanNumber.from(hexlify(anyValue));\n    }\n\n    if (anyValue) {\n      // Hexable interface (takes priority)\n      if (anyValue.toHexString) {\n        const hex = anyValue.toHexString();\n        if (typeof hex === 'string') {\n          return BeanNumber.from(hex);\n        }\n      } else {\n        // For now, handle legacy JSON-ified values (goes away in v6)\n        let hex = anyValue._hex;\n\n        // New-form JSON\n        if (hex == null && anyValue.type === 'BigNumber') {\n          hex = anyValue.hex;\n        }\n\n        if (typeof hex === 'string') {\n          if (isHexString(hex) || (hex[0] === '-' && isHexString(hex.substring(1)))) {\n            return BeanNumber.from(hex);\n          }\n        }\n      }\n    }\n\n    return logger.throwArgumentError('invalid BigNumber value', 'value', value);\n  }\n\n  static isBigNumber(value: any): value is BigNumber | BeanNumber {\n    return !!(value && value._isBigNumber);\n  }\n}\n\n// Normalize the hex string\nfunction toHex(value: string | BN): string {\n  // For BN, call on the hex string\n  if (typeof value !== 'string') {\n    return toHex(value.toString(16));\n  }\n\n  // If negative, prepend the negative sign to the normalized positive value\n  if (value[0] === '-') {\n    // Strip off the negative sign\n    value = value.substring(1);\n\n    // Cannot have multiple negative signs (e.g. \"--0x04\")\n    if (value[0] === '-') {\n      logger.throwArgumentError('invalid hex', 'value', value);\n    }\n\n    // Call toHex on the positive component\n    value = toHex(value);\n\n    // Do not allow \"-0x00\"\n    if (value === '0x00') {\n      return value;\n    }\n\n    // Negate the value\n    return '-' + value;\n  }\n\n  // Add a \"0x\" prefix if missing\n  if (value.substring(0, 2) !== '0x') {\n    value = '0x' + value;\n  }\n\n  // Normalize zero\n  if (value === '0x') {\n    return '0x00';\n  }\n\n  // Make the string even length\n  if (value.length % 2) {\n    value = '0x0' + value.substring(2);\n  }\n\n  // Trim to smallest even-length string\n  while (value.length > 4 && value.substring(0, 4) === '0x00') {\n    value = '0x' + value.substring(4);\n  }\n\n  return value;\n}\n\nfunction toBeanNumbe(value: BN): BeanNumber {\n  return BeanNumber.from(toHex(value));\n}\n\nfunction toBN(value: BigNumberish): BN {\n  const hex = BeanNumber.from(value).toHexString();\n  if (hex[0] === '-') {\n    return new BN('-' + hex.substring(3), 16);\n  }\n  return new BN(hex.substring(2), 16);\n}\n\nfunction throwFault(fault: string, operation: string, value?: any): never {\n  const params: any = { fault: fault, operation: operation };\n  if (value != null) {\n    params.value = value;\n  }\n\n  return logger.throwError(fault, Logger.errors.NUMERIC_FAULT, params);\n}\n","import { Logger } from '@ethersproject/logger';\nimport { BigNumberish, BigNumber } from 'ethers';\nimport { BeanNumber } from './BeanNumber';\n\nconst logger = new Logger('BeanNumber');\n\nconst names = ['wei', 'kwei', 'mwei', 'gwei', 'szabo', 'finney', 'ether'];\n\nlet zeros = '0';\nwhile (zeros.length < 256) {\n  zeros += zeros;\n}\nconst NegativeOne = BigNumber.from(-1);\n\nexport const parseUnits = (value: string, unitName?: BigNumberish): BeanNumber => {\n  if (typeof value !== 'string') {\n    logger.throwArgumentError('value must be a string', 'value', value);\n  }\n  if (typeof unitName === 'string') {\n    const index = names.indexOf(unitName);\n    if (index !== -1) {\n      unitName = 3 * index;\n    }\n  }\n  return parseFixed(value, unitName != null ? unitName : 18);\n};\n\nfunction throwFault(message: string, fault: string, operation: string, value?: any): never {\n  const params: any = { fault: fault, operation: operation };\n  if (value !== undefined) {\n    params.value = value;\n  }\n  return logger.throwError(message, Logger.errors.NUMERIC_FAULT, params);\n}\n\nfunction getMultiplier(decimals: BigNumberish): string {\n  if (typeof decimals !== 'number') {\n    try {\n      decimals = BeanNumber.from(decimals).toNumber();\n    } catch (e) {}\n  }\n\n  if (typeof decimals === 'number' && decimals >= 0 && decimals <= 256 && !(decimals % 1)) {\n    return '1' + zeros.substring(0, decimals);\n  }\n\n  return logger.throwArgumentError('invalid decimal size', 'decimals', decimals);\n}\n\nfunction parseFixed(value: string, decimals?: BigNumberish): BeanNumber {\n  if (decimals == null) {\n    decimals = 0;\n  }\n  const multiplier = getMultiplier(decimals);\n\n  if (typeof value !== 'string' || !value.match(/^-?[0-9.]+$/)) {\n    logger.throwArgumentError('invalid decimal value', 'value', value);\n  }\n\n  // Is it negative?\n  const negative = value.substring(0, 1) === '-';\n  if (negative) {\n    value = value.substring(1);\n  }\n\n  if (value === '.') {\n    logger.throwArgumentError('missing value', 'value', value);\n  }\n\n  // Split it into a whole and fractional part\n  const comps = value.split('.');\n  if (comps.length > 2) {\n    logger.throwArgumentError('too many decimal points', 'value', value);\n  }\n\n  let whole = comps[0],\n    fraction = comps[1];\n  if (!whole) {\n    whole = '0';\n  }\n  if (!fraction) {\n    fraction = '0';\n  }\n\n  // Trim trailing zeros\n  while (fraction[fraction.length - 1] === '0') {\n    fraction = fraction.substring(0, fraction.length - 1);\n  }\n\n  // Check the fraction doesn't exceed our decimals size\n  if (fraction.length > multiplier.length - 1) {\n    throwFault('fractional component exceeds decimals', 'underflow', 'parseFixed');\n  }\n\n  // If decimals is 0, we have an empty string for fraction\n  if (fraction === '') {\n    fraction = '0';\n  }\n\n  // Fully pad the string with zeros to get to wei\n  while (fraction.length < multiplier.length - 1) {\n    fraction += '0';\n  }\n\n  const wholeValue = BeanNumber.from(whole);\n  const fractionValue = BeanNumber.from(fraction);\n\n  let wei = wholeValue.mul(multiplier).add(fractionValue);\n\n  if (negative) {\n    wei = wei.mul(NegativeOne);\n  }\n\n  return wei;\n}\n\nexport function trim(numberString: string, decimals: number): BeanNumber {\n  const decimalComponents = numberString.split('.');\n  const decimalsFound = decimalComponents[1].length;\n  const decimalsToTrim = decimalsFound < decimals ? 0 : decimalsFound - decimals;\n\n  return BeanNumber.from(numberString.substr(0, numberString.length - decimalsToTrim));\n}\n","import { parseUnits, trim } from './utils';\nimport { BeanNumber } from './BeanNumber';\nimport { BigNumber, BigNumberish, utils } from 'ethers';\n\ndeclare module './BeanNumber' {\n  // Use this block for adding instance methos\n  interface BeanNumber {\n    toHuman(decimals: number): string;\n    display(decimals: number, allowNegative?: boolean): string;\n    displayFull(maxDecimals?: number, minDecimals?: number): string;\n    trimDecimals(allowNegative?: boolean): BeanNumber;\n    trim(numberString: string, decimals: number): BeanNumber;\n  }\n\n  // Use this block for adding static methos\n  namespace BeanNumber {\n    let fromHuman: (value: string, decimals: number) => BeanNumber;\n    let fromBigNumber: (bn: BigNumber, decimals?: number) => BeanNumber;\n  }\n}\n\nBeanNumber.fromBigNumber = function(bn: BigNumber, decimals?: number): BeanNumber {\n  console.log(decimals);\n  const n = BeanNumber.from(bn);\n  if (decimals) n.decimals = decimals;\n\n  return n;\n};\n\nBeanNumber.fromHuman = function(value: string, decimals: number) {\n  if (!value) {\n    throw new Error('Must provide value to BigNumber.fromHuman(value,decimals)');\n  }\n  if (!decimals) {\n    throw new Error('Must provide decimals to BigNumber.fromHuman(value,decimals)');\n  }\n  let [int, safeDecimals] = value.split('.');\n\n  if (safeDecimals && safeDecimals.length > decimals) {\n    safeDecimals = safeDecimals.substring(0, decimals);\n  }\n\n  const safeValue = safeDecimals ? `${int}.${safeDecimals}` : int;\n  const result = parseUnits(safeValue, decimals);\n\n  return result;\n};\n\nBeanNumber.prototype.toHuman = function(decimals: number): string {\n  return utils.formatUnits(this, decimals);\n};\n\n\n\nBeanNumber.prototype.display = function display(decimals: number, allowNegative: boolean = false): string {\n  const fakeDiv = (_decimals: number, _divisor: number) => {\n    const divisor = _divisor * 10 ** _decimals;\n    const quotient = this.div(divisor);\n    const remainder = this.mod(divisor);\n\n    const result = `${quotient.toString()}.${remainder.toString()}`;\n    return result;\n  };\n\n  if (this.lt(BeanNumber.from(0))) {\n    return allowNegative ? `-${this.mul('-1').display(decimals)}` : '0';\n  }\n  if (this.eq(0)) {\n    return '0';\n  }\n  if (this.lte(1e-8)) {\n    return '<.00000001';\n  }\n  if (this.lte(1e-3)) {\n    // FIXME add .toFixed()\n    // return trim(this.toString(), 8).toFixed();\n    return trim(this.toString(), 8).toString();\n  }\n\n  if (this.gte(1e12)) {\n    return `${trim(fakeDiv(decimals, 1e12), 4)}T`; /* Trillions */\n  }\n  if (this.gte(1e9)) {\n    return `${trim(fakeDiv(decimals, 1e9), 3)}B`; /* Billions */\n  }\n  if (this.gte(1e8)) {\n    return `${trim(fakeDiv(decimals, 1e6), 2)}M`; /* Millions */\n  }\n  if (this.gte(1e6)) {\n    return `${trim(fakeDiv(decimals, 1e6), 2)}M`; /* Millions */\n  }\n  if (this.gte(1e3)) {\n    return `${this.displayFull(0)}`; /* Small Thousands */\n  }\n\n  const decimals2 = this.gt(10) ? 2 : this.gt(1) ? 3 : 4;\n  // FIX ME, add .toFixed()\n  // return trim(this.toString(), decimals2).toFixed();\n  return trim(this.toString(), decimals2).toString();\n};\n\nBeanNumber.prototype.displayFull = function displayFull(maxDecimals: number = 18, minDecimals: number = 0) {\n  return this.toNumber().toLocaleString('en-US', {\n    minimumFractionDigits: minDecimals,\n    maximumFractionDigits: maxDecimals,\n  });\n};\n","/**\n * List of supported chains\n */\nexport enum ChainId {\n  MAINNET = 1,\n  CUJO = 31337, // pre-exploit, beanstalk replanted\n  LOCALHOST = 1337,\n}\n\n\n/**\n * These chains are forks of mainnet,\n * therefore they use the same token addresses as mainnet.\n */\nexport const TESTNET_CHAINS = new Set([ChainId.LOCALHOST, ChainId.CUJO]);\n\n","import { ChainId, TESTNET_CHAINS } from '../constants/chains';\n\nexport type AddressDefinition = {\n  [id: number]: string;\n};\n\nexport class Address {\n  private addresses: AddressDefinition;\n  public MAINNET: string;\n  public CUJO: string;\n  public LOCALHOST: string;\n\n  static make<T extends string | AddressDefinition>(input: T): Address {\n    const addresses: AddressDefinition = {};\n    if (typeof input == 'string') {\n      addresses[ChainId.MAINNET] = input;\n    } else {\n      Object.assign(addresses, input);\n    }\n\n    // Make address values lowercase\n    const lowerCaseAddresses: AddressDefinition = {};\n    for (const key in addresses) {\n      lowerCaseAddresses[key] = addresses[key].toLowerCase();\n    }\n\n    return new Address(lowerCaseAddresses);\n  }\n\n  constructor(addresses: AddressDefinition) {\n    this.addresses = addresses;\n    this.MAINNET = this.addresses[ChainId.MAINNET];\n    this.CUJO = this.addresses[ChainId.CUJO];\n    this.LOCALHOST = this.addresses[ChainId.LOCALHOST];\n  }\n\n  get(chainId?: number) {\n    // Default to MAINNET if no chain is specified\n    if (!chainId) {\n      return this.addresses[ChainId.MAINNET];\n    }\n\n    // Throw if user wants a specific chain which we don't support\n    if (!ChainId[chainId]) {\n      throw new Error(`Chain ID ${chainId} is not supported`);\n    }\n\n    // If user wants an address on a TESTNET chain\n    // return mainnet one if it's not found\n    if (TESTNET_CHAINS.has(chainId)) {\n      return this.addresses[chainId] || this.addresses[ChainId.MAINNET];\n    }\n\n    return this.addresses[chainId];\n  }\n\n  set<T extends string | AddressDefinition>(input: T) {\n    const newAddress = Address.make(input);\n    Object.assign(this, newAddress);\n  }\n}\n","import { Address } from \"../classes/Address\";\n\nexport const addresses = {\n  // ----------------------------------------\n  // Beanstalk Contracts\n  // ----------------------------------------\n  BEANSTALK: Address.make('0xC1E088fC1323b20BCBee9bd1B9fC9546db5624C5'),\n  BEANSTALK_PRICE: Address.make('0xA57289161FF18D67A68841922264B317170b0b81'),\n  BEANSTALK_FERTILIZER: Address.make('0x402c84De2Ce49aF88f5e2eF3710ff89bFED36cB6'),\n  BARNRAISE_CUSTODIAN: Address.make('0xa9bA2C40b263843C04d344727b954A545c81D043'),\n  \n\n  // ----------------------------------------\n  // BeaNFT Contracts\n  // ----------------------------------------\n  BEANFT_GENESIS: Address.make('0xa755A670Aaf1FeCeF2bea56115E65e03F7722A79'),\n  BEANFT_WINTER_ADDRESSES: Address.make('0x459895483556daD32526eFa461F75E33E458d9E9'),\n\n  // ----------------------------------------\n  // Bean & Unripe Bean Tokens\n  // ----------------------------------------\n  BEAN: Address.make('0xBEA0000029AD1c77D3d5D23Ba2D8893dB9d1Efab'),\n\n  ROOT: Address.make('0x3d5965EB520E53CC1A6AEe3A44E5c1De406E028F'),\n\n  // --------------------------------------------------\n  UNRIPE_BEAN:\n    // \"Unripe Bean\": Unripe vesting asset for the Bean token, Localhost\n    Address.make('0x1BEA0050E63e05FBb5D8BA2f10cf5800B6224449'),\n\n  // --------------------------------------------------\n  UNRIPE_BEAN_CRV3:\n    // \"Unripe BEAN:C,V3 LP\": Unripe vesting asset for the BEAN:CRV3 LP token, Localhost\n    Address.make('0x1BEA3CcD22F4EBd3d37d731BA31Eeca95713716D'),\n\n  // ----------------------------------------\n  // Common ERC-20 Tokens\n  // ----------------------------------------\n  WETH: Address.make('0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2'),\n  DAI: Address.make('0x6B175474E89094C44Da98b954EedeAC495271d0F'),\n  USDC: Address.make('0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48'),\n  USDT: Address.make('0xdAC17F958D2ee523a2206206994597C13D831ec7'),\n  CRV3: Address.make('0x6c3F90f043a72FA612cbac8115EE7e52BDe6E490'),\n  LUSD: Address.make('0x5f98805A4E8be255a32880FDeC7F6728C6568bA0'),\n\n  // ----------------------------------------\n  // Curve Pools: BEAN\n  // ----------------------------------------\n  BEAN_CRV3:\n    // \"Curve.fi Factory USD Metapool: Bean (BEAN3CRV-f)\"\n    // [Implements: ERC20 & Metapool]\n    // --------------------------------------------------\n    // coins[0] = 0xBEA0003eA948Db32082Fc6F4EC0729D258a0444c (BEAN)\n    // coins[1] = 0x6c3F90f043a72FA612cbac8115EE7e52BDe6E490 (3CRV)\n    //\n    // 1. Creates a BEAN:3CRV Metapool contract.\n    // 2. Issues BEAN3CRV-f, the pool's LP token. The pool address and\n    //    the LP token address are identical. Note that this is NOT the\n    //    case for 3pool itself on Mainnet:\n    //    - 3CRV (the 3pool LP Token) = 0x6c3F90f043a72FA612cbac8115EE7e52BDe6E490\n    //    - 3pool Contract            = 0xbEbc44782C7dB0a1A60Cb6fe97d0b483032FF1C7\n    Address.make('0xc9C32cd16Bf7eFB85Ff14e0c8603cc90F6F2eE49'),\n\n  // ----------------------------------------\n  // Curve Pools: Other\n  // ----------------------------------------\n  // --------------------------------------------------\n  POOL3:\n    // \"Curve.fi: DAI/USDC/USDT Pool\" (aka 3pool)\n    // --------------------------------------------------\n    // coins[0] = 0x6B175474E89094C44Da98b954EedeAC495271d0F (DAI)\n    // coins[1] = 0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48 (USDC)\n    // coins[2] = 0xdAC17F958D2ee523a2206206994597C13D831ec7 (USDT)\n    Address.make('0xbEbc44782C7dB0a1A60Cb6fe97d0b483032FF1C7'),\n\n  // --------------------------------------------------\n  TRICRYPTO2:\n    // tricrypto2\n    // --------------------------------------------------\n    // coins[0] = 0xdAC17F958D2ee523a2206206994597C13D831ec7 (USDT)\n    // coins[1] = 0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599 (WBTC)\n    // coins[2] = 0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2 (WETH)\n    Address.make('0xD51a44d3FaE010294C616388b506AcdA1bfAAE46'),\n\n  // ----------------------------------------\n  // Curve: Registries / Factories / Utils\n  // ----------------------------------------\n  // \"metapool\" and \"cryptoswap\" are simultaneously\n  // - \"registries\" (they track a list of pools)\n  // - \"factories\"  (they allow creation of new pools)\n\n  // 3pool, etc.\n  POOL_REGISTRY: Address.make('0x90e00ace148ca3b23ac1bc8c240c2a7dd9c2d7f5'),\n\n  // X:3CRV, etc. aka StableFactory\n  META_FACTORY: Address.make('0xB9fC157394Af804a3578134A6585C0dc9cc990d4'),\n\n  // tricrypto2, etc.\n  CRYPTO_FACTORY: Address.make('0x8F942C20D02bEfc377D41445793068908E2250D0'),\n\n  // zap\n  CURVE_ZAP: Address.make('0xA79828DF1850E8a3A3064576f380D90aECDD3359'),\n\n  // BEAN_ETH_UNIV2_LP !! Deprecated\n  BEAN_ETH_UNIV2_LP: Address.make('0x87898263B6C5BABe34b4ec53F22d98430b91e371'),\n\n  // BEAN_LUSD_LP !! Deprecated\n  BEAN_LUSD_LP: Address.make('0xD652c40fBb3f06d6B58Cb9aa9CFF063eE63d465D')\n};\n","import BigNumber from 'bignumber.js';\nimport { BeanNumber } from '../utils/BeanNumber';\n\nexport * from './addresses';\nexport * from './chains';\n\n/* Diamonds */\nexport const NEW_BeanNumber = BeanNumber.from('-1');\nexport const ZERO_NEW_BeanNumber = BeanNumber.from('0');\nexport const ONE_NEW_BeanNumber = BeanNumber.from('1');\nexport const NEW_BN = new BigNumber(-1);\nexport const ZERO_BN = new BigNumber(0);\nexport const ONE_BN = new BigNumber(1);\nexport const MAX_UINT32 = 4294967295;\nexport const MAX_UINT256 = '0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff';\n","import { BigNumber as BNJS } from 'ethers';\nimport BigNumber from 'bignumber.js';\nimport { Token } from '../classes/Token';\n// import type Token from '~/classes/Token';\n// import { ChainConstant, SupportedChainId } from '~/constants';\n// import { toTokenUnitsBN } from './Tokens';\n\n// -------------------------\n// Chain Result Helpers\n// -------------------------\n\n// export enum Source {\n//   SUBGRAPH,\n//   LOCAL\n// }\n\n// -------------------------\n// Chain Result Helpers\n// -------------------------\n\n// export const identityResult = (result: any) => result;\n\n// FIXME: `instanceof BNJS` call; is this faster than always calling `.toString()`?\n// export const bigNumberResult = (result: any) => new BigNumber(result instanceof BNJS ? result.toString() : result);\n// TODO: Discuss this\nexport const bigNumberResult = (result: BigNumber | BNJS) =>\n  new BigNumber(result.hasOwnProperty('_hex') ? (result as BNJS).toString() : (result as BigNumber));\n\n// /**\n//  * Return a formatted error string from a transaction error thrown by ethers.\n//  * @FIXME improve parsing\n//  */\n// export const parseError = (error: any) => {\n//   switch (error.code) {\n//     /// ethers\n//     case 'UNSUPPORTED_OPERATION':\n//     case 'CALL_EXCEPTION':\n//     case 'UNPREDICTABLE_GAS_LIMIT':\n//       return `Error: ${error.reason}`;\n\n//     ///\n//     case -32603:\n//       if (error.data && error.data.message) {\n//         const matches = (error.data.message as string).match(/([\"'])(?:(?=(\\\\?))\\2.)*?\\1/);\n//         return matches?.[0]?.replace(/^'(.+(?='$))'$/, '$1') || error.data.message;\n//       }\n//       return error.message.replace('execution reverted: ', '');\n\n//     /// MetaMask - RPC Error: MetaMask Tx Signature: User denied transaction signature.\n//     case 4001:\n//       return 'You rejected the signature request.';\n\n//     /// Unknown\n//     default:\n//       if (error?.message) return `${error?.message || error?.toString()}.${error?.code ? ` (code=${error?.code})` : ''}`;\n//       return `An unknown error occurred.${error?.code ? ` (code=${error?.code})` : ''}`;\n//   }\n// };\n\n// /**\n//  * Recursively parse all instances of BNJS as BigNumber\n//  * @unused\n//  */\n//  export const bn = (v: any) => (v instanceof BNJS ? new BigNumber(v.toString()) : false);\n//  export const parseBNJS = (_o: { [key: string]: any }) => {\n//    const o: { [key: string]: any } = {};\n//    Object.keys(_o).forEach((k: string) => {\n//      o[k] =\n//        bn(_o[k]) ||\n//        (Array.isArray(_o[k]) ? _o[k].map((v: any) => bn(v) || v) : _o[k]);\n//    });\n//    return o;\n//  };\n","import BigNumber from 'bignumber.js';\nimport { BaseContract } from 'ethers';\nimport { ZERO_BN } from '../../constants';\nimport type { BeanstalkSDK } from '../../lib/BeanstalkSDK';\nimport { BeanNumber } from '../../utils/BeanNumber/BeanNumber';\nimport { bigNumberResult } from '../../utils/Ledger';\nimport { toStringBaseUnitBN, toTokenUnitsBN } from '../../utils/Tokens';\n\n// import { BeanstalkToken } from './BeanstalkToken';\n// import { NativeToken } from './NativeToken';\n\n/**\n * A currency is any fungible financial instrument, including Ether, all ERC20 tokens, and other chain-native currencies\n */\nexport abstract class Token {\n  /** Reference to the SDK */\n  static sdk: BeanstalkSDK;\n\n  /** The contract address on the chain on which this token lives */\n  public readonly address: string;\n\n  /** The decimals used in representing currency amounts */\n  public readonly decimals: number;\n\n  /** The chain id of the chain this token lives on */\n  public readonly chainId: number;\n\n  /** The name of the currency, i.e. a descriptive textual non-unique identifier */\n  public name: string;\n\n  /** The display name of the currency, i.e. a descriptive textual non-unique identifier */\n  public readonly displayName: string;\n\n  /** The symbol of the currency, i.e. a short textual non-unique identifier */\n  public readonly symbol: string;\n\n  /** The square logo of the token. */\n  public logo?: string;\n\n  /** The color to use when displaying the token in charts, etc. */\n  public color?: string;\n\n  /** The number of decimals this token is recommended to be truncated to. */\n  public readonly displayDecimals: number;\n\n  /** Whether or not this is a LP token representing a position in a Pool. */\n  public readonly isLP: boolean;\n\n  /** Whether or not this is an Unripe token. */\n  public readonly isUnripe: boolean;\n\n  /** The Beanstalk STALK/SEED rewards per BDV of this token. */\n  public readonly rewards?: { stalk: number; seeds: number };\n\n  /**\n   * @param chainId the chain ID on which this currency resides\n   * @param address blockchain address where token contract resides\n   * @param decimals decimals of the currency\n   * @param metadata.symbol symbol of the currency\n   * @param metadata.name name of the currency, matches `.name()`\n   * @param metadata.displayName \n   */\n  constructor(\n    sdk: BeanstalkSDK,\n    address: string | null,\n    decimals: number,\n    metadata: {\n      name?: string;\n      displayName?: string;\n      symbol: string;\n      logo?: string;\n      color?: string;\n      displayDecimals?: number;\n      isLP?: boolean;\n      isUnripe?: boolean;\n    },\n    rewards?: {\n      stalk: number;\n      seeds: number;\n    }\n  ) {\n    Token.sdk = sdk;\n\n    /// Basic\n    this.address = address ?? '';\n    this.decimals = decimals;\n    this.chainId = sdk.chainId;\n\n    /// Metadata\n    this.name = metadata.name || metadata.symbol;\n    this.displayName = metadata.displayName || metadata.name || metadata.symbol;\n    this.symbol = metadata.symbol;\n    this.displayDecimals = metadata.displayDecimals || 2;\n    this.logo = metadata.logo;\n    this.color = metadata.color;\n    \n    /// Beanstalk-specific\n    this.isLP = metadata.isLP || false;\n    this.isUnripe = metadata.isUnripe || false;\n    this.rewards = rewards;\n  }\n\n  /** Get the amount of Stalk rewarded per deposited BDV of this Token. */\n  public getStalk(bdv?: BigNumber): BigNumber {\n    if (!this.rewards?.stalk) return ZERO_BN;\n    if (!bdv) return new BigNumber(this.rewards.stalk);\n    return bdv.times(this.rewards.stalk);\n  }\n\n  /** Get the amount of Seeds rewarded per deposited BDV of this Token. */\n  public getSeeds(bdv?: BigNumber): BigNumber {\n    if (!this.rewards?.seeds) return ZERO_BN;\n    if (!bdv) return new BigNumber(this.rewards.seeds);\n    return bdv.times(this.rewards.seeds);\n  }\n\n  abstract getContract(): BaseContract | null;\n\n  abstract getBalance(account: string): Promise<BeanNumber>;\n\n  abstract getAllowance(account: string, spender: string): Promise<BigNumber | undefined>;\n\n  abstract getTotalSupply(): Promise<BigNumber> | undefined;\n\n  /**\n   * Returns whether this currency is functionally equivalent to the other currency\n   * @param other the other currency\n   */\n  public equals(other: Token): boolean {\n    return this.address === other.address;\n  }\n\n  public toString(): string {\n    return this.name;\n  }\n\n  public setMetadata(metadata: {\n    logo?: string;\n    color?: string;\n  }) {\n    if (metadata.logo) this.logo = metadata.logo;\n    if (metadata.color) this.color = metadata.color;\n  }\n\n  /**\n   * Convert an `amount` of this Token into a string value\n   * based on the configured number of decimals.\n   *\n   * FIXME: better name\n   * FIXME: provide other side (toTokenUnitsBN)\n   *\n   * @param amount amount to convert\n   * @returns string\n   */\n  public stringify(amount: BigNumber.Value) {\n    return toStringBaseUnitBN(amount, this.decimals);\n  }\n\n  public stringifyToDecimal(amount: BigNumber.Value) {\n    return toTokenUnitsBN(amount, this.decimals)\n  }\n\n  public tokenResult (){\n    return (result: BigNumber) => toTokenUnitsBN(bigNumberResult(result), this.decimals);\n  };\n}\n\n","import BigNumber from \"bignumber.js\";\nimport { MAX_UINT256, NEW_BeanNumber, NEW_BN } from \"../../constants\";\nimport { Token } from \"./Token\";\n\nexport class BeanstalkToken extends Token {\n  // eslint-disable-next-line class-methods-use-this\n  public getContract() {\n    return null;\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  public getBalance() {\n    return Promise.resolve(NEW_BeanNumber);\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  public getAllowance() {\n    return Promise.resolve(new BigNumber(parseInt(MAX_UINT256, 16)));\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  public getTotalSupply() {\n    return undefined;\n  }\n}","/* Autogenerated file. Do not edit manually. */\n// @ts-nocheck\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Contract, Signer, utils } from \"ethers\";\nimport type { Provider } from \"@ethersproject/providers\";\nimport type { Beanstalk, BeanstalkInterface } from \"../../Beanstalk/Beanstalk\";\n\nconst _abi = [\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"token\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"bdv\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"beanToBDV\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"pure\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"curveToBDV\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"unripeBeanToBDV\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"unripeLPToBDV\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"fromToken\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"toToken\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"fromAmount\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"toAmount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Convert\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"token\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint32[]\",\n        name: \"seasons\",\n        type: \"uint32[]\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256[]\",\n        name: \"amounts\",\n        type: \"uint256[]\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"RemoveDeposits\",\n    type: \"event\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes\",\n        name: \"convertData\",\n        type: \"bytes\",\n      },\n      {\n        internalType: \"uint32[]\",\n        name: \"crates\",\n        type: \"uint32[]\",\n      },\n      {\n        internalType: \"uint256[]\",\n        name: \"amounts\",\n        type: \"uint256[]\",\n      },\n    ],\n    name: \"convert\",\n    outputs: [\n      {\n        internalType: \"uint32\",\n        name: \"toSeason\",\n        type: \"uint32\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"fromAmount\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"toAmount\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"fromBdv\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"toBdv\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"tokenIn\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"tokenOut\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amountIn\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"getAmountOut\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"amountOut\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"tokenIn\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"tokenOut\",\n        type: \"address\",\n      },\n    ],\n    name: \"getMaxAmountIn\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"amountIn\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"pool\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"registry\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256[]\",\n        name: \"amounts\",\n        type: \"uint256[]\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"minAmountOut\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"enum LibTransfer.From\",\n        name: \"fromMode\",\n        type: \"uint8\",\n      },\n      {\n        internalType: \"enum LibTransfer.To\",\n        name: \"toMode\",\n        type: \"uint8\",\n      },\n    ],\n    name: \"addLiquidity\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"pool\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"registry\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"fromToken\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"toToken\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amountIn\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"minAmountOut\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"enum LibTransfer.From\",\n        name: \"fromMode\",\n        type: \"uint8\",\n      },\n      {\n        internalType: \"enum LibTransfer.To\",\n        name: \"toMode\",\n        type: \"uint8\",\n      },\n    ],\n    name: \"exchange\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"pool\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"fromToken\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"toToken\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amountIn\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"minAmountOut\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"enum LibTransfer.From\",\n        name: \"fromMode\",\n        type: \"uint8\",\n      },\n      {\n        internalType: \"enum LibTransfer.To\",\n        name: \"toMode\",\n        type: \"uint8\",\n      },\n    ],\n    name: \"exchangeUnderlying\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"pool\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"registry\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amountIn\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256[]\",\n        name: \"minAmountsOut\",\n        type: \"uint256[]\",\n      },\n      {\n        internalType: \"enum LibTransfer.From\",\n        name: \"fromMode\",\n        type: \"uint8\",\n      },\n      {\n        internalType: \"enum LibTransfer.To\",\n        name: \"toMode\",\n        type: \"uint8\",\n      },\n    ],\n    name: \"removeLiquidity\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"pool\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"registry\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256[]\",\n        name: \"amountsOut\",\n        type: \"uint256[]\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"maxAmountIn\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"enum LibTransfer.From\",\n        name: \"fromMode\",\n        type: \"uint8\",\n      },\n      {\n        internalType: \"enum LibTransfer.To\",\n        name: \"toMode\",\n        type: \"uint8\",\n      },\n    ],\n    name: \"removeLiquidityImbalance\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"pool\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"registry\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"toToken\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amountIn\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"minAmountOut\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"enum LibTransfer.From\",\n        name: \"fromMode\",\n        type: \"uint8\",\n      },\n      {\n        internalType: \"enum LibTransfer.To\",\n        name: \"toMode\",\n        type: \"uint8\",\n      },\n    ],\n    name: \"removeLiquidityOneToken\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        components: [\n          {\n            internalType: \"address\",\n            name: \"target\",\n            type: \"address\",\n          },\n          {\n            internalType: \"bytes\",\n            name: \"callData\",\n            type: \"bytes\",\n          },\n          {\n            internalType: \"bytes\",\n            name: \"advancedData\",\n            type: \"bytes\",\n          },\n        ],\n        internalType: \"struct AdvancedPipe[]\",\n        name: \"pipes\",\n        type: \"tuple[]\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"advancedPipe\",\n    outputs: [\n      {\n        internalType: \"bytes[]\",\n        name: \"results\",\n        type: \"bytes[]\",\n      },\n    ],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        components: [\n          {\n            internalType: \"address\",\n            name: \"target\",\n            type: \"address\",\n          },\n          {\n            internalType: \"bytes\",\n            name: \"data\",\n            type: \"bytes\",\n          },\n        ],\n        internalType: \"struct Pipe\",\n        name: \"p\",\n        type: \"tuple\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"etherPipe\",\n    outputs: [\n      {\n        internalType: \"bytes\",\n        name: \"result\",\n        type: \"bytes\",\n      },\n    ],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        components: [\n          {\n            internalType: \"address\",\n            name: \"target\",\n            type: \"address\",\n          },\n          {\n            internalType: \"bytes\",\n            name: \"data\",\n            type: \"bytes\",\n          },\n        ],\n        internalType: \"struct Pipe[]\",\n        name: \"pipes\",\n        type: \"tuple[]\",\n      },\n    ],\n    name: \"multiPipe\",\n    outputs: [\n      {\n        internalType: \"bytes[]\",\n        name: \"results\",\n        type: \"bytes[]\",\n      },\n    ],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        components: [\n          {\n            internalType: \"address\",\n            name: \"target\",\n            type: \"address\",\n          },\n          {\n            internalType: \"bytes\",\n            name: \"data\",\n            type: \"bytes\",\n          },\n        ],\n        internalType: \"struct Pipe\",\n        name: \"p\",\n        type: \"tuple\",\n      },\n    ],\n    name: \"pipe\",\n    outputs: [\n      {\n        internalType: \"bytes\",\n        name: \"result\",\n        type: \"bytes\",\n      },\n    ],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        components: [\n          {\n            internalType: \"address\",\n            name: \"target\",\n            type: \"address\",\n          },\n          {\n            internalType: \"bytes\",\n            name: \"data\",\n            type: \"bytes\",\n          },\n        ],\n        internalType: \"struct Pipe\",\n        name: \"p\",\n        type: \"tuple\",\n      },\n    ],\n    name: \"readPipe\",\n    outputs: [\n      {\n        internalType: \"bytes\",\n        name: \"result\",\n        type: \"bytes\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        components: [\n          {\n            internalType: \"address\",\n            name: \"facetAddress\",\n            type: \"address\",\n          },\n          {\n            internalType: \"enum IDiamondCut.FacetCutAction\",\n            name: \"action\",\n            type: \"uint8\",\n          },\n          {\n            internalType: \"bytes4[]\",\n            name: \"functionSelectors\",\n            type: \"bytes4[]\",\n          },\n        ],\n        indexed: false,\n        internalType: \"struct IDiamondCut.FacetCut[]\",\n        name: \"_diamondCut\",\n        type: \"tuple[]\",\n      },\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"_init\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"bytes\",\n        name: \"_calldata\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"DiamondCut\",\n    type: \"event\",\n  },\n  {\n    inputs: [\n      {\n        components: [\n          {\n            internalType: \"address\",\n            name: \"facetAddress\",\n            type: \"address\",\n          },\n          {\n            internalType: \"enum IDiamondCut.FacetCutAction\",\n            name: \"action\",\n            type: \"uint8\",\n          },\n          {\n            internalType: \"bytes4[]\",\n            name: \"functionSelectors\",\n            type: \"bytes4[]\",\n          },\n        ],\n        internalType: \"struct IDiamondCut.FacetCut[]\",\n        name: \"_diamondCut\",\n        type: \"tuple[]\",\n      },\n      {\n        internalType: \"address\",\n        name: \"_init\",\n        type: \"address\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"_calldata\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"diamondCut\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes4\",\n        name: \"_functionSelector\",\n        type: \"bytes4\",\n      },\n    ],\n    name: \"facetAddress\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"facetAddress_\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"facetAddresses\",\n    outputs: [\n      {\n        internalType: \"address[]\",\n        name: \"facetAddresses_\",\n        type: \"address[]\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_facet\",\n        type: \"address\",\n      },\n    ],\n    name: \"facetFunctionSelectors\",\n    outputs: [\n      {\n        internalType: \"bytes4[]\",\n        name: \"facetFunctionSelectors_\",\n        type: \"bytes4[]\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"facets\",\n    outputs: [\n      {\n        components: [\n          {\n            internalType: \"address\",\n            name: \"facetAddress\",\n            type: \"address\",\n          },\n          {\n            internalType: \"bytes4[]\",\n            name: \"functionSelectors\",\n            type: \"bytes4[]\",\n          },\n        ],\n        internalType: \"struct IDiamondLoupe.Facet[]\",\n        name: \"facets_\",\n        type: \"tuple[]\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes4\",\n        name: \"_interfaceId\",\n        type: \"bytes4\",\n      },\n    ],\n    name: \"supportsInterface\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        components: [\n          {\n            internalType: \"bytes\",\n            name: \"callData\",\n            type: \"bytes\",\n          },\n          {\n            internalType: \"bytes\",\n            name: \"advancedData\",\n            type: \"bytes\",\n          },\n        ],\n        internalType: \"struct AdvancedData[]\",\n        name: \"data\",\n        type: \"tuple[]\",\n      },\n    ],\n    name: \"advancedFarm\",\n    outputs: [\n      {\n        internalType: \"bytes[]\",\n        name: \"results\",\n        type: \"bytes[]\",\n      },\n    ],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes[]\",\n        name: \"data\",\n        type: \"bytes[]\",\n      },\n    ],\n    name: \"farm\",\n    outputs: [\n      {\n        internalType: \"bytes[]\",\n        name: \"results\",\n        type: \"bytes[]\",\n      },\n    ],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"uint128\",\n        name: \"id\",\n        type: \"uint128\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint128\",\n        name: \"bpf\",\n        type: \"uint128\",\n      },\n    ],\n    name: \"SetFertilizer\",\n    type: \"event\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint128\",\n        name: \"id\",\n        type: \"uint128\",\n      },\n      {\n        internalType: \"uint128\",\n        name: \"amount\",\n        type: \"uint128\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"minLP\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"addFertilizerOwner\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address[]\",\n        name: \"accounts\",\n        type: \"address[]\",\n      },\n      {\n        internalType: \"uint256[]\",\n        name: \"ids\",\n        type: \"uint256[]\",\n      },\n    ],\n    name: \"balanceOfBatchFertilizer\",\n    outputs: [\n      {\n        components: [\n          {\n            internalType: \"uint128\",\n            name: \"amount\",\n            type: \"uint128\",\n          },\n          {\n            internalType: \"uint128\",\n            name: \"lastBpf\",\n            type: \"uint128\",\n          },\n        ],\n        internalType: \"struct IFertilizer.Balance[]\",\n        name: \"\",\n        type: \"tuple[]\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256[]\",\n        name: \"ids\",\n        type: \"uint256[]\",\n      },\n    ],\n    name: \"balanceOfFertilized\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"beans\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"id\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"balanceOfFertilizer\",\n    outputs: [\n      {\n        components: [\n          {\n            internalType: \"uint128\",\n            name: \"amount\",\n            type: \"uint128\",\n          },\n          {\n            internalType: \"uint128\",\n            name: \"lastBpf\",\n            type: \"uint128\",\n          },\n        ],\n        internalType: \"struct IFertilizer.Balance\",\n        name: \"\",\n        type: \"tuple\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256[]\",\n        name: \"ids\",\n        type: \"uint256[]\",\n      },\n    ],\n    name: \"balanceOfUnfertilized\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"beans\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"beansPerFertilizer\",\n    outputs: [\n      {\n        internalType: \"uint128\",\n        name: \"bpf\",\n        type: \"uint128\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256[]\",\n        name: \"ids\",\n        type: \"uint256[]\",\n      },\n      {\n        internalType: \"enum LibTransfer.To\",\n        name: \"mode\",\n        type: \"uint8\",\n      },\n    ],\n    name: \"claimFertilized\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"getActiveFertilizer\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"getCurrentHumidity\",\n    outputs: [\n      {\n        internalType: \"uint128\",\n        name: \"humidity\",\n        type: \"uint128\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"getEndBpf\",\n    outputs: [\n      {\n        internalType: \"uint128\",\n        name: \"endBpf\",\n        type: \"uint128\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint128\",\n        name: \"id\",\n        type: \"uint128\",\n      },\n    ],\n    name: \"getFertilizer\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"getFertilizers\",\n    outputs: [\n      {\n        components: [\n          {\n            internalType: \"uint128\",\n            name: \"endBpf\",\n            type: \"uint128\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"supply\",\n            type: \"uint256\",\n          },\n        ],\n        internalType: \"struct FertilizerFacet.Supply[]\",\n        name: \"fertilizers\",\n        type: \"tuple[]\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"getFirst\",\n    outputs: [\n      {\n        internalType: \"uint128\",\n        name: \"\",\n        type: \"uint128\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint128\",\n        name: \"_s\",\n        type: \"uint128\",\n      },\n    ],\n    name: \"getHumidity\",\n    outputs: [\n      {\n        internalType: \"uint128\",\n        name: \"humidity\",\n        type: \"uint128\",\n      },\n    ],\n    stateMutability: \"pure\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"getLast\",\n    outputs: [\n      {\n        internalType: \"uint128\",\n        name: \"\",\n        type: \"uint128\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint128\",\n        name: \"id\",\n        type: \"uint128\",\n      },\n    ],\n    name: \"getNext\",\n    outputs: [\n      {\n        internalType: \"uint128\",\n        name: \"\",\n        type: \"uint128\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"isFertilizing\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint128\",\n        name: \"amount\",\n        type: \"uint128\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"minLP\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"enum LibTransfer.From\",\n        name: \"mode\",\n        type: \"uint8\",\n      },\n    ],\n    name: \"mintFertilizer\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"payFertilizer\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"remainingRecapitalization\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"totalFertilizedBeans\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"beans\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"totalFertilizerBeans\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"beans\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"totalUnfertilizedBeans\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"beans\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256[]\",\n        name: \"plots\",\n        type: \"uint256[]\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"beans\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Harvest\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"index\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"PodListingCancelled\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"index\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"beans\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"pods\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Sow\",\n    type: \"event\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256[]\",\n        name: \"plots\",\n        type: \"uint256[]\",\n      },\n      {\n        internalType: \"enum LibTransfer.To\",\n        name: \"mode\",\n        type: \"uint8\",\n      },\n    ],\n    name: \"harvest\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"harvestableIndex\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"plotId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"plot\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"podIndex\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"enum LibTransfer.From\",\n        name: \"mode\",\n        type: \"uint8\",\n      },\n    ],\n    name: \"sow\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"minAmount\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"enum LibTransfer.From\",\n        name: \"mode\",\n        type: \"uint8\",\n      },\n    ],\n    name: \"sowWithMin\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"totalHarvestable\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"totalHarvested\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"totalPods\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"totalSoil\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"totalUnharvestable\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"uint32\",\n        name: \"id\",\n        type: \"uint32\",\n      },\n    ],\n    name: \"CompleteFundraiser\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"uint32\",\n        name: \"id\",\n        type: \"uint32\",\n      },\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"fundraiser\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"token\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"CreateFundraiser\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"uint32\",\n        name: \"id\",\n        type: \"uint32\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"FundFundraiser\",\n    type: \"event\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"payee\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"token\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"createFundraiser\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint32\",\n        name: \"id\",\n        type: \"uint32\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"enum LibTransfer.From\",\n        name: \"mode\",\n        type: \"uint8\",\n      },\n    ],\n    name: \"fund\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint32\",\n        name: \"id\",\n        type: \"uint32\",\n      },\n    ],\n    name: \"fundingToken\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint32\",\n        name: \"id\",\n        type: \"uint32\",\n      },\n    ],\n    name: \"fundraiser\",\n    outputs: [\n      {\n        components: [\n          {\n            internalType: \"address\",\n            name: \"payee\",\n            type: \"address\",\n          },\n          {\n            internalType: \"address\",\n            name: \"token\",\n            type: \"address\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"total\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"remaining\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"start\",\n            type: \"uint256\",\n          },\n        ],\n        internalType: \"struct Storage.Fundraiser\",\n        name: \"\",\n        type: \"tuple\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"numberOfFundraisers\",\n    outputs: [\n      {\n        internalType: \"uint32\",\n        name: \"\",\n        type: \"uint32\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint32\",\n        name: \"id\",\n        type: \"uint32\",\n      },\n    ],\n    name: \"remainingFunding\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint32\",\n        name: \"id\",\n        type: \"uint32\",\n      },\n    ],\n    name: \"totalFunding\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"uint256\",\n        name: \"id\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"pods\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"PlotTransfer\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"pods\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"PodApproval\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"index\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"start\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint24\",\n        name: \"pricePerPod\",\n        type: \"uint24\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"maxHarvestableIndex\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"bytes\",\n        name: \"pricingFunction\",\n        type: \"bytes\",\n      },\n      {\n        indexed: false,\n        internalType: \"enum LibTransfer.To\",\n        name: \"mode\",\n        type: \"uint8\",\n      },\n      {\n        indexed: false,\n        internalType: \"enum LibPolynomial.PriceType\",\n        name: \"pricingType\",\n        type: \"uint8\",\n      },\n    ],\n    name: \"PodListingCreated\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"index\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"start\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"costInBeans\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"PodListingFilled\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"bytes32\",\n        name: \"id\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"PodOrderCancelled\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"bytes32\",\n        name: \"id\",\n        type: \"bytes32\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint24\",\n        name: \"pricePerPod\",\n        type: \"uint24\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"maxPlaceInLine\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"bytes\",\n        name: \"pricingFunction\",\n        type: \"bytes\",\n      },\n      {\n        indexed: false,\n        internalType: \"enum LibPolynomial.PriceType\",\n        name: \"priceType\",\n        type: \"uint8\",\n      },\n    ],\n    name: \"PodOrderCreated\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"bytes32\",\n        name: \"id\",\n        type: \"bytes32\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"index\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"start\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"costInBeans\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"PodOrderFilled\",\n    type: \"event\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n    ],\n    name: \"allowancePods\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"approvePods\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"index\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"cancelPodListing\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint24\",\n        name: \"pricePerPod\",\n        type: \"uint24\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"maxPlaceInLine\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"enum LibTransfer.To\",\n        name: \"mode\",\n        type: \"uint8\",\n      },\n    ],\n    name: \"cancelPodOrder\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"maxPlaceInLine\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"pricingFunction\",\n        type: \"bytes\",\n      },\n      {\n        internalType: \"enum LibTransfer.To\",\n        name: \"mode\",\n        type: \"uint8\",\n      },\n    ],\n    name: \"cancelPodOrderV2\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"index\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"start\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint24\",\n        name: \"pricePerPod\",\n        type: \"uint24\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"maxHarvestableIndex\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"enum LibTransfer.To\",\n        name: \"mode\",\n        type: \"uint8\",\n      },\n    ],\n    name: \"createPodListing\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"index\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"start\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"maxHarvestableIndex\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"pricingFunction\",\n        type: \"bytes\",\n      },\n      {\n        internalType: \"enum LibTransfer.To\",\n        name: \"mode\",\n        type: \"uint8\",\n      },\n    ],\n    name: \"createPodListingV2\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"beanAmount\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint24\",\n        name: \"pricePerPod\",\n        type: \"uint24\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"maxPlaceInLine\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"enum LibTransfer.From\",\n        name: \"mode\",\n        type: \"uint8\",\n      },\n    ],\n    name: \"createPodOrder\",\n    outputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"id\",\n        type: \"bytes32\",\n      },\n    ],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"beanAmount\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"maxPlaceInLine\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"pricingFunction\",\n        type: \"bytes\",\n      },\n      {\n        internalType: \"enum LibTransfer.From\",\n        name: \"mode\",\n        type: \"uint8\",\n      },\n    ],\n    name: \"createPodOrderV2\",\n    outputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"id\",\n        type: \"bytes32\",\n      },\n    ],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        components: [\n          {\n            internalType: \"address\",\n            name: \"account\",\n            type: \"address\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"index\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"start\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"amount\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint24\",\n            name: \"pricePerPod\",\n            type: \"uint24\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"maxHarvestableIndex\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"enum LibTransfer.To\",\n            name: \"mode\",\n            type: \"uint8\",\n          },\n        ],\n        internalType: \"struct Listing.PodListing\",\n        name: \"l\",\n        type: \"tuple\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"beanAmount\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"enum LibTransfer.From\",\n        name: \"mode\",\n        type: \"uint8\",\n      },\n    ],\n    name: \"fillPodListing\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        components: [\n          {\n            internalType: \"address\",\n            name: \"account\",\n            type: \"address\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"index\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"start\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"amount\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint24\",\n            name: \"pricePerPod\",\n            type: \"uint24\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"maxHarvestableIndex\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"enum LibTransfer.To\",\n            name: \"mode\",\n            type: \"uint8\",\n          },\n        ],\n        internalType: \"struct Listing.PodListing\",\n        name: \"l\",\n        type: \"tuple\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"beanAmount\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"pricingFunction\",\n        type: \"bytes\",\n      },\n      {\n        internalType: \"enum LibTransfer.From\",\n        name: \"mode\",\n        type: \"uint8\",\n      },\n    ],\n    name: \"fillPodListingV2\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        components: [\n          {\n            internalType: \"address\",\n            name: \"account\",\n            type: \"address\",\n          },\n          {\n            internalType: \"uint24\",\n            name: \"pricePerPod\",\n            type: \"uint24\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"maxPlaceInLine\",\n            type: \"uint256\",\n          },\n        ],\n        internalType: \"struct Order.PodOrder\",\n        name: \"o\",\n        type: \"tuple\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"index\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"start\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"enum LibTransfer.To\",\n        name: \"mode\",\n        type: \"uint8\",\n      },\n    ],\n    name: \"fillPodOrder\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        components: [\n          {\n            internalType: \"address\",\n            name: \"account\",\n            type: \"address\",\n          },\n          {\n            internalType: \"uint24\",\n            name: \"pricePerPod\",\n            type: \"uint24\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"maxPlaceInLine\",\n            type: \"uint256\",\n          },\n        ],\n        internalType: \"struct Order.PodOrder\",\n        name: \"o\",\n        type: \"tuple\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"index\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"start\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"pricingFunction\",\n        type: \"bytes\",\n      },\n      {\n        internalType: \"enum LibTransfer.To\",\n        name: \"mode\",\n        type: \"uint8\",\n      },\n    ],\n    name: \"fillPodOrderV2\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"placeInLine\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amountPodsFromOrder\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"pricingFunction\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"getAmountBeansToFillOrderV2\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"beanAmount\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"pure\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"placeInLine\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"podListingAmount\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"fillBeanAmount\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"pricingFunction\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"getAmountPodsFromFillListingV2\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"pure\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"index\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"podListing\",\n    outputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"\",\n        type: \"bytes32\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint24\",\n        name: \"pricePerPod\",\n        type: \"uint24\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"maxPlaceInLine\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"podOrder\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"id\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"podOrderById\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"maxPlaceInLine\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"pricingFunction\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"podOrderV2\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"sender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"recipient\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"id\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"start\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"end\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"transferPlot\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"previousOwner\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"newOwner\",\n        type: \"address\",\n      },\n    ],\n    name: \"OwnershipTransferred\",\n    type: \"event\",\n  },\n  {\n    inputs: [],\n    name: \"claimOwnership\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"owner\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"owner_\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"ownerCandidate\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"ownerCandidate_\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_newOwner\",\n        type: \"address\",\n      },\n    ],\n    name: \"transferOwnership\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"timestamp\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Pause\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"timestamp\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"timePassed\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Unpause\",\n    type: \"event\",\n  },\n  {\n    inputs: [],\n    name: \"pause\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"unpause\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"beans\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Incentivization\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"uint32\",\n        name: \"season\",\n        type: \"uint32\",\n      },\n      {\n        indexed: false,\n        internalType: \"int256\",\n        name: \"deltaB\",\n        type: \"int256\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256[2]\",\n        name: \"balances\",\n        type: \"uint256[2]\",\n      },\n    ],\n    name: \"MetapoolOracle\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"uint32\",\n        name: \"season\",\n        type: \"uint32\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"toField\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"toSilo\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"toFertilizer\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Reward\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"uint256\",\n        name: \"season\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"toField\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"SeasonOfPlenty\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"uint32\",\n        name: \"season\",\n        type: \"uint32\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"soil\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Soil\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"uint256\",\n        name: \"season\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Sunrise\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"uint256\",\n        name: \"season\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"caseId\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"int8\",\n        name: \"change\",\n        type: \"int8\",\n      },\n    ],\n    name: \"WeatherChange\",\n    type: \"event\",\n  },\n  {\n    inputs: [],\n    name: \"paused\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint32\",\n        name: \"season\",\n        type: \"uint32\",\n      },\n    ],\n    name: \"plentyPerRoot\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"pool\",\n        type: \"address\",\n      },\n    ],\n    name: \"poolDeltaB\",\n    outputs: [\n      {\n        internalType: \"int256\",\n        name: \"deltaB\",\n        type: \"int256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"rain\",\n    outputs: [\n      {\n        components: [\n          {\n            internalType: \"uint256\",\n            name: \"depreciated\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"pods\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"roots\",\n            type: \"uint256\",\n          },\n        ],\n        internalType: \"struct Storage.Rain\",\n        name: \"\",\n        type: \"tuple\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"season\",\n    outputs: [\n      {\n        internalType: \"uint32\",\n        name: \"\",\n        type: \"uint32\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"seasonTime\",\n    outputs: [\n      {\n        internalType: \"uint32\",\n        name: \"\",\n        type: \"uint32\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"sunrise\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"time\",\n    outputs: [\n      {\n        components: [\n          {\n            internalType: \"uint32\",\n            name: \"current\",\n            type: \"uint32\",\n          },\n          {\n            internalType: \"uint32\",\n            name: \"lastSop\",\n            type: \"uint32\",\n          },\n          {\n            internalType: \"uint8\",\n            name: \"withdrawSeasons\",\n            type: \"uint8\",\n          },\n          {\n            internalType: \"uint32\",\n            name: \"lastSopSeason\",\n            type: \"uint32\",\n          },\n          {\n            internalType: \"uint32\",\n            name: \"rainStart\",\n            type: \"uint32\",\n          },\n          {\n            internalType: \"bool\",\n            name: \"raining\",\n            type: \"bool\",\n          },\n          {\n            internalType: \"bool\",\n            name: \"fertilizing\",\n            type: \"bool\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"start\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"period\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"timestamp\",\n            type: \"uint256\",\n          },\n        ],\n        internalType: \"struct Storage.Season\",\n        name: \"\",\n        type: \"tuple\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"totalDeltaB\",\n    outputs: [\n      {\n        internalType: \"int256\",\n        name: \"deltaB\",\n        type: \"int256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"weather\",\n    outputs: [\n      {\n        components: [\n          {\n            internalType: \"uint256\",\n            name: \"startSoil\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"lastDSoil\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint96\",\n            name: \"lastSoilPercent\",\n            type: \"uint96\",\n          },\n          {\n            internalType: \"uint32\",\n            name: \"lastSowTime\",\n            type: \"uint32\",\n          },\n          {\n            internalType: \"uint32\",\n            name: \"nextSowTime\",\n            type: \"uint32\",\n          },\n          {\n            internalType: \"uint32\",\n            name: \"yield\",\n            type: \"uint32\",\n          },\n          {\n            internalType: \"bool\",\n            name: \"didSowBelowMin\",\n            type: \"bool\",\n          },\n          {\n            internalType: \"bool\",\n            name: \"didSowFaster\",\n            type: \"bool\",\n          },\n        ],\n        internalType: \"struct Storage.Weather\",\n        name: \"\",\n        type: \"tuple\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"yield\",\n    outputs: [\n      {\n        internalType: \"uint32\",\n        name: \"\",\n        type: \"uint32\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"token\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint32\",\n        name: \"season\",\n        type: \"uint32\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"bdv\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"AddDeposit\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"token\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint32\",\n        name: \"season\",\n        type: \"uint32\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"AddWithdrawal\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"plenty\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"ClaimPlenty\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"token\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"DepositApproval\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"beans\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Plant\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"token\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint32\",\n        name: \"season\",\n        type: \"uint32\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"RemoveDeposit\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"token\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint32\",\n        name: \"season\",\n        type: \"uint32\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"RemoveWithdrawal\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"token\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint32[]\",\n        name: \"seasons\",\n        type: \"uint32[]\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"RemoveWithdrawals\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"int256\",\n        name: \"delta\",\n        type: \"int256\",\n      },\n    ],\n    name: \"SeedsBalanceChanged\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"int256\",\n        name: \"delta\",\n        type: \"int256\",\n      },\n      {\n        indexed: false,\n        internalType: \"int256\",\n        name: \"deltaRoots\",\n        type: \"int256\",\n      },\n    ],\n    name: \"StalkBalanceChanged\",\n    type: \"event\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"token\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"approveDeposit\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"balanceOfEarnedBeans\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"beans\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"balanceOfEarnedSeeds\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"balanceOfEarnedStalk\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"balanceOfGrownStalk\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"balanceOfPlenty\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"plenty\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"balanceOfRainRoots\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"balanceOfRoots\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"balanceOfSeeds\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"balanceOfSop\",\n    outputs: [\n      {\n        components: [\n          {\n            internalType: \"uint32\",\n            name: \"lastRain\",\n            type: \"uint32\",\n          },\n          {\n            internalType: \"uint32\",\n            name: \"lastSop\",\n            type: \"uint32\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"roots\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"plentyPerRoot\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"plenty\",\n            type: \"uint256\",\n          },\n        ],\n        internalType: \"struct SiloExit.AccountSeasonOfPlenty\",\n        name: \"sop\",\n        type: \"tuple\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"balanceOfStalk\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"claimPlenty\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"token\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint32\",\n        name: \"season\",\n        type: \"uint32\",\n      },\n      {\n        internalType: \"enum LibTransfer.To\",\n        name: \"mode\",\n        type: \"uint8\",\n      },\n    ],\n    name: \"claimWithdrawal\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"token\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint32[]\",\n        name: \"seasons\",\n        type: \"uint32[]\",\n      },\n      {\n        internalType: \"enum LibTransfer.To\",\n        name: \"mode\",\n        type: \"uint8\",\n      },\n    ],\n    name: \"claimWithdrawals\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"token\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"subtractedValue\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"decreaseDepositAllowance\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"token\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"enum LibTransfer.From\",\n        name: \"mode\",\n        type: \"uint8\",\n      },\n    ],\n    name: \"deposit\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"token\",\n        type: \"address\",\n      },\n    ],\n    name: \"depositAllowance\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"depositPermitDomainSeparator\",\n    outputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"\",\n        type: \"bytes32\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n    ],\n    name: \"depositPermitNonces\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"token\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint32\",\n        name: \"_season\",\n        type: \"uint32\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"enrootDeposit\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"token\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint32[]\",\n        name: \"seasons\",\n        type: \"uint32[]\",\n      },\n      {\n        internalType: \"uint256[]\",\n        name: \"amounts\",\n        type: \"uint256[]\",\n      },\n    ],\n    name: \"enrootDeposits\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"token\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint32\",\n        name: \"season\",\n        type: \"uint32\",\n      },\n    ],\n    name: \"getDeposit\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"token\",\n        type: \"address\",\n      },\n    ],\n    name: \"getTotalDeposited\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"token\",\n        type: \"address\",\n      },\n    ],\n    name: \"getTotalWithdrawn\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"token\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint32\",\n        name: \"season\",\n        type: \"uint32\",\n      },\n    ],\n    name: \"getWithdrawal\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"token\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"addedValue\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"increaseDepositAllowance\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"lastSeasonOfPlenty\",\n    outputs: [\n      {\n        internalType: \"uint32\",\n        name: \"\",\n        type: \"uint32\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"lastUpdate\",\n    outputs: [\n      {\n        internalType: \"uint32\",\n        name: \"\",\n        type: \"uint32\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"token\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"deadline\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint8\",\n        name: \"v\",\n        type: \"uint8\",\n      },\n      {\n        internalType: \"bytes32\",\n        name: \"r\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"bytes32\",\n        name: \"s\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"permitDeposit\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address[]\",\n        name: \"tokens\",\n        type: \"address[]\",\n      },\n      {\n        internalType: \"uint256[]\",\n        name: \"values\",\n        type: \"uint256[]\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"deadline\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint8\",\n        name: \"v\",\n        type: \"uint8\",\n      },\n      {\n        internalType: \"bytes32\",\n        name: \"r\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"bytes32\",\n        name: \"s\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"permitDeposits\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"plant\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"beans\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"token\",\n        type: \"address\",\n      },\n    ],\n    name: \"tokenSettings\",\n    outputs: [\n      {\n        components: [\n          {\n            internalType: \"bytes4\",\n            name: \"selector\",\n            type: \"bytes4\",\n          },\n          {\n            internalType: \"uint32\",\n            name: \"seeds\",\n            type: \"uint32\",\n          },\n          {\n            internalType: \"uint32\",\n            name: \"stalk\",\n            type: \"uint32\",\n          },\n        ],\n        internalType: \"struct Storage.SiloSettings\",\n        name: \"\",\n        type: \"tuple\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"totalEarnedBeans\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"totalRoots\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"totalSeeds\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"totalStalk\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"sender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"recipient\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"token\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint32\",\n        name: \"season\",\n        type: \"uint32\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"transferDeposit\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"bdv\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"sender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"recipient\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"token\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint32[]\",\n        name: \"seasons\",\n        type: \"uint32[]\",\n      },\n      {\n        internalType: \"uint256[]\",\n        name: \"amounts\",\n        type: \"uint256[]\",\n      },\n    ],\n    name: \"transferDeposits\",\n    outputs: [\n      {\n        internalType: \"uint256[]\",\n        name: \"bdvs\",\n        type: \"uint256[]\",\n      },\n    ],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"update\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"token\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint32\",\n        name: \"season\",\n        type: \"uint32\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"withdrawDeposit\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"token\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint32[]\",\n        name: \"seasons\",\n        type: \"uint32[]\",\n      },\n      {\n        internalType: \"uint256[]\",\n        name: \"amounts\",\n        type: \"uint256[]\",\n      },\n    ],\n    name: \"withdrawDeposits\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"withdrawFreeze\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"user\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"contract IERC20\",\n        name: \"token\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"int256\",\n        name: \"delta\",\n        type: \"int256\",\n      },\n    ],\n    name: \"InternalBalanceChanged\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"contract IERC20\",\n        name: \"token\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"TokenApproval\",\n    type: \"event\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"contract IERC20\",\n        name: \"token\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"approveToken\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"contract IERC20\",\n        name: \"token\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"subtractedValue\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"decreaseTokenAllowance\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        internalType: \"contract IERC20\",\n        name: \"token\",\n        type: \"address\",\n      },\n    ],\n    name: \"getAllBalance\",\n    outputs: [\n      {\n        components: [\n          {\n            internalType: \"uint256\",\n            name: \"internalBalance\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"externalBalance\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"totalBalance\",\n            type: \"uint256\",\n          },\n        ],\n        internalType: \"struct TokenFacet.Balance\",\n        name: \"b\",\n        type: \"tuple\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        internalType: \"contract IERC20[]\",\n        name: \"tokens\",\n        type: \"address[]\",\n      },\n    ],\n    name: \"getAllBalances\",\n    outputs: [\n      {\n        components: [\n          {\n            internalType: \"uint256\",\n            name: \"internalBalance\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"externalBalance\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"totalBalance\",\n            type: \"uint256\",\n          },\n        ],\n        internalType: \"struct TokenFacet.Balance[]\",\n        name: \"balances\",\n        type: \"tuple[]\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        internalType: \"contract IERC20\",\n        name: \"token\",\n        type: \"address\",\n      },\n    ],\n    name: \"getBalance\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"balance\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        internalType: \"contract IERC20[]\",\n        name: \"tokens\",\n        type: \"address[]\",\n      },\n    ],\n    name: \"getBalances\",\n    outputs: [\n      {\n        internalType: \"uint256[]\",\n        name: \"balances\",\n        type: \"uint256[]\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        internalType: \"contract IERC20\",\n        name: \"token\",\n        type: \"address\",\n      },\n    ],\n    name: \"getExternalBalance\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"balance\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        internalType: \"contract IERC20[]\",\n        name: \"tokens\",\n        type: \"address[]\",\n      },\n    ],\n    name: \"getExternalBalances\",\n    outputs: [\n      {\n        internalType: \"uint256[]\",\n        name: \"balances\",\n        type: \"uint256[]\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        internalType: \"contract IERC20\",\n        name: \"token\",\n        type: \"address\",\n      },\n    ],\n    name: \"getInternalBalance\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"balance\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        internalType: \"contract IERC20[]\",\n        name: \"tokens\",\n        type: \"address[]\",\n      },\n    ],\n    name: \"getInternalBalances\",\n    outputs: [\n      {\n        internalType: \"uint256[]\",\n        name: \"balances\",\n        type: \"uint256[]\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"contract IERC20\",\n        name: \"token\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"addedValue\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"increaseTokenAllowance\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"contract IERC20Permit\",\n        name: \"token\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"deadline\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint8\",\n        name: \"v\",\n        type: \"uint8\",\n      },\n      {\n        internalType: \"bytes32\",\n        name: \"r\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"bytes32\",\n        name: \"s\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"permitERC20\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"token\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"deadline\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint8\",\n        name: \"v\",\n        type: \"uint8\",\n      },\n      {\n        internalType: \"bytes32\",\n        name: \"r\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"bytes32\",\n        name: \"s\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"permitToken\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"contract IERC20\",\n        name: \"token\",\n        type: \"address\",\n      },\n    ],\n    name: \"tokenAllowance\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"tokenPermitDomainSeparator\",\n    outputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"\",\n        type: \"bytes32\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n    ],\n    name: \"tokenPermitNonces\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"contract IERC20\",\n        name: \"token\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"recipient\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"enum LibTransfer.From\",\n        name: \"fromMode\",\n        type: \"uint8\",\n      },\n      {\n        internalType: \"enum LibTransfer.To\",\n        name: \"toMode\",\n        type: \"uint8\",\n      },\n    ],\n    name: \"transferToken\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"contract IERC20\",\n        name: \"token\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"sender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"recipient\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"enum LibTransfer.From\",\n        name: \"fromMode\",\n        type: \"uint8\",\n      },\n      {\n        internalType: \"enum LibTransfer.To\",\n        name: \"toMode\",\n        type: \"uint8\",\n      },\n    ],\n    name: \"transferTokenFrom\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"enum LibTransfer.From\",\n        name: \"mode\",\n        type: \"uint8\",\n      },\n    ],\n    name: \"unwrapEth\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"enum LibTransfer.To\",\n        name: \"mode\",\n        type: \"uint8\",\n      },\n    ],\n    name: \"wrapEth\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"unripeToken\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"underlyingToken\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"bytes32\",\n        name: \"merkleRoot\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"AddUnripeToken\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"token\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"int256\",\n        name: \"underlying\",\n        type: \"int256\",\n      },\n    ],\n    name: \"ChangeUnderlying\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"token\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"underlying\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Chop\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"token\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Pick\",\n    type: \"event\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"unripeToken\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"supply\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"_getPenalizedUnderlying\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"redeem\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"unripeToken\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"underlyingToken\",\n        type: \"address\",\n      },\n      {\n        internalType: \"bytes32\",\n        name: \"root\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"addUnripeToken\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"unripeToken\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"balanceOfPenalizedUnderlying\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"underlying\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"unripeToken\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"balanceOfUnderlying\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"underlying\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"unripeToken\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"enum LibTransfer.From\",\n        name: \"fromMode\",\n        type: \"uint8\",\n      },\n      {\n        internalType: \"enum LibTransfer.To\",\n        name: \"toMode\",\n        type: \"uint8\",\n      },\n    ],\n    name: \"chop\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"underlyingAmount\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"unripeToken\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"getPenalizedUnderlying\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"redeem\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"unripeToken\",\n        type: \"address\",\n      },\n    ],\n    name: \"getPenalty\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"penalty\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"unripeToken\",\n        type: \"address\",\n      },\n    ],\n    name: \"getPercentPenalty\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"penalty\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"unripeToken\",\n        type: \"address\",\n      },\n    ],\n    name: \"getRecapFundedPercent\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"percent\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"getRecapPaidPercent\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"penalty\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"unripeToken\",\n        type: \"address\",\n      },\n    ],\n    name: \"getTotalUnderlying\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"underlying\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"unripeToken\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"getUnderlying\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"redeem\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"unripeToken\",\n        type: \"address\",\n      },\n    ],\n    name: \"getUnderlyingPerUnripeToken\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"underlyingPerToken\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"unripeToken\",\n        type: \"address\",\n      },\n    ],\n    name: \"getUnderlyingToken\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"underlyingToken\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"unripeToken\",\n        type: \"address\",\n      },\n    ],\n    name: \"isUnripe\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"unripe\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"token\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"bytes32[]\",\n        name: \"proof\",\n        type: \"bytes32[]\",\n      },\n      {\n        internalType: \"enum LibTransfer.To\",\n        name: \"mode\",\n        type: \"uint8\",\n      },\n    ],\n    name: \"pick\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"token\",\n        type: \"address\",\n      },\n    ],\n    name: \"picked\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"token\",\n        type: \"address\",\n      },\n    ],\n    name: \"DewhitelistToken\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"token\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"bytes4\",\n        name: \"selector\",\n        type: \"bytes4\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"seeds\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"stalk\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"WhitelistToken\",\n    type: \"event\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"token\",\n        type: \"address\",\n      },\n    ],\n    name: \"dewhitelistToken\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"token\",\n        type: \"address\",\n      },\n      {\n        internalType: \"bytes4\",\n        name: \"selector\",\n        type: \"bytes4\",\n      },\n      {\n        internalType: \"uint32\",\n        name: \"stalk\",\n        type: \"uint32\",\n      },\n      {\n        internalType: \"uint32\",\n        name: \"seeds\",\n        type: \"uint32\",\n      },\n    ],\n    name: \"whitelistToken\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n];\n\nexport class Beanstalk__factory {\n  static readonly abi = _abi;\n  static createInterface(): BeanstalkInterface {\n    return new utils.Interface(_abi) as BeanstalkInterface;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): Beanstalk {\n    return new Contract(address, _abi, signerOrProvider) as Beanstalk;\n  }\n}\n","/* Autogenerated file. Do not edit manually. */\n// @ts-nocheck\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Contract, Signer, utils } from \"ethers\";\nimport type { Provider } from \"@ethersproject/providers\";\nimport type {\n  BeanstalkFertilizer,\n  BeanstalkFertilizerInterface,\n} from \"../../Beanstalk/BeanstalkFertilizer\";\n\nconst _abi = [\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"bool\",\n        name: \"approved\",\n        type: \"bool\",\n      },\n    ],\n    name: \"ApprovalForAll\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"uint8\",\n        name: \"version\",\n        type: \"uint8\",\n      },\n    ],\n    name: \"Initialized\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"previousOwner\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"newOwner\",\n        type: \"address\",\n      },\n    ],\n    name: \"OwnershipTransferred\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256[]\",\n        name: \"ids\",\n        type: \"uint256[]\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256[]\",\n        name: \"values\",\n        type: \"uint256[]\",\n      },\n    ],\n    name: \"TransferBatch\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"id\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"TransferSingle\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"string\",\n        name: \"value\",\n        type: \"string\",\n      },\n      {\n        indexed: true,\n        internalType: \"uint256\",\n        name: \"id\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"URI\",\n    type: \"event\",\n  },\n  {\n    inputs: [],\n    name: \"USDC\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"WETH\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"id\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"balanceOf\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address[]\",\n        name: \"accounts\",\n        type: \"address[]\",\n      },\n      {\n        internalType: \"uint256[]\",\n        name: \"ids\",\n        type: \"uint256[]\",\n      },\n    ],\n    name: \"balanceOfBatch\",\n    outputs: [\n      {\n        internalType: \"uint256[]\",\n        name: \"\",\n        type: \"uint256[]\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"buyAmount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"buyAndMint\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"getMintId\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"ethAmount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"getUsdcOut\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"ethAmount\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"slippage\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"getUsdcOutWithSlippage\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"initialize\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n    ],\n    name: \"isApprovedForAll\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"id\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"lastBalanceOf\",\n    outputs: [\n      {\n        components: [\n          {\n            internalType: \"uint128\",\n            name: \"amount\",\n            type: \"uint128\",\n          },\n          {\n            internalType: \"uint128\",\n            name: \"lastBpf\",\n            type: \"uint128\",\n          },\n        ],\n        internalType: \"struct PreFertilizer.Balance\",\n        name: \"\",\n        type: \"tuple\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"mint\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"name\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"pure\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"owner\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"remaining\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"renounceOwnership\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256[]\",\n        name: \"ids\",\n        type: \"uint256[]\",\n      },\n      {\n        internalType: \"uint256[]\",\n        name: \"amounts\",\n        type: \"uint256[]\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"data\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"safeBatchTransferFrom\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"id\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"data\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"safeTransferFrom\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n      {\n        internalType: \"bool\",\n        name: \"approved\",\n        type: \"bool\",\n      },\n    ],\n    name: \"setApprovalForAll\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"string\",\n        name: \"newuri\",\n        type: \"string\",\n      },\n    ],\n    name: \"setURI\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes4\",\n        name: \"interfaceId\",\n        type: \"bytes4\",\n      },\n    ],\n    name: \"supportsInterface\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"symbol\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"pure\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"newOwner\",\n        type: \"address\",\n      },\n    ],\n    name: \"transferOwnership\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"uri\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n];\n\nexport class BeanstalkFertilizer__factory {\n  static readonly abi = _abi;\n  static createInterface(): BeanstalkFertilizerInterface {\n    return new utils.Interface(_abi) as BeanstalkFertilizerInterface;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): BeanstalkFertilizer {\n    return new Contract(address, _abi, signerOrProvider) as BeanstalkFertilizer;\n  }\n}\n","/* Autogenerated file. Do not edit manually. */\n// @ts-nocheck\n/* tslint:disable */\n/* eslint-disable */\nimport { Signer, utils, Contract, ContractFactory, Overrides } from \"ethers\";\nimport type { Provider, TransactionRequest } from \"@ethersproject/providers\";\nimport type { PromiseOrValue } from \"../../common\";\nimport type { Root, RootInterface } from \"../../Beanstalk/Root\";\n\nconst _abi = [\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"token\",\n        type: \"address\",\n      },\n    ],\n    name: \"AddWhitelistToken\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"previousAdmin\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"newAdmin\",\n        type: \"address\",\n      },\n    ],\n    name: \"AdminChanged\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Approval\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"beacon\",\n        type: \"address\",\n      },\n    ],\n    name: \"BeaconUpgraded\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"uint8\",\n        name: \"version\",\n        type: \"uint8\",\n      },\n    ],\n    name: \"Initialized\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        components: [\n          {\n            internalType: \"address\",\n            name: \"token\",\n            type: \"address\",\n          },\n          {\n            internalType: \"uint32[]\",\n            name: \"seasons\",\n            type: \"uint32[]\",\n          },\n          {\n            internalType: \"uint256[]\",\n            name: \"amounts\",\n            type: \"uint256[]\",\n          },\n        ],\n        indexed: false,\n        internalType: \"struct DepositTransfer[]\",\n        name: \"deposits\",\n        type: \"tuple[]\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"bdv\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"stalk\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"seeds\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"shares\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Mint\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"previousOwner\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"newOwner\",\n        type: \"address\",\n      },\n    ],\n    name: \"OwnershipTransferred\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        components: [\n          {\n            internalType: \"address\",\n            name: \"token\",\n            type: \"address\",\n          },\n          {\n            internalType: \"uint32[]\",\n            name: \"seasons\",\n            type: \"uint32[]\",\n          },\n          {\n            internalType: \"uint256[]\",\n            name: \"amounts\",\n            type: \"uint256[]\",\n          },\n        ],\n        indexed: false,\n        internalType: \"struct DepositTransfer[]\",\n        name: \"deposits\",\n        type: \"tuple[]\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"bdv\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"stalk\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"seeds\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"shares\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Redeem\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"token\",\n        type: \"address\",\n      },\n    ],\n    name: \"RemoveWhitelistToken\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Transfer\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"implementation\",\n        type: \"address\",\n      },\n    ],\n    name: \"Upgraded\",\n    type: \"event\",\n  },\n  {\n    inputs: [],\n    name: \"BEANSTALK_ADDRESS\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"DOMAIN_SEPARATOR\",\n    outputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"\",\n        type: \"bytes32\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"token\",\n        type: \"address\",\n      },\n    ],\n    name: \"addWhitelistToken\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n    ],\n    name: \"allowance\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"approve\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"balanceOf\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"bdvPerRoot\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"token\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint32\",\n        name: \"season\",\n        type: \"uint32\",\n      },\n    ],\n    name: \"convertLambdaToLambda\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address[]\",\n        name: \"tokens\",\n        type: \"address[]\",\n      },\n      {\n        internalType: \"uint32[]\",\n        name: \"seasons\",\n        type: \"uint32[]\",\n      },\n    ],\n    name: \"convertLambdasToLambdas\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"decimals\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"subtractedValue\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"decreaseAllowance\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"earn\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"addedValue\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"increaseAllowance\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"string\",\n        name: \"name\",\n        type: \"string\",\n      },\n      {\n        internalType: \"string\",\n        name: \"symbol\",\n        type: \"string\",\n      },\n    ],\n    name: \"initialize\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        components: [\n          {\n            internalType: \"address\",\n            name: \"token\",\n            type: \"address\",\n          },\n          {\n            internalType: \"uint32[]\",\n            name: \"seasons\",\n            type: \"uint32[]\",\n          },\n          {\n            internalType: \"uint256[]\",\n            name: \"amounts\",\n            type: \"uint256[]\",\n          },\n        ],\n        internalType: \"struct DepositTransfer[]\",\n        name: \"depositTransfers\",\n        type: \"tuple[]\",\n      },\n      {\n        internalType: \"enum To\",\n        name: \"mode\",\n        type: \"uint8\",\n      },\n    ],\n    name: \"mint\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        components: [\n          {\n            internalType: \"address\",\n            name: \"token\",\n            type: \"address\",\n          },\n          {\n            internalType: \"uint32[]\",\n            name: \"seasons\",\n            type: \"uint32[]\",\n          },\n          {\n            internalType: \"uint256[]\",\n            name: \"amounts\",\n            type: \"uint256[]\",\n          },\n        ],\n        internalType: \"struct DepositTransfer[]\",\n        name: \"depositTransfers\",\n        type: \"tuple[]\",\n      },\n      {\n        internalType: \"enum To\",\n        name: \"mode\",\n        type: \"uint8\",\n      },\n      {\n        internalType: \"address\",\n        name: \"token\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"deadline\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint8\",\n        name: \"v\",\n        type: \"uint8\",\n      },\n      {\n        internalType: \"bytes32\",\n        name: \"r\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"bytes32\",\n        name: \"s\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"mintWithTokenPermit\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        components: [\n          {\n            internalType: \"address\",\n            name: \"token\",\n            type: \"address\",\n          },\n          {\n            internalType: \"uint32[]\",\n            name: \"seasons\",\n            type: \"uint32[]\",\n          },\n          {\n            internalType: \"uint256[]\",\n            name: \"amounts\",\n            type: \"uint256[]\",\n          },\n        ],\n        internalType: \"struct DepositTransfer[]\",\n        name: \"depositTransfers\",\n        type: \"tuple[]\",\n      },\n      {\n        internalType: \"enum To\",\n        name: \"mode\",\n        type: \"uint8\",\n      },\n      {\n        internalType: \"address[]\",\n        name: \"tokens\",\n        type: \"address[]\",\n      },\n      {\n        internalType: \"uint256[]\",\n        name: \"values\",\n        type: \"uint256[]\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"deadline\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint8\",\n        name: \"v\",\n        type: \"uint8\",\n      },\n      {\n        internalType: \"bytes32\",\n        name: \"r\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"bytes32\",\n        name: \"s\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"mintWithTokensPermit\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"name\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n    ],\n    name: \"nonces\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"owner\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"deadline\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint8\",\n        name: \"v\",\n        type: \"uint8\",\n      },\n      {\n        internalType: \"bytes32\",\n        name: \"r\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"bytes32\",\n        name: \"s\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"permit\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"proxiableUUID\",\n    outputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"\",\n        type: \"bytes32\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        components: [\n          {\n            internalType: \"address\",\n            name: \"token\",\n            type: \"address\",\n          },\n          {\n            internalType: \"uint32[]\",\n            name: \"seasons\",\n            type: \"uint32[]\",\n          },\n          {\n            internalType: \"uint256[]\",\n            name: \"amounts\",\n            type: \"uint256[]\",\n          },\n        ],\n        internalType: \"struct DepositTransfer[]\",\n        name: \"depositTransfers\",\n        type: \"tuple[]\",\n      },\n      {\n        internalType: \"enum From\",\n        name: \"mode\",\n        type: \"uint8\",\n      },\n    ],\n    name: \"redeem\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        components: [\n          {\n            internalType: \"address\",\n            name: \"token\",\n            type: \"address\",\n          },\n          {\n            internalType: \"uint32[]\",\n            name: \"seasons\",\n            type: \"uint32[]\",\n          },\n          {\n            internalType: \"uint256[]\",\n            name: \"amounts\",\n            type: \"uint256[]\",\n          },\n        ],\n        internalType: \"struct DepositTransfer[]\",\n        name: \"depositTransfers\",\n        type: \"tuple[]\",\n      },\n      {\n        internalType: \"enum From\",\n        name: \"mode\",\n        type: \"uint8\",\n      },\n      {\n        internalType: \"address\",\n        name: \"token\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"deadline\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint8\",\n        name: \"v\",\n        type: \"uint8\",\n      },\n      {\n        internalType: \"bytes32\",\n        name: \"r\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"bytes32\",\n        name: \"s\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"redeemWithFarmBalancePermit\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"token\",\n        type: \"address\",\n      },\n    ],\n    name: \"removeWhitelistToken\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"renounceOwnership\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_delegateContract\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"_delegate\",\n        type: \"address\",\n      },\n      {\n        internalType: \"bytes32\",\n        name: \"_snapshotId\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"setDelegate\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"symbol\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"totalSupply\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"transfer\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"transferFrom\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"newOwner\",\n        type: \"address\",\n      },\n    ],\n    name: \"transferOwnership\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"underlyingBdv\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"newImplementation\",\n        type: \"address\",\n      },\n    ],\n    name: \"upgradeTo\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"newImplementation\",\n        type: \"address\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"data\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"upgradeToAndCall\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    name: \"whitelisted\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n];\n\nconst _bytecode =\n  \"0x60a06040523060601b60805234801561001757600080fd5b5060805160601c6143e6610052600039600081816107e60152818161087001528181610be701528181610c6c0152610d5201526143e66000f3fe60806040526004361061024f5760003560e01c80637ecebe0011610138578063bb9e09c8116100b0578063d5812a4b1161007f578063dd62ed3e11610064578063dd62ed3e14610676578063e9ee9107146106bc578063f2fde38b146106dc57600080fd5b8063d5812a4b14610625578063d936547e1461064557600080fd5b8063bb9e09c8146105bb578063d389800f146105d0578063d3b3f9b4146105e5578063d505accf1461060557600080fd5b806395d89b4111610107578063a457c2d7116100ec578063a457c2d714610553578063a9059cbb14610573578063aa1968271461059357600080fd5b806395d89b4114610527578063964772311461053c57600080fd5b80637ecebe0014610494578063863b1f6a146104b45780638da5cb5b146104d45780639168083c1461050757600080fd5b80633e060391116101cb57806352d1902d1161019a578063715018a61161017f578063715018a61461043f578063746c1519146104545780637b529a4f1461047457600080fd5b806352d1902d146103f457806370a082311461040957600080fd5b80633e060391146103815780634cd88b76146103a15780634f1dd0a7146103c15780634f1ef286146103e157600080fd5b8063313ce567116102225780633659cfe6116102075780633659cfe61461031f57806339509351146103415780633b788da91461036157600080fd5b8063313ce567146102ee5780633644e5151461030a57600080fd5b806306fdde0314610254578063095ea7b31461027f57806318160ddd146102af57806323b872dd146102ce575b600080fd5b34801561026057600080fd5b506102696106fc565b6040516102769190614082565b60405180910390f35b34801561028b57600080fd5b5061029f61029a36600461388c565b61078e565b6040519015158152602001610276565b3480156102bb57600080fd5b506099545b604051908152602001610276565b3480156102da57600080fd5b5061029f6102e9366004613789565b6107a6565b3480156102fa57600080fd5b5060405160128152602001610276565b34801561031657600080fd5b506102c06107cc565b34801561032b57600080fd5b5061033f61033a36600461373d565b6107db565b005b34801561034d57600080fd5b5061029f61035c36600461388c565b61095c565b34801561036d57600080fd5b5061033f61037c366004613789565b61099b565b34801561038d57600080fd5b5061033f61039c3660046138b5565b610a7d565b3480156103ad57600080fd5b5061033f6103bc366004613c35565b610a8b565b3480156103cd57600080fd5b506102c06103dc366004613954565b610bbf565b61033f6103ef36600461382d565b610bdc565b34801561040057600080fd5b506102c0610d45565b34801561041557600080fd5b506102c061042436600461373d565b6001600160a01b031660009081526097602052604090205490565b34801561044b57600080fd5b5061033f610e0a565b34801561046057600080fd5b506102c061046f366004613a40565b610e1e565b34801561048057600080fd5b5061033f61048f3660046138eb565b610e33565b3480156104a057600080fd5b506102c06104af36600461373d565b610ec7565b3480156104c057600080fd5b506102c06104cf366004613a89565b610ee7565b3480156104e057600080fd5b50610130546001600160a01b03165b6040516001600160a01b039091168152602001610276565b34801561051357600080fd5b5061033f61052236600461373d565b610fc7565b34801561053357600080fd5b5061026961101c565b34801561054857600080fd5b506102c06101635481565b34801561055f57600080fd5b5061029f61056e36600461388c565b61102b565b34801561057f57600080fd5b5061029f61058e36600461388c565b6110e0565b34801561059f57600080fd5b506104ef73c1e088fc1323b20bcbee9bd1b9fc9546db5624c581565b3480156105c757600080fd5b506102c06110ee565b3480156105dc57600080fd5b5061033f61111a565b3480156105f157600080fd5b506102c06106003660046139a6565b6111c0565b34801561061157600080fd5b5061033f6106203660046137c4565b611291565b34801561063157600080fd5b506102c0610640366004613adc565b6113f5565b34801561065157600080fd5b5061029f61066036600461373d565b6101626020526000908152604090205460ff1681565b34801561068257600080fd5b506102c0610691366004613757565b6001600160a01b03918216600090815260986020908152604080832093909416825291909152205490565b3480156106c857600080fd5b5061033f6106d736600461373d565b611456565b3480156106e857600080fd5b5061033f6106f736600461373d565b6114a8565b6060609a805461070b906142e5565b80601f0160208091040260200160405190810160405280929190818152602001828054610737906142e5565b80156107845780601f1061075957610100808354040283529160200191610784565b820191906000526020600020905b81548152906001019060200180831161076757829003601f168201915b5050505050905090565b60003361079c818585611535565b5060019392505050565b6000336107b485828561168d565b6107bf85858561171f565b60019150505b9392505050565b60006107d6611936565b905090565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016141561086e5760405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201526b19195b1959d85d1958d85b1b60a21b60648201526084015b60405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166108c97f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b6001600160a01b0316146109345760405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201526b6163746976652070726f787960a01b6064820152608401610865565b61093d816119b1565b60408051600080825260208201909252610959918391906119b9565b50565b3360008181526098602090815260408083206001600160a01b038716845290915281205490919061079c9082908690610996908790614113565b611535565b6109a3611b68565b6001600160a01b038216610a2a576040517ff0bedbe2000000000000000000000000000000000000000000000000000000008152600481018290526001600160a01b0384169063f0bedbe2906024015b600060405180830381600087803b158015610a0d57600080fd5b505af1158015610a21573d6000803e3d6000fd5b50505050505050565b6040517fbd86e508000000000000000000000000000000000000000000000000000000008152600481018290526001600160a01b03838116602483015284169063bd86e508906044016109f3565b505050565b610a878282611bc3565b5050565b600054610100900460ff1615808015610aab5750600054600160ff909116105b80610ac55750303b158015610ac5575060005460ff166001145b610b375760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a65640000000000000000000000000000000000006064820152608401610865565b6000805460ff191660011790558015610b5a576000805461ff0019166101001790555b610b648383611e1c565b610b6d83611e91565b610b75611f3b565b8015610a78576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a1505050565b6000610bd4610bce8486614181565b83611fae565b949350505050565b306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161415610c6a5760405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201526b19195b1959d85d1958d85b1b60a21b6064820152608401610865565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610cc57f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b6001600160a01b031614610d305760405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201526b6163746976652070726f787960a01b6064820152608401610865565b610d39826119b1565b610a87828260016119b9565b6000306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610de55760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c00000000000000006064820152608401610865565b507f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc90565b610e12611b68565b610e1c60006120e3565b565b6000610bd4610e2d8486614181565b83612143565b60005b83811015610ec057610eb0858583818110610e6157634e487b7160e01b600052603260045260246000fd5b9050602002016020810190610e76919061373d565b848484818110610e9657634e487b7160e01b600052603260045260246000fd5b9050602002016020810190610eab9190613caf565b611bc3565b610eb98161431a565b9050610e36565b5050505050565b6001600160a01b038116600090815260fd60205260408120545b92915050565b6040517f120b57020000000000000000000000000000000000000000000000000000000081523360048201523060248201526001600160a01b0387166044820152606481018690526084810185905260ff841660a482015260c4810183905260e4810182905260009073c1e088fc1323b20bcbee9bd1b9fc9546db5624c59063120b570290610104015b600060405180830381600087803b158015610f8b57600080fd5b505af1158015610f9f573d6000803e3d6000fd5b50505050610fb98a8a90610fb39190614181565b89612143565b9a9950505050505050505050565b610fcf611b68565b6001600160a01b03811660008181526101626020526040808220805460ff19166001179055517fa54e443f26cc5ad727d621c65ab316267d303b027773376113f00c53ed7b372b9190a250565b6060609b805461070b906142e5565b3360008181526098602090815260408083206001600160a01b0387168452909152812054909190838110156110c85760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f0000000000000000000000000000000000000000000000000000006064820152608401610865565b6110d58286868403611535565b506001949350505050565b60003361079c81858561171f565b60006110f960995490565b670de0b6b3a764000061016354611110919061414b565b6107d6919061412b565b600073c1e088fc1323b20bcbee9bd1b9fc9546db5624c56001600160a01b031663779b3c5c6040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561116b57600080fd5b505af115801561117f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111a39190613c1d565b90508061016360008282546111b89190614113565b909155505050565b6040517f7c516e940000000000000000000000000000000000000000000000000000000081523360048201523060248201526001600160a01b0387166044820152606481018690526084810185905260ff841660a482015260c4810183905260e4810182905260009073c1e088fc1323b20bcbee9bd1b9fc9546db5624c590637c516e949061010401600060405180830381600087803b15801561126357600080fd5b505af1158015611277573d6000803e3d6000fd5b50505050610fb98a8a9061128b9190614181565b89611fae565b834211156112e15760405162461bcd60e51b815260206004820152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e650000006044820152606401610865565b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98888886113108c6122c8565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e001604051602081830303815290604052805190602001209050600061136b826122f0565b9050600061137b82878787612359565b9050896001600160a01b0316816001600160a01b0316146113de5760405162461bcd60e51b815260206004820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e617475726500006044820152606401610865565b6113e98a8a8a611535565b50505050505050505050565b6040517fd5770dc700000000000000000000000000000000000000000000000000000000815260009073c1e088fc1323b20bcbee9bd1b9fc9546db5624c59063d5770dc790610f7190339030908c908c908c908c908c908c90600401613e40565b61145e611b68565b6001600160a01b03811660008181526101626020526040808220805460ff19169055517ff9e330625cb712f3af7340fb3b6454be2ea9e7035659cfb1b477705786ca5d429190a250565b6114b0611b68565b6001600160a01b03811661152c5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610865565b610959816120e3565b6001600160a01b0383166115b05760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f72657373000000000000000000000000000000000000000000000000000000006064820152608401610865565b6001600160a01b03821661162c5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f73730000000000000000000000000000000000000000000000000000000000006064820152608401610865565b6001600160a01b0383811660008181526098602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038381166000908152609860209081526040808320938616835292905220546000198114611719578181101561170c5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610865565b6117198484848403611535565b50505050565b6001600160a01b03831661179b5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f64726573730000000000000000000000000000000000000000000000000000006064820152608401610865565b6001600160a01b0382166118175760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f65737300000000000000000000000000000000000000000000000000000000006064820152608401610865565b6001600160a01b038316600090815260976020526040902054818110156118a65760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e636500000000000000000000000000000000000000000000000000006064820152608401610865565b6001600160a01b038085166000908152609760205260408082208585039055918516815290812080548492906118dd908490614113565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161192991815260200190565b60405180910390a3611719565b60006107d67f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f61196560c95490565b60ca546040805160208101859052908101839052606081018290524660808201523060a082015260009060c0016040516020818303038152906040528051906020012090509392505050565b610959611b68565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff16156119ec57610a7883612381565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b815260040160206040518083038186803b158015611a2557600080fd5b505afa925050508015611a55575060408051601f3d908101601f19168201909252611a5291810190613c1d565b60015b611ac75760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201527f6f6e206973206e6f7420555550530000000000000000000000000000000000006064820152608401610865565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc8114611b5c5760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f7860448201527f6961626c655555494400000000000000000000000000000000000000000000006064820152608401610865565b50610a7883838361244c565b610130546001600160a01b03163314610e1c5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610865565b6040517f8a6a7eb40000000000000000000000000000000000000000000000000000000081523060048201526001600160a01b038316602482015263ffffffff8216604482015260009073c1e088fc1323b20bcbee9bd1b9fc9546db5624c590638a6a7eb490606401604080518083038186803b158015611c4357600080fd5b505afa158015611c57573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c7b9190613c8c565b5060408051600180825281830190925291925060009190602080830190803683370190505090508281600081518110611cc457634e487b7160e01b600052603260045260246000fd5b63ffffffff92909216602092830291909101909101526040805160018082528183019092526000918160200160208202803683370190505090508281600081518110611d2057634e487b7160e01b600052603260045260246000fd5b60200260200101818152505060008073c1e088fc1323b20bcbee9bd1b9fc9546db5624c56001600160a01b0316633b2a1b286004878a604051602001611d6893929190614051565b60405160208183030381529060405286866040518463ffffffff1660e01b8152600401611d9793929190613f93565b60a060405180830381600087803b158015611db157600080fd5b505af1158015611dc5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611de99190613ccb565b945094505050508181611dfc919061416a565b6101636000828254611e0e9190614113565b909155505050505050505050565b600054610100900460ff16611e875760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608401610865565b610a878282612471565b600054610100900460ff16611efc5760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608401610865565b610959816040518060400160405280600181526020017f3100000000000000000000000000000000000000000000000000000000000000815250612503565b600054610100900460ff16611fa65760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608401610865565b610e1c612588565b6000806000806000611fc18760006125fc565b92965090945092509050336000876003811115611fee57634e487b7160e01b600052602160045260246000fd5b1461208457506040517f7006e387000000000000000000000000000000000000000000000000000000008152309073c1e088fc1323b20bcbee9bd1b9fc9546db5624c590637006e38790612051908490339082908b908e90600090600401613fcc565b600060405180830381600087803b15801561206b57600080fd5b505af115801561207f573d6000803e3d6000fd5b505050505b61208e8186612c64565b336001600160a01b03167f859a659762340cd07a1ca857ddc4f9485f55dd427e3fca351c9a52b253f5cc15898686868a6040516120cf959493929190613edd565b60405180910390a250929695505050505050565b61013080546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60008060008060006121568760016125fc565b92965090945092509050600186600181111561218257634e487b7160e01b600052602160045260246000fd5b1415612242576121923085612de9565b6121b13073c1e088fc1323b20bcbee9bd1b9fc9546db5624c586611535565b6040517f6204aa4300000000000000000000000000000000000000000000000000000000815273c1e088fc1323b20bcbee9bd1b9fc9546db5624c590636204aa439061220b90309033908990600090600190600401614018565b600060405180830381600087803b15801561222557600080fd5b505af1158015612239573d6000803e3d6000fd5b50505050612274565b600086600181111561226457634e487b7160e01b600052602160045260246000fd5b1415612274576122743385612de9565b336001600160a01b03167f6ac93e168d031c08e2c22e09c4811299bce823b5980cad4b51805bf8405ec4bf88858585896040516122b5959493929190613edd565b60405180910390a2509195945050505050565b6001600160a01b038116600090815260fd602052604090208054600181018255905b50919050565b6000610ee16122fd611936565b836040517f19010000000000000000000000000000000000000000000000000000000000006020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b600080600061236a87878787612ec8565b9150915061237781612fb5565b5095945050505050565b6001600160a01b0381163b6123fe5760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201527f6f74206120636f6e7472616374000000000000000000000000000000000000006064820152608401610865565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b612455836131b6565b6000825111806124625750805b15610a785761171983836131f6565b600054610100900460ff166124dc5760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608401610865565b81516124ef90609a9060208501906134c5565b508051610a7890609b9060208401906134c5565b600054610100900460ff1661256e5760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608401610865565b81516020928301208151919092012060c99190915560ca55565b600054610100900460ff166125f35760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608401610865565b610e1c336120e3565b6040517f1c1b877200000000000000000000000000000000000000000000000000000000815230600482015260009081908190819073c1e088fc1323b20bcbee9bd1b9fc9546db5624c590631c1b877290602401600060405180830381600087803b15801561266a57600080fd5b505af115801561267e573d6000803e3d6000fd5b505060405163248b5e3960e11b81523060048201526000925073c1e088fc1323b20bcbee9bd1b9fc9546db5624c59150634916bc729060240160206040518083038186803b1580156126cf57600080fd5b505afa1580156126e3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127079190613c1d565b6040516308eeae3160e41b815230600482015290915060009073c1e088fc1323b20bcbee9bd1b9fc9546db5624c590638eeae3109060240160206040518083038186803b15801561275757600080fd5b505afa15801561276b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061278f9190613c1d565b905060005b88518110156129cc5761016260008a83815181106127c257634e487b7160e01b600052603260045260246000fd5b602090810291909101810151516001600160a01b031682528101919091526040016000205460ff166128365760405162461bcd60e51b815260206004820152601860248201527f546f6b656e206973206e6f742077686974656c697374656400000000000000006044820152606401610865565b600073c1e088fc1323b20bcbee9bd1b9fc9546db5624c5630d2615b18a61285d573061285f565b335b8b61286a573361286c565b305b8d868151811061288c57634e487b7160e01b600052603260045260246000fd5b6020026020010151600001518e87815181106128b857634e487b7160e01b600052603260045260246000fd5b6020026020010151602001518f88815181106128e457634e487b7160e01b600052603260045260246000fd5b6020026020010151604001516040518663ffffffff1660e01b8152600401612910959493929190613dee565b600060405180830381600087803b15801561292a57600080fd5b505af115801561293e573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526129669190810190613b8a565b905060005b81518110156129b95781818151811061299457634e487b7160e01b600052603260045260246000fd5b6020026020010151886129a79190614113565b97506129b28161431a565b905061296b565b5050806129c59061431a565b9050612794565b5060405163248b5e3960e11b815230600482015260009073c1e088fc1323b20bcbee9bd1b9fc9546db5624c590634916bc729060240160206040518083038186803b158015612a1a57600080fd5b505afa158015612a2e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612a529190613c1d565b6040516308eeae3160e41b815230600482015290915060009073c1e088fc1323b20bcbee9bd1b9fc9546db5624c590638eeae3109060240160206040518083038186803b158015612aa257600080fd5b505afa158015612ab6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612ada9190613c1d565b905060008915612b12578761016354612af39190614113565b9050612aff848361416a565b9650612b0b858461416a565b9550612b3c565b8761016354612b21919061416a565b9050612b2d828561416a565b9650612b39838661416a565b95505b6000612b4760995490565b905080612b5657879950612c4f565b8a15612bd85780612bc7612bb5612b86670de0b6b3a764000061016354600088613301909392919063ffffffff16565b612b9b87670de0b6b3a76400008b6000613301565b612bb089670de0b6b3a76400008d6000613301565b613378565b8390670de0b6b3a76400006000613301565b612bd1919061416a565b9950612c4f565b612c42612c30612c01670de0b6b3a764000061016354600187613301909392919063ffffffff16565b612c1686670de0b6b3a76400008a6001613301565b612c2b88670de0b6b3a76400008c6001613301565b613390565b8290670de0b6b3a76400006001613301565b612c4c908261416a565b99505b50610163555095989497509295509093505050565b6001600160a01b038216612ce05760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360448201527f73000000000000000000000000000000000000000000000000000000000000006064820152608401610865565b6001600160a01b03821660009081526097602052604090205481811015612d6f5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60448201527f63650000000000000000000000000000000000000000000000000000000000006064820152608401610865565b6001600160a01b0383166000908152609760205260408120838303905560998054849290612d9e90849061416a565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3505050565b6001600160a01b038216612e3f5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610865565b8060996000828254612e519190614113565b90915550506001600160a01b03821660009081526097602052604081208054839290612e7e908490614113565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115612eff5750600090506003612fac565b8460ff16601b14158015612f1757508460ff16601c14155b15612f285750600090506004612fac565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015612f7c573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116612fa557600060019250925050612fac565b9150600090505b94509492505050565b6000816004811115612fd757634e487b7160e01b600052602160045260246000fd5b1415612fe05750565b600181600481111561300257634e487b7160e01b600052602160045260246000fd5b14156130505760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606401610865565b600281600481111561307257634e487b7160e01b600052602160045260246000fd5b14156130c05760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610865565b60038160048111156130e257634e487b7160e01b600052602160045260246000fd5b141561313b5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610865565b600481600481111561315d57634e487b7160e01b600052602160045260246000fd5b14156109595760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b6064820152608401610865565b6131bf81612381565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606001600160a01b0383163b6132755760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f60448201527f6e747261637400000000000000000000000000000000000000000000000000006064820152608401610865565b600080846001600160a01b0316846040516132909190613dd2565b600060405180830381855af49150503d80600081146132cb576040519150601f19603f3d011682016040523d82523d6000602084013e6132d0565b606091505b50915091506132f8828260405180606001604052806027815260200161438a602791396133a8565b95945050505050565b60008061330f8686866133e1565b9050600183600281111561333357634e487b7160e01b600052602160045260246000fd5b14801561335e57506000848061335957634e487b7160e01b600052601260045260246000fd5b868809115b156132f85761336e600182614113565b9695505050505050565b6000613384848461349f565b9350610bd4848361349f565b600061339c84846134b5565b9350610bd484836134b5565b606083156133b75750816107c5565b8251156133c75782518084602001fd5b8160405162461bcd60e51b81526004016108659190614082565b60008080600019858709858702925082811083820303915050806000141561342a5783828161342057634e487b7160e01b600052601260045260246000fd5b04925050506107c5565b80841161343657600080fd5b60008486880960026001871981018816978890046003810283188082028403028082028403028082028403028082028403028082028403029081029092039091026000889003889004909101858311909403939093029303949094049190911702949350505050565b60008183106134ae57816107c5565b5090919050565b6000818310156134ae57816107c5565b8280546134d1906142e5565b90600052602060002090601f0160209004810192826134f35760008555613539565b82601f1061350c57805160ff1916838001178555613539565b82800160010185558215613539579182015b8281111561353957825182559160200191906001019061351e565b50613545929150613549565b5090565b5b80821115613545576000815560010161354a565b600067ffffffffffffffff83111561357857613578614361565b61358b601f8401601f19166020016140be565b905082815283838301111561359f57600080fd5b828260208301376000602084830101529392505050565b80356001600160a01b03811681146135cd57600080fd5b919050565b60008083601f8401126135e3578182fd5b50813567ffffffffffffffff8111156135fa578182fd5b6020830191508360208260051b850101111561361557600080fd5b9250929050565b600082601f83011261362c578081fd5b8135602061364161363c836140ef565b6140be565b80838252828201915082860187848660051b8901011115613660578586fd5b855b8581101561368557613673826135b6565b84529284019290840190600101613662565b5090979650505050505050565b600082601f8301126136a2578081fd5b813560206136b261363c836140ef565b80838252828201915082860187848660051b89010111156136d1578586fd5b855b85811015613685578135845292840192908401906001016136d3565b8035600481106135cd57600080fd5b8035600281106135cd57600080fd5b600082601f83011261371d578081fd5b6107c58383356020850161355e565b803560ff811681146135cd57600080fd5b60006020828403121561374e578081fd5b6107c5826135b6565b60008060408385031215613769578081fd5b613772836135b6565b9150613780602084016135b6565b90509250929050565b60008060006060848603121561379d578081fd5b6137a6846135b6565b92506137b4602085016135b6565b9150604084013590509250925092565b600080600080600080600060e0888a0312156137de578485fd5b6137e7886135b6565b96506137f5602089016135b6565b955060408801359450606088013593506138116080890161372c565b925060a0880135915060c0880135905092959891949750929550565b6000806040838503121561383f578182fd5b613848836135b6565b9150602083013567ffffffffffffffff811115613863578182fd5b8301601f81018513613873578182fd5b6138828582356020840161355e565b9150509250929050565b6000806040838503121561389e578182fd5b6138a7836135b6565b946020939093013593505050565b600080604083850312156138c7578182fd5b6138d0836135b6565b915060208301356138e081614377565b809150509250929050565b60008060008060408587031215613900578182fd5b843567ffffffffffffffff80821115613917578384fd5b613923888389016135d2565b9096509450602087013591508082111561393b578384fd5b50613948878288016135d2565b95989497509550505050565b600080600060408486031215613968578081fd5b833567ffffffffffffffff81111561397e578182fd5b61398a868287016135d2565b909450925061399d9050602085016136ef565b90509250925092565b60008060008060008060008060006101008a8c0312156139c4578283fd5b893567ffffffffffffffff8111156139da578384fd5b6139e68c828d016135d2565b909a5098506139f9905060208b016136ef565b9650613a0760408b016135b6565b955060608a0135945060808a01359350613a2360a08b0161372c565b925060c08a0135915060e08a013590509295985092959850929598565b600080600060408486031215613a54578081fd5b833567ffffffffffffffff811115613a6a578182fd5b613a76868287016135d2565b909450925061399d9050602085016136fe565b60008060008060008060008060006101008a8c031215613aa7578283fd5b893567ffffffffffffffff811115613abd578384fd5b613ac98c828d016135d2565b909a5098506139f9905060208b016136fe565b60008060008060008060008060006101008a8c031215613afa578283fd5b893567ffffffffffffffff80821115613b11578485fd5b613b1d8d838e016135d2565b909b509950899150613b3160208d016136fe565b985060408c0135915080821115613b46578485fd5b613b528d838e0161361c565b975060608c0135915080821115613b67578485fd5b50613b748c828d01613692565b95505060808a01359350613a2360a08b0161372c565b60006020808385031215613b9c578182fd5b825167ffffffffffffffff811115613bb2578283fd5b8301601f81018513613bc2578283fd5b8051613bd061363c826140ef565b80828252848201915084840188868560051b8701011115613bef578687fd5b8694505b83851015613c11578051835260019490940193918501918501613bf3565b50979650505050505050565b600060208284031215613c2e578081fd5b5051919050565b60008060408385031215613c47578182fd5b823567ffffffffffffffff80821115613c5e578384fd5b613c6a8683870161370d565b93506020850135915080821115613c7f578283fd5b506138828582860161370d565b60008060408385031215613c9e578182fd5b505080516020909101519092909150565b600060208284031215613cc0578081fd5b81356107c581614377565b600080600080600060a08688031215613ce2578283fd5b8551613ced81614377565b602087015160408801516060890151608090990151929a91995097965090945092505050565b6000815180845260208085019450808401835b83811015613d4257815187529582019590820190600101613d26565b509495945050505050565b6000815180845260208085019450808401835b83811015613d4257815163ffffffff1687529582019590820190600101613d60565b60008151808452613d9a8160208601602086016142b9565b601f01601f19169290920160200192915050565b60048110613dbe57613dbe61434b565b9052565b60028110613dbe57613dbe61434b565b60008251613de48184602087016142b9565b9190910192915050565b60006001600160a01b038088168352808716602084015280861660408401525060a06060830152613e2260a0830185613d4d565b8281036080840152613e348185613d13565b98975050505050505050565b60006101008083016001600160a01b03808d1685526020818d16818701528360408701528293508b5180845261012087019450818d019350855b81811015613e98578451841686529482019493820193600101613e7a565b50505050508281036060840152613eaf8189613d13565b915050856080830152613ec760a083018660ff169052565b60c082019390935260e001529695505050505050565b600060a0820160a0835280885180835260c08501915060c08160051b86010192506020808b01855b83811015613f6d5760bf19888703018552815160606001600160a01b0382511688528482015181868a0152613f3c828a0182613d4d565b9150506040808301519250888203818a015250613f598183613d13565b975050509382019390820190600101613f05565b505085019890985250604083019590955250606081019290925260809091015292915050565b606081526000613fa66060830186613d82565b8281036020840152613fb88186613d4d565b9050828103604084015261336e8185613d13565b6001600160a01b0387811682528681166020830152851660408201526060810184905260c081016140006080830185613dae565b61400d60a0830184613dc2565b979650505050505050565b6001600160a01b038681168252851660208201526040810184905260a081016140446060830185613dae565b61336e6080830184613dc2565b60608101600585106140655761406561434b565b93815260208101929092526001600160a01b031660409091015290565b6020815260006107c56020830184613d82565b6040516060810167ffffffffffffffff811182821017156140b8576140b8614361565b60405290565b604051601f8201601f1916810167ffffffffffffffff811182821017156140e7576140e7614361565b604052919050565b600067ffffffffffffffff82111561410957614109614361565b5060051b60200190565b6000821982111561412657614126614335565b500190565b60008261414657634e487b7160e01b81526012600452602481fd5b500490565b600081600019048311821515161561416557614165614335565b500290565b60008282101561417c5761417c614335565b500390565b600061418f61363c846140ef565b838152602080820191908460053688821b830111156141ac578586fd5b855b888110156142ac57823567ffffffffffffffff808211156141cd578889fd5b818a019150606082360312156141e1578889fd5b6141e9614095565b6141f2836135b6565b81528683013582811115614204578a8bfd5b830136601f820112614214578a8bfd5b803561422261363c826140ef565b81815289810190838b0136848b1b86018d01111561423e578e8ffd5b8e94505b8385101561426957803561425581614377565b835260019490940193918b01918b01614242565b50848b01525060409150508381013583811115614284578b8cfd5b61429036828701613692565b91830191909152508852505094830194918301916001016141ae565b5092979650505050505050565b60005b838110156142d45781810151838201526020016142bc565b838111156117195750506000910152565b600181811c908216806142f957607f821691505b602082108114156122ea57634e487b7160e01b600052602260045260246000fd5b600060001982141561432e5761432e614335565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b63ffffffff8116811461095957600080fdfe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a26469706673582212201b1bd7959f7da3446fe2062d3e2cbb1334b9be44811b35312dc04b9b1b60848964736f6c63430008040033\";\n\ntype RootConstructorParams =\n  | [signer?: Signer]\n  | ConstructorParameters<typeof ContractFactory>;\n\nconst isSuperArgs = (\n  xs: RootConstructorParams\n): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;\n\nexport class Root__factory extends ContractFactory {\n  constructor(...args: RootConstructorParams) {\n    if (isSuperArgs(args)) {\n      super(...args);\n    } else {\n      super(_abi, _bytecode, args[0]);\n    }\n  }\n\n  override deploy(\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<Root> {\n    return super.deploy(overrides || {}) as Promise<Root>;\n  }\n  override getDeployTransaction(\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): TransactionRequest {\n    return super.getDeployTransaction(overrides || {});\n  }\n  override attach(address: string): Root {\n    return super.attach(address) as Root;\n  }\n  override connect(signer: Signer): Root__factory {\n    return super.connect(signer) as Root__factory;\n  }\n\n  static readonly bytecode = _bytecode;\n  static readonly abi = _abi;\n  static createInterface(): RootInterface {\n    return new utils.Interface(_abi) as RootInterface;\n  }\n  static connect(address: string, signerOrProvider: Signer | Provider): Root {\n    return new Contract(address, _abi, signerOrProvider) as Root;\n  }\n}\n","/* Autogenerated file. Do not edit manually. */\n// @ts-nocheck\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Contract, Signer, utils } from \"ethers\";\nimport type { Provider } from \"@ethersproject/providers\";\nimport type {\n  Curve3Pool,\n  Curve3PoolInterface,\n} from \"../../../Curve/Pool/Curve3Pool\";\n\nconst _abi = [\n  {\n    name: \"TokenExchange\",\n    inputs: [\n      {\n        type: \"address\",\n        name: \"buyer\",\n        indexed: true,\n      },\n      {\n        type: \"int128\",\n        name: \"sold_id\",\n        indexed: false,\n      },\n      {\n        type: \"uint256\",\n        name: \"tokens_sold\",\n        indexed: false,\n      },\n      {\n        type: \"int128\",\n        name: \"bought_id\",\n        indexed: false,\n      },\n      {\n        type: \"uint256\",\n        name: \"tokens_bought\",\n        indexed: false,\n      },\n    ],\n    anonymous: false,\n    type: \"event\",\n  },\n  {\n    name: \"AddLiquidity\",\n    inputs: [\n      {\n        type: \"address\",\n        name: \"provider\",\n        indexed: true,\n      },\n      {\n        type: \"uint256[3]\",\n        name: \"token_amounts\",\n        indexed: false,\n      },\n      {\n        type: \"uint256[3]\",\n        name: \"fees\",\n        indexed: false,\n      },\n      {\n        type: \"uint256\",\n        name: \"invariant\",\n        indexed: false,\n      },\n      {\n        type: \"uint256\",\n        name: \"token_supply\",\n        indexed: false,\n      },\n    ],\n    anonymous: false,\n    type: \"event\",\n  },\n  {\n    name: \"RemoveLiquidity\",\n    inputs: [\n      {\n        type: \"address\",\n        name: \"provider\",\n        indexed: true,\n      },\n      {\n        type: \"uint256[3]\",\n        name: \"token_amounts\",\n        indexed: false,\n      },\n      {\n        type: \"uint256[3]\",\n        name: \"fees\",\n        indexed: false,\n      },\n      {\n        type: \"uint256\",\n        name: \"token_supply\",\n        indexed: false,\n      },\n    ],\n    anonymous: false,\n    type: \"event\",\n  },\n  {\n    name: \"RemoveLiquidityOne\",\n    inputs: [\n      {\n        type: \"address\",\n        name: \"provider\",\n        indexed: true,\n      },\n      {\n        type: \"uint256\",\n        name: \"token_amount\",\n        indexed: false,\n      },\n      {\n        type: \"uint256\",\n        name: \"coin_amount\",\n        indexed: false,\n      },\n    ],\n    anonymous: false,\n    type: \"event\",\n  },\n  {\n    name: \"RemoveLiquidityImbalance\",\n    inputs: [\n      {\n        type: \"address\",\n        name: \"provider\",\n        indexed: true,\n      },\n      {\n        type: \"uint256[3]\",\n        name: \"token_amounts\",\n        indexed: false,\n      },\n      {\n        type: \"uint256[3]\",\n        name: \"fees\",\n        indexed: false,\n      },\n      {\n        type: \"uint256\",\n        name: \"invariant\",\n        indexed: false,\n      },\n      {\n        type: \"uint256\",\n        name: \"token_supply\",\n        indexed: false,\n      },\n    ],\n    anonymous: false,\n    type: \"event\",\n  },\n  {\n    name: \"CommitNewAdmin\",\n    inputs: [\n      {\n        type: \"uint256\",\n        name: \"deadline\",\n        indexed: true,\n      },\n      {\n        type: \"address\",\n        name: \"admin\",\n        indexed: true,\n      },\n    ],\n    anonymous: false,\n    type: \"event\",\n  },\n  {\n    name: \"NewAdmin\",\n    inputs: [\n      {\n        type: \"address\",\n        name: \"admin\",\n        indexed: true,\n      },\n    ],\n    anonymous: false,\n    type: \"event\",\n  },\n  {\n    name: \"CommitNewFee\",\n    inputs: [\n      {\n        type: \"uint256\",\n        name: \"deadline\",\n        indexed: true,\n      },\n      {\n        type: \"uint256\",\n        name: \"fee\",\n        indexed: false,\n      },\n      {\n        type: \"uint256\",\n        name: \"admin_fee\",\n        indexed: false,\n      },\n    ],\n    anonymous: false,\n    type: \"event\",\n  },\n  {\n    name: \"NewFee\",\n    inputs: [\n      {\n        type: \"uint256\",\n        name: \"fee\",\n        indexed: false,\n      },\n      {\n        type: \"uint256\",\n        name: \"admin_fee\",\n        indexed: false,\n      },\n    ],\n    anonymous: false,\n    type: \"event\",\n  },\n  {\n    name: \"RampA\",\n    inputs: [\n      {\n        type: \"uint256\",\n        name: \"old_A\",\n        indexed: false,\n      },\n      {\n        type: \"uint256\",\n        name: \"new_A\",\n        indexed: false,\n      },\n      {\n        type: \"uint256\",\n        name: \"initial_time\",\n        indexed: false,\n      },\n      {\n        type: \"uint256\",\n        name: \"future_time\",\n        indexed: false,\n      },\n    ],\n    anonymous: false,\n    type: \"event\",\n  },\n  {\n    name: \"StopRampA\",\n    inputs: [\n      {\n        type: \"uint256\",\n        name: \"A\",\n        indexed: false,\n      },\n      {\n        type: \"uint256\",\n        name: \"t\",\n        indexed: false,\n      },\n    ],\n    anonymous: false,\n    type: \"event\",\n  },\n  {\n    outputs: [],\n    inputs: [\n      {\n        type: \"address\",\n        name: \"_owner\",\n      },\n      {\n        type: \"address[3]\",\n        name: \"_coins\",\n      },\n      {\n        type: \"address\",\n        name: \"_pool_token\",\n      },\n      {\n        type: \"uint256\",\n        name: \"_A\",\n      },\n      {\n        type: \"uint256\",\n        name: \"_fee\",\n      },\n      {\n        type: \"uint256\",\n        name: \"_admin_fee\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"constructor\",\n  },\n  {\n    name: \"A\",\n    outputs: [\n      {\n        type: \"uint256\",\n        name: \"\",\n      },\n    ],\n    inputs: [],\n    stateMutability: \"view\",\n    type: \"function\",\n    gas: 5227,\n  },\n  {\n    name: \"get_virtual_price\",\n    outputs: [\n      {\n        type: \"uint256\",\n        name: \"\",\n      },\n    ],\n    inputs: [],\n    stateMutability: \"view\",\n    type: \"function\",\n    gas: 1133537,\n  },\n  {\n    name: \"calc_token_amount\",\n    outputs: [\n      {\n        type: \"uint256\",\n        name: \"\",\n      },\n    ],\n    inputs: [\n      {\n        type: \"uint256[3]\",\n        name: \"amounts\",\n      },\n      {\n        type: \"bool\",\n        name: \"deposit\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n    gas: 4508776,\n  },\n  {\n    name: \"add_liquidity\",\n    outputs: [],\n    inputs: [\n      {\n        type: \"uint256[3]\",\n        name: \"amounts\",\n      },\n      {\n        type: \"uint256\",\n        name: \"min_mint_amount\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n    gas: 6954858,\n  },\n  {\n    name: \"get_dy\",\n    outputs: [\n      {\n        type: \"uint256\",\n        name: \"\",\n      },\n    ],\n    inputs: [\n      {\n        type: \"int128\",\n        name: \"i\",\n      },\n      {\n        type: \"int128\",\n        name: \"j\",\n      },\n      {\n        type: \"uint256\",\n        name: \"dx\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n    gas: 2673791,\n  },\n  {\n    name: \"get_dy_underlying\",\n    outputs: [\n      {\n        type: \"uint256\",\n        name: \"\",\n      },\n    ],\n    inputs: [\n      {\n        type: \"int128\",\n        name: \"i\",\n      },\n      {\n        type: \"int128\",\n        name: \"j\",\n      },\n      {\n        type: \"uint256\",\n        name: \"dx\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n    gas: 2673474,\n  },\n  {\n    name: \"exchange\",\n    outputs: [],\n    inputs: [\n      {\n        type: \"int128\",\n        name: \"i\",\n      },\n      {\n        type: \"int128\",\n        name: \"j\",\n      },\n      {\n        type: \"uint256\",\n        name: \"dx\",\n      },\n      {\n        type: \"uint256\",\n        name: \"min_dy\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n    gas: 2818066,\n  },\n  {\n    name: \"remove_liquidity\",\n    outputs: [],\n    inputs: [\n      {\n        type: \"uint256\",\n        name: \"_amount\",\n      },\n      {\n        type: \"uint256[3]\",\n        name: \"min_amounts\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n    gas: 192846,\n  },\n  {\n    name: \"remove_liquidity_imbalance\",\n    outputs: [],\n    inputs: [\n      {\n        type: \"uint256[3]\",\n        name: \"amounts\",\n      },\n      {\n        type: \"uint256\",\n        name: \"max_burn_amount\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n    gas: 6951851,\n  },\n  {\n    name: \"calc_withdraw_one_coin\",\n    outputs: [\n      {\n        type: \"uint256\",\n        name: \"\",\n      },\n    ],\n    inputs: [\n      {\n        type: \"uint256\",\n        name: \"_token_amount\",\n      },\n      {\n        type: \"int128\",\n        name: \"i\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n    gas: 1102,\n  },\n  {\n    name: \"remove_liquidity_one_coin\",\n    outputs: [],\n    inputs: [\n      {\n        type: \"uint256\",\n        name: \"_token_amount\",\n      },\n      {\n        type: \"int128\",\n        name: \"i\",\n      },\n      {\n        type: \"uint256\",\n        name: \"min_amount\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n    gas: 4025523,\n  },\n  {\n    name: \"ramp_A\",\n    outputs: [],\n    inputs: [\n      {\n        type: \"uint256\",\n        name: \"_future_A\",\n      },\n      {\n        type: \"uint256\",\n        name: \"_future_time\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n    gas: 151919,\n  },\n  {\n    name: \"stop_ramp_A\",\n    outputs: [],\n    inputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n    gas: 148637,\n  },\n  {\n    name: \"commit_new_fee\",\n    outputs: [],\n    inputs: [\n      {\n        type: \"uint256\",\n        name: \"new_fee\",\n      },\n      {\n        type: \"uint256\",\n        name: \"new_admin_fee\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n    gas: 110461,\n  },\n  {\n    name: \"apply_new_fee\",\n    outputs: [],\n    inputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n    gas: 97242,\n  },\n  {\n    name: \"revert_new_parameters\",\n    outputs: [],\n    inputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n    gas: 21895,\n  },\n  {\n    name: \"commit_transfer_ownership\",\n    outputs: [],\n    inputs: [\n      {\n        type: \"address\",\n        name: \"_owner\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n    gas: 74572,\n  },\n  {\n    name: \"apply_transfer_ownership\",\n    outputs: [],\n    inputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n    gas: 60710,\n  },\n  {\n    name: \"revert_transfer_ownership\",\n    outputs: [],\n    inputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n    gas: 21985,\n  },\n  {\n    name: \"admin_balances\",\n    outputs: [\n      {\n        type: \"uint256\",\n        name: \"\",\n      },\n    ],\n    inputs: [\n      {\n        type: \"uint256\",\n        name: \"i\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n    gas: 3481,\n  },\n  {\n    name: \"withdraw_admin_fees\",\n    outputs: [],\n    inputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n    gas: 21502,\n  },\n  {\n    name: \"donate_admin_fees\",\n    outputs: [],\n    inputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n    gas: 111389,\n  },\n  {\n    name: \"kill_me\",\n    outputs: [],\n    inputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n    gas: 37998,\n  },\n  {\n    name: \"unkill_me\",\n    outputs: [],\n    inputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n    gas: 22135,\n  },\n  {\n    name: \"coins\",\n    outputs: [\n      {\n        type: \"address\",\n        name: \"\",\n      },\n    ],\n    inputs: [\n      {\n        type: \"uint256\",\n        name: \"arg0\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n    gas: 2220,\n  },\n  {\n    name: \"balances\",\n    outputs: [\n      {\n        type: \"uint256\",\n        name: \"\",\n      },\n    ],\n    inputs: [\n      {\n        type: \"uint256\",\n        name: \"arg0\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n    gas: 2250,\n  },\n  {\n    name: \"fee\",\n    outputs: [\n      {\n        type: \"uint256\",\n        name: \"\",\n      },\n    ],\n    inputs: [],\n    stateMutability: \"view\",\n    type: \"function\",\n    gas: 2171,\n  },\n  {\n    name: \"admin_fee\",\n    outputs: [\n      {\n        type: \"uint256\",\n        name: \"\",\n      },\n    ],\n    inputs: [],\n    stateMutability: \"view\",\n    type: \"function\",\n    gas: 2201,\n  },\n  {\n    name: \"owner\",\n    outputs: [\n      {\n        type: \"address\",\n        name: \"\",\n      },\n    ],\n    inputs: [],\n    stateMutability: \"view\",\n    type: \"function\",\n    gas: 2231,\n  },\n  {\n    name: \"initial_A\",\n    outputs: [\n      {\n        type: \"uint256\",\n        name: \"\",\n      },\n    ],\n    inputs: [],\n    stateMutability: \"view\",\n    type: \"function\",\n    gas: 2261,\n  },\n  {\n    name: \"future_A\",\n    outputs: [\n      {\n        type: \"uint256\",\n        name: \"\",\n      },\n    ],\n    inputs: [],\n    stateMutability: \"view\",\n    type: \"function\",\n    gas: 2291,\n  },\n  {\n    name: \"initial_A_time\",\n    outputs: [\n      {\n        type: \"uint256\",\n        name: \"\",\n      },\n    ],\n    inputs: [],\n    stateMutability: \"view\",\n    type: \"function\",\n    gas: 2321,\n  },\n  {\n    name: \"future_A_time\",\n    outputs: [\n      {\n        type: \"uint256\",\n        name: \"\",\n      },\n    ],\n    inputs: [],\n    stateMutability: \"view\",\n    type: \"function\",\n    gas: 2351,\n  },\n  {\n    name: \"admin_actions_deadline\",\n    outputs: [\n      {\n        type: \"uint256\",\n        name: \"\",\n      },\n    ],\n    inputs: [],\n    stateMutability: \"view\",\n    type: \"function\",\n    gas: 2381,\n  },\n  {\n    name: \"transfer_ownership_deadline\",\n    outputs: [\n      {\n        type: \"uint256\",\n        name: \"\",\n      },\n    ],\n    inputs: [],\n    stateMutability: \"view\",\n    type: \"function\",\n    gas: 2411,\n  },\n  {\n    name: \"future_fee\",\n    outputs: [\n      {\n        type: \"uint256\",\n        name: \"\",\n      },\n    ],\n    inputs: [],\n    stateMutability: \"view\",\n    type: \"function\",\n    gas: 2441,\n  },\n  {\n    name: \"future_admin_fee\",\n    outputs: [\n      {\n        type: \"uint256\",\n        name: \"\",\n      },\n    ],\n    inputs: [],\n    stateMutability: \"view\",\n    type: \"function\",\n    gas: 2471,\n  },\n  {\n    name: \"future_owner\",\n    outputs: [\n      {\n        type: \"address\",\n        name: \"\",\n      },\n    ],\n    inputs: [],\n    stateMutability: \"view\",\n    type: \"function\",\n    gas: 2501,\n  },\n];\n\nexport class Curve3Pool__factory {\n  static readonly abi = _abi;\n  static createInterface(): Curve3PoolInterface {\n    return new utils.Interface(_abi) as Curve3PoolInterface;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): Curve3Pool {\n    return new Contract(address, _abi, signerOrProvider) as Curve3Pool;\n  }\n}\n","/* Autogenerated file. Do not edit manually. */\n// @ts-nocheck\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Contract, Signer, utils } from \"ethers\";\nimport type { Provider } from \"@ethersproject/providers\";\nimport type {\n  CurveTriCrypto2Pool,\n  CurveTriCrypto2PoolInterface,\n} from \"../../../Curve/Pool/CurveTriCrypto2Pool\";\n\nconst _abi = [\n  {\n    name: \"TokenExchange\",\n    inputs: [\n      {\n        name: \"buyer\",\n        type: \"address\",\n        indexed: true,\n      },\n      {\n        name: \"sold_id\",\n        type: \"uint256\",\n        indexed: false,\n      },\n      {\n        name: \"tokens_sold\",\n        type: \"uint256\",\n        indexed: false,\n      },\n      {\n        name: \"bought_id\",\n        type: \"uint256\",\n        indexed: false,\n      },\n      {\n        name: \"tokens_bought\",\n        type: \"uint256\",\n        indexed: false,\n      },\n    ],\n    anonymous: false,\n    type: \"event\",\n  },\n  {\n    name: \"AddLiquidity\",\n    inputs: [\n      {\n        name: \"provider\",\n        type: \"address\",\n        indexed: true,\n      },\n      {\n        name: \"token_amounts\",\n        type: \"uint256[3]\",\n        indexed: false,\n      },\n      {\n        name: \"fee\",\n        type: \"uint256\",\n        indexed: false,\n      },\n      {\n        name: \"token_supply\",\n        type: \"uint256\",\n        indexed: false,\n      },\n    ],\n    anonymous: false,\n    type: \"event\",\n  },\n  {\n    name: \"RemoveLiquidity\",\n    inputs: [\n      {\n        name: \"provider\",\n        type: \"address\",\n        indexed: true,\n      },\n      {\n        name: \"token_amounts\",\n        type: \"uint256[3]\",\n        indexed: false,\n      },\n      {\n        name: \"token_supply\",\n        type: \"uint256\",\n        indexed: false,\n      },\n    ],\n    anonymous: false,\n    type: \"event\",\n  },\n  {\n    name: \"RemoveLiquidityOne\",\n    inputs: [\n      {\n        name: \"provider\",\n        type: \"address\",\n        indexed: true,\n      },\n      {\n        name: \"token_amount\",\n        type: \"uint256\",\n        indexed: false,\n      },\n      {\n        name: \"coin_index\",\n        type: \"uint256\",\n        indexed: false,\n      },\n      {\n        name: \"coin_amount\",\n        type: \"uint256\",\n        indexed: false,\n      },\n    ],\n    anonymous: false,\n    type: \"event\",\n  },\n  {\n    name: \"CommitNewAdmin\",\n    inputs: [\n      {\n        name: \"deadline\",\n        type: \"uint256\",\n        indexed: true,\n      },\n      {\n        name: \"admin\",\n        type: \"address\",\n        indexed: true,\n      },\n    ],\n    anonymous: false,\n    type: \"event\",\n  },\n  {\n    name: \"NewAdmin\",\n    inputs: [\n      {\n        name: \"admin\",\n        type: \"address\",\n        indexed: true,\n      },\n    ],\n    anonymous: false,\n    type: \"event\",\n  },\n  {\n    name: \"CommitNewParameters\",\n    inputs: [\n      {\n        name: \"deadline\",\n        type: \"uint256\",\n        indexed: true,\n      },\n      {\n        name: \"admin_fee\",\n        type: \"uint256\",\n        indexed: false,\n      },\n      {\n        name: \"mid_fee\",\n        type: \"uint256\",\n        indexed: false,\n      },\n      {\n        name: \"out_fee\",\n        type: \"uint256\",\n        indexed: false,\n      },\n      {\n        name: \"fee_gamma\",\n        type: \"uint256\",\n        indexed: false,\n      },\n      {\n        name: \"allowed_extra_profit\",\n        type: \"uint256\",\n        indexed: false,\n      },\n      {\n        name: \"adjustment_step\",\n        type: \"uint256\",\n        indexed: false,\n      },\n      {\n        name: \"ma_half_time\",\n        type: \"uint256\",\n        indexed: false,\n      },\n    ],\n    anonymous: false,\n    type: \"event\",\n  },\n  {\n    name: \"NewParameters\",\n    inputs: [\n      {\n        name: \"admin_fee\",\n        type: \"uint256\",\n        indexed: false,\n      },\n      {\n        name: \"mid_fee\",\n        type: \"uint256\",\n        indexed: false,\n      },\n      {\n        name: \"out_fee\",\n        type: \"uint256\",\n        indexed: false,\n      },\n      {\n        name: \"fee_gamma\",\n        type: \"uint256\",\n        indexed: false,\n      },\n      {\n        name: \"allowed_extra_profit\",\n        type: \"uint256\",\n        indexed: false,\n      },\n      {\n        name: \"adjustment_step\",\n        type: \"uint256\",\n        indexed: false,\n      },\n      {\n        name: \"ma_half_time\",\n        type: \"uint256\",\n        indexed: false,\n      },\n    ],\n    anonymous: false,\n    type: \"event\",\n  },\n  {\n    name: \"RampAgamma\",\n    inputs: [\n      {\n        name: \"initial_A\",\n        type: \"uint256\",\n        indexed: false,\n      },\n      {\n        name: \"future_A\",\n        type: \"uint256\",\n        indexed: false,\n      },\n      {\n        name: \"initial_gamma\",\n        type: \"uint256\",\n        indexed: false,\n      },\n      {\n        name: \"future_gamma\",\n        type: \"uint256\",\n        indexed: false,\n      },\n      {\n        name: \"initial_time\",\n        type: \"uint256\",\n        indexed: false,\n      },\n      {\n        name: \"future_time\",\n        type: \"uint256\",\n        indexed: false,\n      },\n    ],\n    anonymous: false,\n    type: \"event\",\n  },\n  {\n    name: \"StopRampA\",\n    inputs: [\n      {\n        name: \"current_A\",\n        type: \"uint256\",\n        indexed: false,\n      },\n      {\n        name: \"current_gamma\",\n        type: \"uint256\",\n        indexed: false,\n      },\n      {\n        name: \"time\",\n        type: \"uint256\",\n        indexed: false,\n      },\n    ],\n    anonymous: false,\n    type: \"event\",\n  },\n  {\n    name: \"ClaimAdminFee\",\n    inputs: [\n      {\n        name: \"admin\",\n        type: \"address\",\n        indexed: true,\n      },\n      {\n        name: \"tokens\",\n        type: \"uint256\",\n        indexed: false,\n      },\n    ],\n    anonymous: false,\n    type: \"event\",\n  },\n  {\n    stateMutability: \"nonpayable\",\n    type: \"constructor\",\n    inputs: [\n      {\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        name: \"admin_fee_receiver\",\n        type: \"address\",\n      },\n      {\n        name: \"A\",\n        type: \"uint256\",\n      },\n      {\n        name: \"gamma\",\n        type: \"uint256\",\n      },\n      {\n        name: \"mid_fee\",\n        type: \"uint256\",\n      },\n      {\n        name: \"out_fee\",\n        type: \"uint256\",\n      },\n      {\n        name: \"allowed_extra_profit\",\n        type: \"uint256\",\n      },\n      {\n        name: \"fee_gamma\",\n        type: \"uint256\",\n      },\n      {\n        name: \"adjustment_step\",\n        type: \"uint256\",\n      },\n      {\n        name: \"admin_fee\",\n        type: \"uint256\",\n      },\n      {\n        name: \"ma_half_time\",\n        type: \"uint256\",\n      },\n      {\n        name: \"initial_prices\",\n        type: \"uint256[2]\",\n      },\n    ],\n    outputs: [],\n  },\n  {\n    stateMutability: \"payable\",\n    type: \"fallback\",\n  },\n  {\n    stateMutability: \"view\",\n    type: \"function\",\n    name: \"price_oracle\",\n    inputs: [\n      {\n        name: \"k\",\n        type: \"uint256\",\n      },\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    gas: 3361,\n  },\n  {\n    stateMutability: \"view\",\n    type: \"function\",\n    name: \"price_scale\",\n    inputs: [\n      {\n        name: \"k\",\n        type: \"uint256\",\n      },\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    gas: 3391,\n  },\n  {\n    stateMutability: \"view\",\n    type: \"function\",\n    name: \"last_prices\",\n    inputs: [\n      {\n        name: \"k\",\n        type: \"uint256\",\n      },\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    gas: 3421,\n  },\n  {\n    stateMutability: \"view\",\n    type: \"function\",\n    name: \"token\",\n    inputs: [],\n    outputs: [\n      {\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    gas: 468,\n  },\n  {\n    stateMutability: \"view\",\n    type: \"function\",\n    name: \"coins\",\n    inputs: [\n      {\n        name: \"i\",\n        type: \"uint256\",\n      },\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    gas: 582,\n  },\n  {\n    stateMutability: \"view\",\n    type: \"function\",\n    name: \"A\",\n    inputs: [],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    gas: 597,\n  },\n  {\n    stateMutability: \"view\",\n    type: \"function\",\n    name: \"gamma\",\n    inputs: [],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    gas: 11991,\n  },\n  {\n    stateMutability: \"view\",\n    type: \"function\",\n    name: \"fee\",\n    inputs: [],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    gas: 21673,\n  },\n  {\n    stateMutability: \"view\",\n    type: \"function\",\n    name: \"fee_calc\",\n    inputs: [\n      {\n        name: \"xp\",\n        type: \"uint256[3]\",\n      },\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    gas: 11096,\n  },\n  {\n    stateMutability: \"view\",\n    type: \"function\",\n    name: \"get_virtual_price\",\n    inputs: [],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    gas: 11582,\n  },\n  {\n    stateMutability: \"payable\",\n    type: \"function\",\n    name: \"exchange\",\n    inputs: [\n      {\n        name: \"i\",\n        type: \"uint256\",\n      },\n      {\n        name: \"j\",\n        type: \"uint256\",\n      },\n      {\n        name: \"dx\",\n        type: \"uint256\",\n      },\n      {\n        name: \"min_dy\",\n        type: \"uint256\",\n      },\n    ],\n    outputs: [],\n  },\n  {\n    stateMutability: \"payable\",\n    type: \"function\",\n    name: \"exchange\",\n    inputs: [\n      {\n        name: \"i\",\n        type: \"uint256\",\n      },\n      {\n        name: \"j\",\n        type: \"uint256\",\n      },\n      {\n        name: \"dx\",\n        type: \"uint256\",\n      },\n      {\n        name: \"min_dy\",\n        type: \"uint256\",\n      },\n      {\n        name: \"use_eth\",\n        type: \"bool\",\n      },\n    ],\n    outputs: [],\n  },\n  {\n    stateMutability: \"view\",\n    type: \"function\",\n    name: \"get_dy\",\n    inputs: [\n      {\n        name: \"i\",\n        type: \"uint256\",\n      },\n      {\n        name: \"j\",\n        type: \"uint256\",\n      },\n      {\n        name: \"dx\",\n        type: \"uint256\",\n      },\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    gas: 3122,\n  },\n  {\n    stateMutability: \"view\",\n    type: \"function\",\n    name: \"calc_token_fee\",\n    inputs: [\n      {\n        name: \"amounts\",\n        type: \"uint256[3]\",\n      },\n      {\n        name: \"xp\",\n        type: \"uint256[3]\",\n      },\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    gas: 26582,\n  },\n  {\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n    name: \"add_liquidity\",\n    inputs: [\n      {\n        name: \"amounts\",\n        type: \"uint256[3]\",\n      },\n      {\n        name: \"min_mint_amount\",\n        type: \"uint256\",\n      },\n    ],\n    outputs: [],\n    gas: 738687,\n  },\n  {\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n    name: \"remove_liquidity\",\n    inputs: [\n      {\n        name: \"_amount\",\n        type: \"uint256\",\n      },\n      {\n        name: \"min_amounts\",\n        type: \"uint256[3]\",\n      },\n    ],\n    outputs: [],\n    gas: 233981,\n  },\n  {\n    stateMutability: \"view\",\n    type: \"function\",\n    name: \"calc_token_amount\",\n    inputs: [\n      {\n        name: \"amounts\",\n        type: \"uint256[3]\",\n      },\n      {\n        name: \"deposit\",\n        type: \"bool\",\n      },\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    gas: 3429,\n  },\n  {\n    stateMutability: \"view\",\n    type: \"function\",\n    name: \"calc_withdraw_one_coin\",\n    inputs: [\n      {\n        name: \"token_amount\",\n        type: \"uint256\",\n      },\n      {\n        name: \"i\",\n        type: \"uint256\",\n      },\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    gas: 13432,\n  },\n  {\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n    name: \"remove_liquidity_one_coin\",\n    inputs: [\n      {\n        name: \"token_amount\",\n        type: \"uint256\",\n      },\n      {\n        name: \"i\",\n        type: \"uint256\",\n      },\n      {\n        name: \"min_amount\",\n        type: \"uint256\",\n      },\n    ],\n    outputs: [],\n    gas: 648579,\n  },\n  {\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n    name: \"claim_admin_fees\",\n    inputs: [],\n    outputs: [],\n    gas: 389808,\n  },\n  {\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n    name: \"ramp_A_gamma\",\n    inputs: [\n      {\n        name: \"future_A\",\n        type: \"uint256\",\n      },\n      {\n        name: \"future_gamma\",\n        type: \"uint256\",\n      },\n      {\n        name: \"future_time\",\n        type: \"uint256\",\n      },\n    ],\n    outputs: [],\n    gas: 163102,\n  },\n  {\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n    name: \"stop_ramp_A_gamma\",\n    inputs: [],\n    outputs: [],\n    gas: 157247,\n  },\n  {\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n    name: \"commit_new_parameters\",\n    inputs: [\n      {\n        name: \"_new_mid_fee\",\n        type: \"uint256\",\n      },\n      {\n        name: \"_new_out_fee\",\n        type: \"uint256\",\n      },\n      {\n        name: \"_new_admin_fee\",\n        type: \"uint256\",\n      },\n      {\n        name: \"_new_fee_gamma\",\n        type: \"uint256\",\n      },\n      {\n        name: \"_new_allowed_extra_profit\",\n        type: \"uint256\",\n      },\n      {\n        name: \"_new_adjustment_step\",\n        type: \"uint256\",\n      },\n      {\n        name: \"_new_ma_half_time\",\n        type: \"uint256\",\n      },\n    ],\n    outputs: [],\n    gas: 306190,\n  },\n  {\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n    name: \"apply_new_parameters\",\n    inputs: [],\n    outputs: [],\n    gas: 683438,\n  },\n  {\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n    name: \"revert_new_parameters\",\n    inputs: [],\n    outputs: [],\n    gas: 23222,\n  },\n  {\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n    name: \"commit_transfer_ownership\",\n    inputs: [\n      {\n        name: \"_owner\",\n        type: \"address\",\n      },\n    ],\n    outputs: [],\n    gas: 77260,\n  },\n  {\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n    name: \"apply_transfer_ownership\",\n    inputs: [],\n    outputs: [],\n    gas: 65937,\n  },\n  {\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n    name: \"revert_transfer_ownership\",\n    inputs: [],\n    outputs: [],\n    gas: 23312,\n  },\n  {\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n    name: \"kill_me\",\n    inputs: [],\n    outputs: [],\n    gas: 40535,\n  },\n  {\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n    name: \"unkill_me\",\n    inputs: [],\n    outputs: [],\n    gas: 23372,\n  },\n  {\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n    name: \"set_admin_fee_receiver\",\n    inputs: [\n      {\n        name: \"_admin_fee_receiver\",\n        type: \"address\",\n      },\n    ],\n    outputs: [],\n    gas: 38505,\n  },\n  {\n    stateMutability: \"view\",\n    type: \"function\",\n    name: \"last_prices_timestamp\",\n    inputs: [],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    gas: 3378,\n  },\n  {\n    stateMutability: \"view\",\n    type: \"function\",\n    name: \"initial_A_gamma\",\n    inputs: [],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    gas: 3408,\n  },\n  {\n    stateMutability: \"view\",\n    type: \"function\",\n    name: \"future_A_gamma\",\n    inputs: [],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    gas: 3438,\n  },\n  {\n    stateMutability: \"view\",\n    type: \"function\",\n    name: \"initial_A_gamma_time\",\n    inputs: [],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    gas: 3468,\n  },\n  {\n    stateMutability: \"view\",\n    type: \"function\",\n    name: \"future_A_gamma_time\",\n    inputs: [],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    gas: 3498,\n  },\n  {\n    stateMutability: \"view\",\n    type: \"function\",\n    name: \"allowed_extra_profit\",\n    inputs: [],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    gas: 3528,\n  },\n  {\n    stateMutability: \"view\",\n    type: \"function\",\n    name: \"future_allowed_extra_profit\",\n    inputs: [],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    gas: 3558,\n  },\n  {\n    stateMutability: \"view\",\n    type: \"function\",\n    name: \"fee_gamma\",\n    inputs: [],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    gas: 3588,\n  },\n  {\n    stateMutability: \"view\",\n    type: \"function\",\n    name: \"future_fee_gamma\",\n    inputs: [],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    gas: 3618,\n  },\n  {\n    stateMutability: \"view\",\n    type: \"function\",\n    name: \"adjustment_step\",\n    inputs: [],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    gas: 3648,\n  },\n  {\n    stateMutability: \"view\",\n    type: \"function\",\n    name: \"future_adjustment_step\",\n    inputs: [],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    gas: 3678,\n  },\n  {\n    stateMutability: \"view\",\n    type: \"function\",\n    name: \"ma_half_time\",\n    inputs: [],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    gas: 3708,\n  },\n  {\n    stateMutability: \"view\",\n    type: \"function\",\n    name: \"future_ma_half_time\",\n    inputs: [],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    gas: 3738,\n  },\n  {\n    stateMutability: \"view\",\n    type: \"function\",\n    name: \"mid_fee\",\n    inputs: [],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    gas: 3768,\n  },\n  {\n    stateMutability: \"view\",\n    type: \"function\",\n    name: \"out_fee\",\n    inputs: [],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    gas: 3798,\n  },\n  {\n    stateMutability: \"view\",\n    type: \"function\",\n    name: \"admin_fee\",\n    inputs: [],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    gas: 3828,\n  },\n  {\n    stateMutability: \"view\",\n    type: \"function\",\n    name: \"future_mid_fee\",\n    inputs: [],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    gas: 3858,\n  },\n  {\n    stateMutability: \"view\",\n    type: \"function\",\n    name: \"future_out_fee\",\n    inputs: [],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    gas: 3888,\n  },\n  {\n    stateMutability: \"view\",\n    type: \"function\",\n    name: \"future_admin_fee\",\n    inputs: [],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    gas: 3918,\n  },\n  {\n    stateMutability: \"view\",\n    type: \"function\",\n    name: \"balances\",\n    inputs: [\n      {\n        name: \"arg0\",\n        type: \"uint256\",\n      },\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    gas: 4057,\n  },\n  {\n    stateMutability: \"view\",\n    type: \"function\",\n    name: \"D\",\n    inputs: [],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    gas: 3978,\n  },\n  {\n    stateMutability: \"view\",\n    type: \"function\",\n    name: \"owner\",\n    inputs: [],\n    outputs: [\n      {\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    gas: 4008,\n  },\n  {\n    stateMutability: \"view\",\n    type: \"function\",\n    name: \"future_owner\",\n    inputs: [],\n    outputs: [\n      {\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    gas: 4038,\n  },\n  {\n    stateMutability: \"view\",\n    type: \"function\",\n    name: \"xcp_profit\",\n    inputs: [],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    gas: 4068,\n  },\n  {\n    stateMutability: \"view\",\n    type: \"function\",\n    name: \"xcp_profit_a\",\n    inputs: [],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    gas: 4098,\n  },\n  {\n    stateMutability: \"view\",\n    type: \"function\",\n    name: \"virtual_price\",\n    inputs: [],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    gas: 4128,\n  },\n  {\n    stateMutability: \"view\",\n    type: \"function\",\n    name: \"is_killed\",\n    inputs: [],\n    outputs: [\n      {\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    gas: 4158,\n  },\n  {\n    stateMutability: \"view\",\n    type: \"function\",\n    name: \"kill_deadline\",\n    inputs: [],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    gas: 4188,\n  },\n  {\n    stateMutability: \"view\",\n    type: \"function\",\n    name: \"transfer_ownership_deadline\",\n    inputs: [],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    gas: 4218,\n  },\n  {\n    stateMutability: \"view\",\n    type: \"function\",\n    name: \"admin_actions_deadline\",\n    inputs: [],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    gas: 4248,\n  },\n  {\n    stateMutability: \"view\",\n    type: \"function\",\n    name: \"admin_fee_receiver\",\n    inputs: [],\n    outputs: [\n      {\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    gas: 4278,\n  },\n];\n\nexport class CurveTriCrypto2Pool__factory {\n  static readonly abi = _abi;\n  static createInterface(): CurveTriCrypto2PoolInterface {\n    return new utils.Interface(_abi) as CurveTriCrypto2PoolInterface;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): CurveTriCrypto2Pool {\n    return new Contract(address, _abi, signerOrProvider) as CurveTriCrypto2Pool;\n  }\n}\n","/* Autogenerated file. Do not edit manually. */\n// @ts-nocheck\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Contract, Signer, utils } from \"ethers\";\nimport type { Provider } from \"@ethersproject/providers\";\nimport type {\n  CurveCryptoFactory,\n  CurveCryptoFactoryInterface,\n} from \"../../../Curve/Registry/CurveCryptoFactory\";\n\nconst _abi = [\n  {\n    name: \"PoolAdded\",\n    inputs: [\n      {\n        name: \"pool\",\n        type: \"address\",\n        indexed: true,\n      },\n    ],\n    anonymous: false,\n    type: \"event\",\n  },\n  {\n    name: \"PoolRemoved\",\n    inputs: [\n      {\n        name: \"pool\",\n        type: \"address\",\n        indexed: true,\n      },\n    ],\n    anonymous: false,\n    type: \"event\",\n  },\n  {\n    stateMutability: \"nonpayable\",\n    type: \"constructor\",\n    inputs: [\n      {\n        name: \"_address_provider\",\n        type: \"address\",\n      },\n    ],\n    outputs: [],\n  },\n  {\n    stateMutability: \"view\",\n    type: \"function\",\n    name: \"find_pool_for_coins\",\n    inputs: [\n      {\n        name: \"_from\",\n        type: \"address\",\n      },\n      {\n        name: \"_to\",\n        type: \"address\",\n      },\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    gas: 3111,\n  },\n  {\n    stateMutability: \"view\",\n    type: \"function\",\n    name: \"find_pool_for_coins\",\n    inputs: [\n      {\n        name: \"_from\",\n        type: \"address\",\n      },\n      {\n        name: \"_to\",\n        type: \"address\",\n      },\n      {\n        name: \"i\",\n        type: \"uint256\",\n      },\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    gas: 3111,\n  },\n  {\n    stateMutability: \"view\",\n    type: \"function\",\n    name: \"get_n_coins\",\n    inputs: [\n      {\n        name: \"_pool\",\n        type: \"address\",\n      },\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    gas: 2834,\n  },\n  {\n    stateMutability: \"view\",\n    type: \"function\",\n    name: \"get_coins\",\n    inputs: [\n      {\n        name: \"_pool\",\n        type: \"address\",\n      },\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"address[8]\",\n      },\n    ],\n    gas: 22975,\n  },\n  {\n    stateMutability: \"view\",\n    type: \"function\",\n    name: \"get_decimals\",\n    inputs: [\n      {\n        name: \"_pool\",\n        type: \"address\",\n      },\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256[8]\",\n      },\n    ],\n    gas: 9818,\n  },\n  {\n    stateMutability: \"view\",\n    type: \"function\",\n    name: \"get_gauges\",\n    inputs: [\n      {\n        name: \"_pool\",\n        type: \"address\",\n      },\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"address[10]\",\n      },\n      {\n        name: \"\",\n        type: \"int128[10]\",\n      },\n    ],\n    gas: 26055,\n  },\n  {\n    stateMutability: \"view\",\n    type: \"function\",\n    name: \"get_balances\",\n    inputs: [\n      {\n        name: \"_pool\",\n        type: \"address\",\n      },\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256[8]\",\n      },\n    ],\n    gas: 41626,\n  },\n  {\n    stateMutability: \"view\",\n    type: \"function\",\n    name: \"get_virtual_price_from_lp_token\",\n    inputs: [\n      {\n        name: \"_token\",\n        type: \"address\",\n      },\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    gas: 5321,\n  },\n  {\n    stateMutability: \"view\",\n    type: \"function\",\n    name: \"get_A\",\n    inputs: [\n      {\n        name: \"_pool\",\n        type: \"address\",\n      },\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    gas: 3139,\n  },\n  {\n    stateMutability: \"view\",\n    type: \"function\",\n    name: \"get_D\",\n    inputs: [\n      {\n        name: \"_pool\",\n        type: \"address\",\n      },\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    gas: 3169,\n  },\n  {\n    stateMutability: \"view\",\n    type: \"function\",\n    name: \"get_gamma\",\n    inputs: [\n      {\n        name: \"_pool\",\n        type: \"address\",\n      },\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    gas: 3199,\n  },\n  {\n    stateMutability: \"view\",\n    type: \"function\",\n    name: \"get_fees\",\n    inputs: [\n      {\n        name: \"_pool\",\n        type: \"address\",\n      },\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256[4]\",\n      },\n    ],\n    gas: 10333,\n  },\n  {\n    stateMutability: \"view\",\n    type: \"function\",\n    name: \"get_admin_balances\",\n    inputs: [\n      {\n        name: \"_pool\",\n        type: \"address\",\n      },\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256[8]\",\n      },\n    ],\n    gas: 85771,\n  },\n  {\n    stateMutability: \"view\",\n    type: \"function\",\n    name: \"get_coin_indices\",\n    inputs: [\n      {\n        name: \"_pool\",\n        type: \"address\",\n      },\n      {\n        name: \"_from\",\n        type: \"address\",\n      },\n      {\n        name: \"_to\",\n        type: \"address\",\n      },\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\",\n      },\n      {\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    gas: 23608,\n  },\n  {\n    stateMutability: \"view\",\n    type: \"function\",\n    name: \"get_pool_name\",\n    inputs: [\n      {\n        name: \"_pool\",\n        type: \"address\",\n      },\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    gas: 13576,\n  },\n  {\n    stateMutability: \"view\",\n    type: \"function\",\n    name: \"get_coin_swap_count\",\n    inputs: [\n      {\n        name: \"_coin\",\n        type: \"address\",\n      },\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    gas: 3224,\n  },\n  {\n    stateMutability: \"view\",\n    type: \"function\",\n    name: \"get_coin_swap_complement\",\n    inputs: [\n      {\n        name: \"_coin\",\n        type: \"address\",\n      },\n      {\n        name: \"_index\",\n        type: \"uint256\",\n      },\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    gas: 3299,\n  },\n  {\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n    name: \"add_pool\",\n    inputs: [\n      {\n        name: \"_pool\",\n        type: \"address\",\n      },\n      {\n        name: \"_n_coins\",\n        type: \"uint256\",\n      },\n      {\n        name: \"_lp_token\",\n        type: \"address\",\n      },\n      {\n        name: \"_gauge\",\n        type: \"address\",\n      },\n      {\n        name: \"_zap\",\n        type: \"address\",\n      },\n      {\n        name: \"_decimals\",\n        type: \"uint256\",\n      },\n      {\n        name: \"_name\",\n        type: \"string\",\n      },\n    ],\n    outputs: [],\n    gas: 18586944,\n  },\n  {\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n    name: \"remove_pool\",\n    inputs: [\n      {\n        name: \"_pool\",\n        type: \"address\",\n      },\n    ],\n    outputs: [],\n    gas: 399675363514,\n  },\n  {\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n    name: \"set_liquidity_gauges\",\n    inputs: [\n      {\n        name: \"_pool\",\n        type: \"address\",\n      },\n      {\n        name: \"_liquidity_gauges\",\n        type: \"address[10]\",\n      },\n    ],\n    outputs: [],\n    gas: 422284,\n  },\n  {\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n    name: \"batch_set_liquidity_gauges\",\n    inputs: [\n      {\n        name: \"_pools\",\n        type: \"address[10]\",\n      },\n      {\n        name: \"_liquidity_gauges\",\n        type: \"address[10]\",\n      },\n    ],\n    outputs: [],\n    gas: 444084,\n  },\n  {\n    stateMutability: \"view\",\n    type: \"function\",\n    name: \"address_provider\",\n    inputs: [],\n    outputs: [\n      {\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    gas: 3126,\n  },\n  {\n    stateMutability: \"view\",\n    type: \"function\",\n    name: \"pool_list\",\n    inputs: [\n      {\n        name: \"arg0\",\n        type: \"uint256\",\n      },\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    gas: 3201,\n  },\n  {\n    stateMutability: \"view\",\n    type: \"function\",\n    name: \"pool_count\",\n    inputs: [],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    gas: 3186,\n  },\n  {\n    stateMutability: \"view\",\n    type: \"function\",\n    name: \"coin_count\",\n    inputs: [],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    gas: 3216,\n  },\n  {\n    stateMutability: \"view\",\n    type: \"function\",\n    name: \"get_coin\",\n    inputs: [\n      {\n        name: \"arg0\",\n        type: \"uint256\",\n      },\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    gas: 3291,\n  },\n  {\n    stateMutability: \"view\",\n    type: \"function\",\n    name: \"get_pool_from_lp_token\",\n    inputs: [\n      {\n        name: \"arg0\",\n        type: \"address\",\n      },\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    gas: 3548,\n  },\n  {\n    stateMutability: \"view\",\n    type: \"function\",\n    name: \"get_lp_token\",\n    inputs: [\n      {\n        name: \"arg0\",\n        type: \"address\",\n      },\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    gas: 3578,\n  },\n  {\n    stateMutability: \"view\",\n    type: \"function\",\n    name: \"get_zap\",\n    inputs: [\n      {\n        name: \"arg0\",\n        type: \"address\",\n      },\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    gas: 3608,\n  },\n  {\n    stateMutability: \"view\",\n    type: \"function\",\n    name: \"last_updated\",\n    inputs: [],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    gas: 3366,\n  },\n];\n\nexport class CurveCryptoFactory__factory {\n  static readonly abi = _abi;\n  static createInterface(): CurveCryptoFactoryInterface {\n    return new utils.Interface(_abi) as CurveCryptoFactoryInterface;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): CurveCryptoFactory {\n    return new Contract(address, _abi, signerOrProvider) as CurveCryptoFactory;\n  }\n}\n","/* Autogenerated file. Do not edit manually. */\n// @ts-nocheck\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Contract, Signer, utils } from \"ethers\";\nimport type { Provider } from \"@ethersproject/providers\";\nimport type {\n  CurveMetaFactory,\n  CurveMetaFactoryInterface,\n} from \"../../../Curve/Registry/CurveMetaFactory\";\n\nconst _abi = [\n  {\n    name: \"BasePoolAdded\",\n    inputs: [\n      {\n        name: \"base_pool\",\n        type: \"address\",\n        indexed: false,\n      },\n    ],\n    anonymous: false,\n    type: \"event\",\n  },\n  {\n    name: \"PlainPoolDeployed\",\n    inputs: [\n      {\n        name: \"coins\",\n        type: \"address[4]\",\n        indexed: false,\n      },\n      {\n        name: \"A\",\n        type: \"uint256\",\n        indexed: false,\n      },\n      {\n        name: \"fee\",\n        type: \"uint256\",\n        indexed: false,\n      },\n      {\n        name: \"deployer\",\n        type: \"address\",\n        indexed: false,\n      },\n    ],\n    anonymous: false,\n    type: \"event\",\n  },\n  {\n    name: \"MetaPoolDeployed\",\n    inputs: [\n      {\n        name: \"coin\",\n        type: \"address\",\n        indexed: false,\n      },\n      {\n        name: \"base_pool\",\n        type: \"address\",\n        indexed: false,\n      },\n      {\n        name: \"A\",\n        type: \"uint256\",\n        indexed: false,\n      },\n      {\n        name: \"fee\",\n        type: \"uint256\",\n        indexed: false,\n      },\n      {\n        name: \"deployer\",\n        type: \"address\",\n        indexed: false,\n      },\n    ],\n    anonymous: false,\n    type: \"event\",\n  },\n  {\n    name: \"LiquidityGaugeDeployed\",\n    inputs: [\n      {\n        name: \"pool\",\n        type: \"address\",\n        indexed: false,\n      },\n      {\n        name: \"gauge\",\n        type: \"address\",\n        indexed: false,\n      },\n    ],\n    anonymous: false,\n    type: \"event\",\n  },\n  {\n    stateMutability: \"nonpayable\",\n    type: \"constructor\",\n    inputs: [\n      {\n        name: \"_fee_receiver\",\n        type: \"address\",\n      },\n    ],\n    outputs: [],\n  },\n  {\n    stateMutability: \"view\",\n    type: \"function\",\n    name: \"metapool_implementations\",\n    inputs: [\n      {\n        name: \"_base_pool\",\n        type: \"address\",\n      },\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"address[10]\",\n      },\n    ],\n    gas: 21716,\n  },\n  {\n    stateMutability: \"view\",\n    type: \"function\",\n    name: \"find_pool_for_coins\",\n    inputs: [\n      {\n        name: \"_from\",\n        type: \"address\",\n      },\n      {\n        name: \"_to\",\n        type: \"address\",\n      },\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n  },\n  {\n    stateMutability: \"view\",\n    type: \"function\",\n    name: \"find_pool_for_coins\",\n    inputs: [\n      {\n        name: \"_from\",\n        type: \"address\",\n      },\n      {\n        name: \"_to\",\n        type: \"address\",\n      },\n      {\n        name: \"i\",\n        type: \"uint256\",\n      },\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n  },\n  {\n    stateMutability: \"view\",\n    type: \"function\",\n    name: \"get_base_pool\",\n    inputs: [\n      {\n        name: \"_pool\",\n        type: \"address\",\n      },\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    gas: 2663,\n  },\n  {\n    stateMutability: \"view\",\n    type: \"function\",\n    name: \"get_n_coins\",\n    inputs: [\n      {\n        name: \"_pool\",\n        type: \"address\",\n      },\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    gas: 2699,\n  },\n  {\n    stateMutability: \"view\",\n    type: \"function\",\n    name: \"get_meta_n_coins\",\n    inputs: [\n      {\n        name: \"_pool\",\n        type: \"address\",\n      },\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\",\n      },\n      {\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    gas: 5201,\n  },\n  {\n    stateMutability: \"view\",\n    type: \"function\",\n    name: \"get_coins\",\n    inputs: [\n      {\n        name: \"_pool\",\n        type: \"address\",\n      },\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"address[4]\",\n      },\n    ],\n    gas: 9164,\n  },\n  {\n    stateMutability: \"view\",\n    type: \"function\",\n    name: \"get_underlying_coins\",\n    inputs: [\n      {\n        name: \"_pool\",\n        type: \"address\",\n      },\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"address[8]\",\n      },\n    ],\n    gas: 21345,\n  },\n  {\n    stateMutability: \"view\",\n    type: \"function\",\n    name: \"get_decimals\",\n    inputs: [\n      {\n        name: \"_pool\",\n        type: \"address\",\n      },\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256[4]\",\n      },\n    ],\n    gas: 20185,\n  },\n  {\n    stateMutability: \"view\",\n    type: \"function\",\n    name: \"get_underlying_decimals\",\n    inputs: [\n      {\n        name: \"_pool\",\n        type: \"address\",\n      },\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256[8]\",\n      },\n    ],\n    gas: 19730,\n  },\n  {\n    stateMutability: \"view\",\n    type: \"function\",\n    name: \"get_metapool_rates\",\n    inputs: [\n      {\n        name: \"_pool\",\n        type: \"address\",\n      },\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256[2]\",\n      },\n    ],\n    gas: 5281,\n  },\n  {\n    stateMutability: \"view\",\n    type: \"function\",\n    name: \"get_balances\",\n    inputs: [\n      {\n        name: \"_pool\",\n        type: \"address\",\n      },\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256[4]\",\n      },\n    ],\n    gas: 20435,\n  },\n  {\n    stateMutability: \"view\",\n    type: \"function\",\n    name: \"get_underlying_balances\",\n    inputs: [\n      {\n        name: \"_pool\",\n        type: \"address\",\n      },\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256[8]\",\n      },\n    ],\n    gas: 39733,\n  },\n  {\n    stateMutability: \"view\",\n    type: \"function\",\n    name: \"get_A\",\n    inputs: [\n      {\n        name: \"_pool\",\n        type: \"address\",\n      },\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    gas: 3135,\n  },\n  {\n    stateMutability: \"view\",\n    type: \"function\",\n    name: \"get_fees\",\n    inputs: [\n      {\n        name: \"_pool\",\n        type: \"address\",\n      },\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\",\n      },\n      {\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    gas: 5821,\n  },\n  {\n    stateMutability: \"view\",\n    type: \"function\",\n    name: \"get_admin_balances\",\n    inputs: [\n      {\n        name: \"_pool\",\n        type: \"address\",\n      },\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256[4]\",\n      },\n    ],\n    gas: 13535,\n  },\n  {\n    stateMutability: \"view\",\n    type: \"function\",\n    name: \"get_coin_indices\",\n    inputs: [\n      {\n        name: \"_pool\",\n        type: \"address\",\n      },\n      {\n        name: \"_from\",\n        type: \"address\",\n      },\n      {\n        name: \"_to\",\n        type: \"address\",\n      },\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"int128\",\n      },\n      {\n        name: \"\",\n        type: \"int128\",\n      },\n      {\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    gas: 33407,\n  },\n  {\n    stateMutability: \"view\",\n    type: \"function\",\n    name: \"get_gauge\",\n    inputs: [\n      {\n        name: \"_pool\",\n        type: \"address\",\n      },\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    gas: 3089,\n  },\n  {\n    stateMutability: \"view\",\n    type: \"function\",\n    name: \"get_implementation_address\",\n    inputs: [\n      {\n        name: \"_pool\",\n        type: \"address\",\n      },\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    gas: 3119,\n  },\n  {\n    stateMutability: \"view\",\n    type: \"function\",\n    name: \"is_meta\",\n    inputs: [\n      {\n        name: \"_pool\",\n        type: \"address\",\n      },\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    gas: 3152,\n  },\n  {\n    stateMutability: \"view\",\n    type: \"function\",\n    name: \"get_pool_asset_type\",\n    inputs: [\n      {\n        name: \"_pool\",\n        type: \"address\",\n      },\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    gas: 5450,\n  },\n  {\n    stateMutability: \"view\",\n    type: \"function\",\n    name: \"get_fee_receiver\",\n    inputs: [\n      {\n        name: \"_pool\",\n        type: \"address\",\n      },\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    gas: 5480,\n  },\n  {\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n    name: \"deploy_plain_pool\",\n    inputs: [\n      {\n        name: \"_name\",\n        type: \"string\",\n      },\n      {\n        name: \"_symbol\",\n        type: \"string\",\n      },\n      {\n        name: \"_coins\",\n        type: \"address[4]\",\n      },\n      {\n        name: \"_A\",\n        type: \"uint256\",\n      },\n      {\n        name: \"_fee\",\n        type: \"uint256\",\n      },\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n  },\n  {\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n    name: \"deploy_plain_pool\",\n    inputs: [\n      {\n        name: \"_name\",\n        type: \"string\",\n      },\n      {\n        name: \"_symbol\",\n        type: \"string\",\n      },\n      {\n        name: \"_coins\",\n        type: \"address[4]\",\n      },\n      {\n        name: \"_A\",\n        type: \"uint256\",\n      },\n      {\n        name: \"_fee\",\n        type: \"uint256\",\n      },\n      {\n        name: \"_asset_type\",\n        type: \"uint256\",\n      },\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n  },\n  {\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n    name: \"deploy_plain_pool\",\n    inputs: [\n      {\n        name: \"_name\",\n        type: \"string\",\n      },\n      {\n        name: \"_symbol\",\n        type: \"string\",\n      },\n      {\n        name: \"_coins\",\n        type: \"address[4]\",\n      },\n      {\n        name: \"_A\",\n        type: \"uint256\",\n      },\n      {\n        name: \"_fee\",\n        type: \"uint256\",\n      },\n      {\n        name: \"_asset_type\",\n        type: \"uint256\",\n      },\n      {\n        name: \"_implementation_idx\",\n        type: \"uint256\",\n      },\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n  },\n  {\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n    name: \"deploy_metapool\",\n    inputs: [\n      {\n        name: \"_base_pool\",\n        type: \"address\",\n      },\n      {\n        name: \"_name\",\n        type: \"string\",\n      },\n      {\n        name: \"_symbol\",\n        type: \"string\",\n      },\n      {\n        name: \"_coin\",\n        type: \"address\",\n      },\n      {\n        name: \"_A\",\n        type: \"uint256\",\n      },\n      {\n        name: \"_fee\",\n        type: \"uint256\",\n      },\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n  },\n  {\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n    name: \"deploy_metapool\",\n    inputs: [\n      {\n        name: \"_base_pool\",\n        type: \"address\",\n      },\n      {\n        name: \"_name\",\n        type: \"string\",\n      },\n      {\n        name: \"_symbol\",\n        type: \"string\",\n      },\n      {\n        name: \"_coin\",\n        type: \"address\",\n      },\n      {\n        name: \"_A\",\n        type: \"uint256\",\n      },\n      {\n        name: \"_fee\",\n        type: \"uint256\",\n      },\n      {\n        name: \"_implementation_idx\",\n        type: \"uint256\",\n      },\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n  },\n  {\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n    name: \"deploy_gauge\",\n    inputs: [\n      {\n        name: \"_pool\",\n        type: \"address\",\n      },\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    gas: 93079,\n  },\n  {\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n    name: \"add_base_pool\",\n    inputs: [\n      {\n        name: \"_base_pool\",\n        type: \"address\",\n      },\n      {\n        name: \"_fee_receiver\",\n        type: \"address\",\n      },\n      {\n        name: \"_asset_type\",\n        type: \"uint256\",\n      },\n      {\n        name: \"_implementations\",\n        type: \"address[10]\",\n      },\n    ],\n    outputs: [],\n    gas: 1206132,\n  },\n  {\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n    name: \"set_metapool_implementations\",\n    inputs: [\n      {\n        name: \"_base_pool\",\n        type: \"address\",\n      },\n      {\n        name: \"_implementations\",\n        type: \"address[10]\",\n      },\n    ],\n    outputs: [],\n    gas: 382072,\n  },\n  {\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n    name: \"set_plain_implementations\",\n    inputs: [\n      {\n        name: \"_n_coins\",\n        type: \"uint256\",\n      },\n      {\n        name: \"_implementations\",\n        type: \"address[10]\",\n      },\n    ],\n    outputs: [],\n    gas: 379687,\n  },\n  {\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n    name: \"set_gauge_implementation\",\n    inputs: [\n      {\n        name: \"_gauge_implementation\",\n        type: \"address\",\n      },\n    ],\n    outputs: [],\n    gas: 38355,\n  },\n  {\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n    name: \"batch_set_pool_asset_type\",\n    inputs: [\n      {\n        name: \"_pools\",\n        type: \"address[32]\",\n      },\n      {\n        name: \"_asset_types\",\n        type: \"uint256[32]\",\n      },\n    ],\n    outputs: [],\n    gas: 1139545,\n  },\n  {\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n    name: \"commit_transfer_ownership\",\n    inputs: [\n      {\n        name: \"_addr\",\n        type: \"address\",\n      },\n    ],\n    outputs: [],\n    gas: 38415,\n  },\n  {\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n    name: \"accept_transfer_ownership\",\n    inputs: [],\n    outputs: [],\n    gas: 58366,\n  },\n  {\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n    name: \"set_manager\",\n    inputs: [\n      {\n        name: \"_manager\",\n        type: \"address\",\n      },\n    ],\n    outputs: [],\n    gas: 40996,\n  },\n  {\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n    name: \"set_fee_receiver\",\n    inputs: [\n      {\n        name: \"_base_pool\",\n        type: \"address\",\n      },\n      {\n        name: \"_fee_receiver\",\n        type: \"address\",\n      },\n    ],\n    outputs: [],\n    gas: 38770,\n  },\n  {\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n    name: \"convert_metapool_fees\",\n    inputs: [],\n    outputs: [\n      {\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    gas: 12880,\n  },\n  {\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n    name: \"add_existing_metapools\",\n    inputs: [\n      {\n        name: \"_pools\",\n        type: \"address[10]\",\n      },\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    gas: 8610792,\n  },\n  {\n    stateMutability: \"view\",\n    type: \"function\",\n    name: \"admin\",\n    inputs: [],\n    outputs: [\n      {\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    gas: 3438,\n  },\n  {\n    stateMutability: \"view\",\n    type: \"function\",\n    name: \"future_admin\",\n    inputs: [],\n    outputs: [\n      {\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    gas: 3468,\n  },\n  {\n    stateMutability: \"view\",\n    type: \"function\",\n    name: \"manager\",\n    inputs: [],\n    outputs: [\n      {\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    gas: 3498,\n  },\n  {\n    stateMutability: \"view\",\n    type: \"function\",\n    name: \"pool_list\",\n    inputs: [\n      {\n        name: \"arg0\",\n        type: \"uint256\",\n      },\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    gas: 3573,\n  },\n  {\n    stateMutability: \"view\",\n    type: \"function\",\n    name: \"pool_count\",\n    inputs: [],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    gas: 3558,\n  },\n  {\n    stateMutability: \"view\",\n    type: \"function\",\n    name: \"base_pool_list\",\n    inputs: [\n      {\n        name: \"arg0\",\n        type: \"uint256\",\n      },\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    gas: 3633,\n  },\n  {\n    stateMutability: \"view\",\n    type: \"function\",\n    name: \"base_pool_count\",\n    inputs: [],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    gas: 3618,\n  },\n  {\n    stateMutability: \"view\",\n    type: \"function\",\n    name: \"base_pool_assets\",\n    inputs: [\n      {\n        name: \"arg0\",\n        type: \"address\",\n      },\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    gas: 3863,\n  },\n  {\n    stateMutability: \"view\",\n    type: \"function\",\n    name: \"plain_implementations\",\n    inputs: [\n      {\n        name: \"arg0\",\n        type: \"uint256\",\n      },\n      {\n        name: \"arg1\",\n        type: \"uint256\",\n      },\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    gas: 3838,\n  },\n  {\n    stateMutability: \"view\",\n    type: \"function\",\n    name: \"gauge_implementation\",\n    inputs: [],\n    outputs: [\n      {\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    gas: 3708,\n  },\n];\n\nexport class CurveMetaFactory__factory {\n  static readonly abi = _abi;\n  static createInterface(): CurveMetaFactoryInterface {\n    return new utils.Interface(_abi) as CurveMetaFactoryInterface;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): CurveMetaFactory {\n    return new Contract(address, _abi, signerOrProvider) as CurveMetaFactory;\n  }\n}\n","/* Autogenerated file. Do not edit manually. */\n// @ts-nocheck\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Contract, Signer, utils } from \"ethers\";\nimport type { Provider } from \"@ethersproject/providers\";\nimport type {\n  CurveRegistry,\n  CurveRegistryInterface,\n} from \"../../../Curve/Registry/CurveRegistry\";\n\nconst _abi = [\n  {\n    name: \"PoolAdded\",\n    inputs: [\n      {\n        name: \"pool\",\n        type: \"address\",\n        indexed: true,\n      },\n      {\n        name: \"rate_method_id\",\n        type: \"bytes\",\n        indexed: false,\n      },\n    ],\n    anonymous: false,\n    type: \"event\",\n  },\n  {\n    name: \"PoolRemoved\",\n    inputs: [\n      {\n        name: \"pool\",\n        type: \"address\",\n        indexed: true,\n      },\n    ],\n    anonymous: false,\n    type: \"event\",\n  },\n  {\n    stateMutability: \"nonpayable\",\n    type: \"constructor\",\n    inputs: [\n      {\n        name: \"_address_provider\",\n        type: \"address\",\n      },\n      {\n        name: \"_gauge_controller\",\n        type: \"address\",\n      },\n    ],\n    outputs: [],\n  },\n  {\n    stateMutability: \"view\",\n    type: \"function\",\n    name: \"find_pool_for_coins\",\n    inputs: [\n      {\n        name: \"_from\",\n        type: \"address\",\n      },\n      {\n        name: \"_to\",\n        type: \"address\",\n      },\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n  },\n  {\n    stateMutability: \"view\",\n    type: \"function\",\n    name: \"find_pool_for_coins\",\n    inputs: [\n      {\n        name: \"_from\",\n        type: \"address\",\n      },\n      {\n        name: \"_to\",\n        type: \"address\",\n      },\n      {\n        name: \"i\",\n        type: \"uint256\",\n      },\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n  },\n  {\n    stateMutability: \"view\",\n    type: \"function\",\n    name: \"get_n_coins\",\n    inputs: [\n      {\n        name: \"_pool\",\n        type: \"address\",\n      },\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256[2]\",\n      },\n    ],\n    gas: 1521,\n  },\n  {\n    stateMutability: \"view\",\n    type: \"function\",\n    name: \"get_coins\",\n    inputs: [\n      {\n        name: \"_pool\",\n        type: \"address\",\n      },\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"address[8]\",\n      },\n    ],\n    gas: 12102,\n  },\n  {\n    stateMutability: \"view\",\n    type: \"function\",\n    name: \"get_underlying_coins\",\n    inputs: [\n      {\n        name: \"_pool\",\n        type: \"address\",\n      },\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"address[8]\",\n      },\n    ],\n    gas: 12194,\n  },\n  {\n    stateMutability: \"view\",\n    type: \"function\",\n    name: \"get_decimals\",\n    inputs: [\n      {\n        name: \"_pool\",\n        type: \"address\",\n      },\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256[8]\",\n      },\n    ],\n    gas: 7874,\n  },\n  {\n    stateMutability: \"view\",\n    type: \"function\",\n    name: \"get_underlying_decimals\",\n    inputs: [\n      {\n        name: \"_pool\",\n        type: \"address\",\n      },\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256[8]\",\n      },\n    ],\n    gas: 7966,\n  },\n  {\n    stateMutability: \"view\",\n    type: \"function\",\n    name: \"get_rates\",\n    inputs: [\n      {\n        name: \"_pool\",\n        type: \"address\",\n      },\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256[8]\",\n      },\n    ],\n    gas: 36992,\n  },\n  {\n    stateMutability: \"view\",\n    type: \"function\",\n    name: \"get_gauges\",\n    inputs: [\n      {\n        name: \"_pool\",\n        type: \"address\",\n      },\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"address[10]\",\n      },\n      {\n        name: \"\",\n        type: \"int128[10]\",\n      },\n    ],\n    gas: 20157,\n  },\n  {\n    stateMutability: \"view\",\n    type: \"function\",\n    name: \"get_balances\",\n    inputs: [\n      {\n        name: \"_pool\",\n        type: \"address\",\n      },\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256[8]\",\n      },\n    ],\n    gas: 16583,\n  },\n  {\n    stateMutability: \"view\",\n    type: \"function\",\n    name: \"get_underlying_balances\",\n    inputs: [\n      {\n        name: \"_pool\",\n        type: \"address\",\n      },\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256[8]\",\n      },\n    ],\n    gas: 162842,\n  },\n  {\n    stateMutability: \"view\",\n    type: \"function\",\n    name: \"get_virtual_price_from_lp_token\",\n    inputs: [\n      {\n        name: \"_token\",\n        type: \"address\",\n      },\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    gas: 1927,\n  },\n  {\n    stateMutability: \"view\",\n    type: \"function\",\n    name: \"get_A\",\n    inputs: [\n      {\n        name: \"_pool\",\n        type: \"address\",\n      },\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    gas: 1045,\n  },\n  {\n    stateMutability: \"view\",\n    type: \"function\",\n    name: \"get_parameters\",\n    inputs: [\n      {\n        name: \"_pool\",\n        type: \"address\",\n      },\n    ],\n    outputs: [\n      {\n        name: \"A\",\n        type: \"uint256\",\n      },\n      {\n        name: \"future_A\",\n        type: \"uint256\",\n      },\n      {\n        name: \"fee\",\n        type: \"uint256\",\n      },\n      {\n        name: \"admin_fee\",\n        type: \"uint256\",\n      },\n      {\n        name: \"future_fee\",\n        type: \"uint256\",\n      },\n      {\n        name: \"future_admin_fee\",\n        type: \"uint256\",\n      },\n      {\n        name: \"future_owner\",\n        type: \"address\",\n      },\n      {\n        name: \"initial_A\",\n        type: \"uint256\",\n      },\n      {\n        name: \"initial_A_time\",\n        type: \"uint256\",\n      },\n      {\n        name: \"future_A_time\",\n        type: \"uint256\",\n      },\n    ],\n    gas: 6305,\n  },\n  {\n    stateMutability: \"view\",\n    type: \"function\",\n    name: \"get_fees\",\n    inputs: [\n      {\n        name: \"_pool\",\n        type: \"address\",\n      },\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256[2]\",\n      },\n    ],\n    gas: 1450,\n  },\n  {\n    stateMutability: \"view\",\n    type: \"function\",\n    name: \"get_admin_balances\",\n    inputs: [\n      {\n        name: \"_pool\",\n        type: \"address\",\n      },\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256[8]\",\n      },\n    ],\n    gas: 36454,\n  },\n  {\n    stateMutability: \"view\",\n    type: \"function\",\n    name: \"get_coin_indices\",\n    inputs: [\n      {\n        name: \"_pool\",\n        type: \"address\",\n      },\n      {\n        name: \"_from\",\n        type: \"address\",\n      },\n      {\n        name: \"_to\",\n        type: \"address\",\n      },\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"int128\",\n      },\n      {\n        name: \"\",\n        type: \"int128\",\n      },\n      {\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    gas: 27131,\n  },\n  {\n    stateMutability: \"view\",\n    type: \"function\",\n    name: \"estimate_gas_used\",\n    inputs: [\n      {\n        name: \"_pool\",\n        type: \"address\",\n      },\n      {\n        name: \"_from\",\n        type: \"address\",\n      },\n      {\n        name: \"_to\",\n        type: \"address\",\n      },\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    gas: 32004,\n  },\n  {\n    stateMutability: \"view\",\n    type: \"function\",\n    name: \"is_meta\",\n    inputs: [\n      {\n        name: \"_pool\",\n        type: \"address\",\n      },\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    gas: 1900,\n  },\n  {\n    stateMutability: \"view\",\n    type: \"function\",\n    name: \"get_pool_name\",\n    inputs: [\n      {\n        name: \"_pool\",\n        type: \"address\",\n      },\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    gas: 8323,\n  },\n  {\n    stateMutability: \"view\",\n    type: \"function\",\n    name: \"get_coin_swap_count\",\n    inputs: [\n      {\n        name: \"_coin\",\n        type: \"address\",\n      },\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    gas: 1951,\n  },\n  {\n    stateMutability: \"view\",\n    type: \"function\",\n    name: \"get_coin_swap_complement\",\n    inputs: [\n      {\n        name: \"_coin\",\n        type: \"address\",\n      },\n      {\n        name: \"_index\",\n        type: \"uint256\",\n      },\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    gas: 2090,\n  },\n  {\n    stateMutability: \"view\",\n    type: \"function\",\n    name: \"get_pool_asset_type\",\n    inputs: [\n      {\n        name: \"_pool\",\n        type: \"address\",\n      },\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    gas: 2011,\n  },\n  {\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n    name: \"add_pool\",\n    inputs: [\n      {\n        name: \"_pool\",\n        type: \"address\",\n      },\n      {\n        name: \"_n_coins\",\n        type: \"uint256\",\n      },\n      {\n        name: \"_lp_token\",\n        type: \"address\",\n      },\n      {\n        name: \"_rate_info\",\n        type: \"bytes32\",\n      },\n      {\n        name: \"_decimals\",\n        type: \"uint256\",\n      },\n      {\n        name: \"_underlying_decimals\",\n        type: \"uint256\",\n      },\n      {\n        name: \"_has_initial_A\",\n        type: \"bool\",\n      },\n      {\n        name: \"_is_v1\",\n        type: \"bool\",\n      },\n      {\n        name: \"_name\",\n        type: \"string\",\n      },\n    ],\n    outputs: [],\n    gas: 61485845,\n  },\n  {\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n    name: \"add_pool_without_underlying\",\n    inputs: [\n      {\n        name: \"_pool\",\n        type: \"address\",\n      },\n      {\n        name: \"_n_coins\",\n        type: \"uint256\",\n      },\n      {\n        name: \"_lp_token\",\n        type: \"address\",\n      },\n      {\n        name: \"_rate_info\",\n        type: \"bytes32\",\n      },\n      {\n        name: \"_decimals\",\n        type: \"uint256\",\n      },\n      {\n        name: \"_use_rates\",\n        type: \"uint256\",\n      },\n      {\n        name: \"_has_initial_A\",\n        type: \"bool\",\n      },\n      {\n        name: \"_is_v1\",\n        type: \"bool\",\n      },\n      {\n        name: \"_name\",\n        type: \"string\",\n      },\n    ],\n    outputs: [],\n    gas: 31306062,\n  },\n  {\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n    name: \"add_metapool\",\n    inputs: [\n      {\n        name: \"_pool\",\n        type: \"address\",\n      },\n      {\n        name: \"_n_coins\",\n        type: \"uint256\",\n      },\n      {\n        name: \"_lp_token\",\n        type: \"address\",\n      },\n      {\n        name: \"_decimals\",\n        type: \"uint256\",\n      },\n      {\n        name: \"_name\",\n        type: \"string\",\n      },\n    ],\n    outputs: [],\n  },\n  {\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n    name: \"add_metapool\",\n    inputs: [\n      {\n        name: \"_pool\",\n        type: \"address\",\n      },\n      {\n        name: \"_n_coins\",\n        type: \"uint256\",\n      },\n      {\n        name: \"_lp_token\",\n        type: \"address\",\n      },\n      {\n        name: \"_decimals\",\n        type: \"uint256\",\n      },\n      {\n        name: \"_name\",\n        type: \"string\",\n      },\n      {\n        name: \"_base_pool\",\n        type: \"address\",\n      },\n    ],\n    outputs: [],\n  },\n  {\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n    name: \"remove_pool\",\n    inputs: [\n      {\n        name: \"_pool\",\n        type: \"address\",\n      },\n    ],\n    outputs: [],\n    gas: 779731418758,\n  },\n  {\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n    name: \"set_pool_gas_estimates\",\n    inputs: [\n      {\n        name: \"_addr\",\n        type: \"address[5]\",\n      },\n      {\n        name: \"_amount\",\n        type: \"uint256[2][5]\",\n      },\n    ],\n    outputs: [],\n    gas: 390460,\n  },\n  {\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n    name: \"set_coin_gas_estimates\",\n    inputs: [\n      {\n        name: \"_addr\",\n        type: \"address[10]\",\n      },\n      {\n        name: \"_amount\",\n        type: \"uint256[10]\",\n      },\n    ],\n    outputs: [],\n    gas: 392047,\n  },\n  {\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n    name: \"set_gas_estimate_contract\",\n    inputs: [\n      {\n        name: \"_pool\",\n        type: \"address\",\n      },\n      {\n        name: \"_estimator\",\n        type: \"address\",\n      },\n    ],\n    outputs: [],\n    gas: 72629,\n  },\n  {\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n    name: \"set_liquidity_gauges\",\n    inputs: [\n      {\n        name: \"_pool\",\n        type: \"address\",\n      },\n      {\n        name: \"_liquidity_gauges\",\n        type: \"address[10]\",\n      },\n    ],\n    outputs: [],\n    gas: 400675,\n  },\n  {\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n    name: \"set_pool_asset_type\",\n    inputs: [\n      {\n        name: \"_pool\",\n        type: \"address\",\n      },\n      {\n        name: \"_asset_type\",\n        type: \"uint256\",\n      },\n    ],\n    outputs: [],\n    gas: 72667,\n  },\n  {\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n    name: \"batch_set_pool_asset_type\",\n    inputs: [\n      {\n        name: \"_pools\",\n        type: \"address[32]\",\n      },\n      {\n        name: \"_asset_types\",\n        type: \"uint256[32]\",\n      },\n    ],\n    outputs: [],\n    gas: 1173447,\n  },\n  {\n    stateMutability: \"view\",\n    type: \"function\",\n    name: \"address_provider\",\n    inputs: [],\n    outputs: [\n      {\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    gas: 2048,\n  },\n  {\n    stateMutability: \"view\",\n    type: \"function\",\n    name: \"gauge_controller\",\n    inputs: [],\n    outputs: [\n      {\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    gas: 2078,\n  },\n  {\n    stateMutability: \"view\",\n    type: \"function\",\n    name: \"pool_list\",\n    inputs: [\n      {\n        name: \"arg0\",\n        type: \"uint256\",\n      },\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    gas: 2217,\n  },\n  {\n    stateMutability: \"view\",\n    type: \"function\",\n    name: \"pool_count\",\n    inputs: [],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    gas: 2138,\n  },\n  {\n    stateMutability: \"view\",\n    type: \"function\",\n    name: \"coin_count\",\n    inputs: [],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    gas: 2168,\n  },\n  {\n    stateMutability: \"view\",\n    type: \"function\",\n    name: \"get_coin\",\n    inputs: [\n      {\n        name: \"arg0\",\n        type: \"uint256\",\n      },\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    gas: 2307,\n  },\n  {\n    stateMutability: \"view\",\n    type: \"function\",\n    name: \"get_pool_from_lp_token\",\n    inputs: [\n      {\n        name: \"arg0\",\n        type: \"address\",\n      },\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    gas: 2443,\n  },\n  {\n    stateMutability: \"view\",\n    type: \"function\",\n    name: \"get_lp_token\",\n    inputs: [\n      {\n        name: \"arg0\",\n        type: \"address\",\n      },\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    gas: 2473,\n  },\n  {\n    stateMutability: \"view\",\n    type: \"function\",\n    name: \"last_updated\",\n    inputs: [],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    gas: 2288,\n  },\n];\n\nexport class CurveRegistry__factory {\n  static readonly abi = _abi;\n  static createInterface(): CurveRegistryInterface {\n    return new utils.Interface(_abi) as CurveRegistryInterface;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): CurveRegistry {\n    return new Contract(address, _abi, signerOrProvider) as CurveRegistry;\n  }\n}\n","/* Autogenerated file. Do not edit manually. */\n// @ts-nocheck\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Contract, Signer, utils } from \"ethers\";\nimport type { Provider } from \"@ethersproject/providers\";\nimport type {\n  CurveMetaPool,\n  CurveMetaPoolInterface,\n} from \"../../../Curve/Template/CurveMetaPool\";\n\nconst _abi = [\n  {\n    name: \"Transfer\",\n    inputs: [\n      {\n        type: \"address\",\n        name: \"sender\",\n        indexed: true,\n      },\n      {\n        type: \"address\",\n        name: \"receiver\",\n        indexed: true,\n      },\n      {\n        type: \"uint256\",\n        name: \"value\",\n        indexed: false,\n      },\n    ],\n    anonymous: false,\n    type: \"event\",\n  },\n  {\n    name: \"Approval\",\n    inputs: [\n      {\n        type: \"address\",\n        name: \"owner\",\n        indexed: true,\n      },\n      {\n        type: \"address\",\n        name: \"spender\",\n        indexed: true,\n      },\n      {\n        type: \"uint256\",\n        name: \"value\",\n        indexed: false,\n      },\n    ],\n    anonymous: false,\n    type: \"event\",\n  },\n  {\n    name: \"TokenExchange\",\n    inputs: [\n      {\n        type: \"address\",\n        name: \"buyer\",\n        indexed: true,\n      },\n      {\n        type: \"int128\",\n        name: \"sold_id\",\n        indexed: false,\n      },\n      {\n        type: \"uint256\",\n        name: \"tokens_sold\",\n        indexed: false,\n      },\n      {\n        type: \"int128\",\n        name: \"bought_id\",\n        indexed: false,\n      },\n      {\n        type: \"uint256\",\n        name: \"tokens_bought\",\n        indexed: false,\n      },\n    ],\n    anonymous: false,\n    type: \"event\",\n  },\n  {\n    name: \"TokenExchangeUnderlying\",\n    inputs: [\n      {\n        type: \"address\",\n        name: \"buyer\",\n        indexed: true,\n      },\n      {\n        type: \"int128\",\n        name: \"sold_id\",\n        indexed: false,\n      },\n      {\n        type: \"uint256\",\n        name: \"tokens_sold\",\n        indexed: false,\n      },\n      {\n        type: \"int128\",\n        name: \"bought_id\",\n        indexed: false,\n      },\n      {\n        type: \"uint256\",\n        name: \"tokens_bought\",\n        indexed: false,\n      },\n    ],\n    anonymous: false,\n    type: \"event\",\n  },\n  {\n    name: \"AddLiquidity\",\n    inputs: [\n      {\n        type: \"address\",\n        name: \"provider\",\n        indexed: true,\n      },\n      {\n        type: \"uint256[2]\",\n        name: \"token_amounts\",\n        indexed: false,\n      },\n      {\n        type: \"uint256[2]\",\n        name: \"fees\",\n        indexed: false,\n      },\n      {\n        type: \"uint256\",\n        name: \"invariant\",\n        indexed: false,\n      },\n      {\n        type: \"uint256\",\n        name: \"token_supply\",\n        indexed: false,\n      },\n    ],\n    anonymous: false,\n    type: \"event\",\n  },\n  {\n    name: \"RemoveLiquidity\",\n    inputs: [\n      {\n        type: \"address\",\n        name: \"provider\",\n        indexed: true,\n      },\n      {\n        type: \"uint256[2]\",\n        name: \"token_amounts\",\n        indexed: false,\n      },\n      {\n        type: \"uint256[2]\",\n        name: \"fees\",\n        indexed: false,\n      },\n      {\n        type: \"uint256\",\n        name: \"token_supply\",\n        indexed: false,\n      },\n    ],\n    anonymous: false,\n    type: \"event\",\n  },\n  {\n    name: \"RemoveLiquidityOne\",\n    inputs: [\n      {\n        type: \"address\",\n        name: \"provider\",\n        indexed: true,\n      },\n      {\n        type: \"uint256\",\n        name: \"token_amount\",\n        indexed: false,\n      },\n      {\n        type: \"uint256\",\n        name: \"coin_amount\",\n        indexed: false,\n      },\n      {\n        type: \"uint256\",\n        name: \"token_supply\",\n        indexed: false,\n      },\n    ],\n    anonymous: false,\n    type: \"event\",\n  },\n  {\n    name: \"RemoveLiquidityImbalance\",\n    inputs: [\n      {\n        type: \"address\",\n        name: \"provider\",\n        indexed: true,\n      },\n      {\n        type: \"uint256[2]\",\n        name: \"token_amounts\",\n        indexed: false,\n      },\n      {\n        type: \"uint256[2]\",\n        name: \"fees\",\n        indexed: false,\n      },\n      {\n        type: \"uint256\",\n        name: \"invariant\",\n        indexed: false,\n      },\n      {\n        type: \"uint256\",\n        name: \"token_supply\",\n        indexed: false,\n      },\n    ],\n    anonymous: false,\n    type: \"event\",\n  },\n  {\n    name: \"CommitNewAdmin\",\n    inputs: [\n      {\n        type: \"uint256\",\n        name: \"deadline\",\n        indexed: true,\n      },\n      {\n        type: \"address\",\n        name: \"admin\",\n        indexed: true,\n      },\n    ],\n    anonymous: false,\n    type: \"event\",\n  },\n  {\n    name: \"NewAdmin\",\n    inputs: [\n      {\n        type: \"address\",\n        name: \"admin\",\n        indexed: true,\n      },\n    ],\n    anonymous: false,\n    type: \"event\",\n  },\n  {\n    name: \"CommitNewFee\",\n    inputs: [\n      {\n        type: \"uint256\",\n        name: \"deadline\",\n        indexed: true,\n      },\n      {\n        type: \"uint256\",\n        name: \"fee\",\n        indexed: false,\n      },\n      {\n        type: \"uint256\",\n        name: \"admin_fee\",\n        indexed: false,\n      },\n    ],\n    anonymous: false,\n    type: \"event\",\n  },\n  {\n    name: \"NewFee\",\n    inputs: [\n      {\n        type: \"uint256\",\n        name: \"fee\",\n        indexed: false,\n      },\n      {\n        type: \"uint256\",\n        name: \"admin_fee\",\n        indexed: false,\n      },\n    ],\n    anonymous: false,\n    type: \"event\",\n  },\n  {\n    name: \"RampA\",\n    inputs: [\n      {\n        type: \"uint256\",\n        name: \"old_A\",\n        indexed: false,\n      },\n      {\n        type: \"uint256\",\n        name: \"new_A\",\n        indexed: false,\n      },\n      {\n        type: \"uint256\",\n        name: \"initial_time\",\n        indexed: false,\n      },\n      {\n        type: \"uint256\",\n        name: \"future_time\",\n        indexed: false,\n      },\n    ],\n    anonymous: false,\n    type: \"event\",\n  },\n  {\n    name: \"StopRampA\",\n    inputs: [\n      {\n        type: \"uint256\",\n        name: \"A\",\n        indexed: false,\n      },\n      {\n        type: \"uint256\",\n        name: \"t\",\n        indexed: false,\n      },\n    ],\n    anonymous: false,\n    type: \"event\",\n  },\n  {\n    outputs: [],\n    inputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"constructor\",\n  },\n  {\n    name: \"initialize\",\n    outputs: [],\n    inputs: [\n      {\n        type: \"string\",\n        name: \"_name\",\n      },\n      {\n        type: \"string\",\n        name: \"_symbol\",\n      },\n      {\n        type: \"address\",\n        name: \"_coin\",\n      },\n      {\n        type: \"uint256\",\n        name: \"_decimals\",\n      },\n      {\n        type: \"uint256\",\n        name: \"_A\",\n      },\n      {\n        type: \"uint256\",\n        name: \"_fee\",\n      },\n      {\n        type: \"address\",\n        name: \"_admin\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n    gas: 470049,\n  },\n  {\n    name: \"decimals\",\n    outputs: [\n      {\n        type: \"uint256\",\n        name: \"\",\n      },\n    ],\n    inputs: [],\n    stateMutability: \"view\",\n    type: \"function\",\n    gas: 291,\n  },\n  {\n    name: \"transfer\",\n    outputs: [\n      {\n        type: \"bool\",\n        name: \"\",\n      },\n    ],\n    inputs: [\n      {\n        type: \"address\",\n        name: \"_to\",\n      },\n      {\n        type: \"uint256\",\n        name: \"_value\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n    gas: 75402,\n  },\n  {\n    name: \"transferFrom\",\n    outputs: [\n      {\n        type: \"bool\",\n        name: \"\",\n      },\n    ],\n    inputs: [\n      {\n        type: \"address\",\n        name: \"_from\",\n      },\n      {\n        type: \"address\",\n        name: \"_to\",\n      },\n      {\n        type: \"uint256\",\n        name: \"_value\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n    gas: 112037,\n  },\n  {\n    name: \"approve\",\n    outputs: [\n      {\n        type: \"bool\",\n        name: \"\",\n      },\n    ],\n    inputs: [\n      {\n        type: \"address\",\n        name: \"_spender\",\n      },\n      {\n        type: \"uint256\",\n        name: \"_value\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n    gas: 37854,\n  },\n  {\n    name: \"get_previous_balances\",\n    outputs: [\n      {\n        type: \"uint256[2]\",\n        name: \"\",\n      },\n    ],\n    inputs: [],\n    stateMutability: \"view\",\n    type: \"function\",\n    gas: 2254,\n  },\n  {\n    name: \"get_balances\",\n    outputs: [\n      {\n        type: \"uint256[2]\",\n        name: \"\",\n      },\n    ],\n    inputs: [],\n    stateMutability: \"view\",\n    type: \"function\",\n    gas: 2284,\n  },\n  {\n    name: \"get_twap_balances\",\n    outputs: [\n      {\n        type: \"uint256[2]\",\n        name: \"\",\n      },\n    ],\n    inputs: [\n      {\n        type: \"uint256[2]\",\n        name: \"_first_balances\",\n      },\n      {\n        type: \"uint256[2]\",\n        name: \"_last_balances\",\n      },\n      {\n        type: \"uint256\",\n        name: \"_time_elapsed\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n    gas: 1522,\n  },\n  {\n    name: \"get_price_cumulative_last\",\n    outputs: [\n      {\n        type: \"uint256[2]\",\n        name: \"\",\n      },\n    ],\n    inputs: [],\n    stateMutability: \"view\",\n    type: \"function\",\n    gas: 2344,\n  },\n  {\n    name: \"admin_fee\",\n    outputs: [\n      {\n        type: \"uint256\",\n        name: \"\",\n      },\n    ],\n    inputs: [],\n    stateMutability: \"view\",\n    type: \"function\",\n    gas: 621,\n  },\n  {\n    name: \"A\",\n    outputs: [\n      {\n        type: \"uint256\",\n        name: \"\",\n      },\n    ],\n    inputs: [],\n    stateMutability: \"view\",\n    type: \"function\",\n    gas: 5859,\n  },\n  {\n    name: \"A_precise\",\n    outputs: [\n      {\n        type: \"uint256\",\n        name: \"\",\n      },\n    ],\n    inputs: [],\n    stateMutability: \"view\",\n    type: \"function\",\n    gas: 5821,\n  },\n  {\n    name: \"get_virtual_price\",\n    outputs: [\n      {\n        type: \"uint256\",\n        name: \"\",\n      },\n    ],\n    inputs: [],\n    stateMutability: \"view\",\n    type: \"function\",\n    gas: 1011891,\n  },\n  {\n    name: \"calc_token_amount\",\n    outputs: [\n      {\n        type: \"uint256\",\n        name: \"\",\n      },\n    ],\n    inputs: [\n      {\n        type: \"uint256[2]\",\n        name: \"_amounts\",\n      },\n      {\n        type: \"bool\",\n        name: \"_is_deposit\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    name: \"calc_token_amount\",\n    outputs: [\n      {\n        type: \"uint256\",\n        name: \"\",\n      },\n    ],\n    inputs: [\n      {\n        type: \"uint256[2]\",\n        name: \"_amounts\",\n      },\n      {\n        type: \"bool\",\n        name: \"_is_deposit\",\n      },\n      {\n        type: \"bool\",\n        name: \"_previous\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    name: \"add_liquidity\",\n    outputs: [\n      {\n        type: \"uint256\",\n        name: \"\",\n      },\n    ],\n    inputs: [\n      {\n        type: \"uint256[2]\",\n        name: \"_amounts\",\n      },\n      {\n        type: \"uint256\",\n        name: \"_min_mint_amount\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    name: \"add_liquidity\",\n    outputs: [\n      {\n        type: \"uint256\",\n        name: \"\",\n      },\n    ],\n    inputs: [\n      {\n        type: \"uint256[2]\",\n        name: \"_amounts\",\n      },\n      {\n        type: \"uint256\",\n        name: \"_min_mint_amount\",\n      },\n      {\n        type: \"address\",\n        name: \"_receiver\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    name: \"get_dy\",\n    outputs: [\n      {\n        type: \"uint256\",\n        name: \"\",\n      },\n    ],\n    inputs: [\n      {\n        type: \"int128\",\n        name: \"i\",\n      },\n      {\n        type: \"int128\",\n        name: \"j\",\n      },\n      {\n        type: \"uint256\",\n        name: \"dx\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    name: \"get_dy\",\n    outputs: [\n      {\n        type: \"uint256\",\n        name: \"\",\n      },\n    ],\n    inputs: [\n      {\n        type: \"int128\",\n        name: \"i\",\n      },\n      {\n        type: \"int128\",\n        name: \"j\",\n      },\n      {\n        type: \"uint256\",\n        name: \"dx\",\n      },\n      {\n        type: \"uint256[2]\",\n        name: \"_balances\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    name: \"get_dy_underlying\",\n    outputs: [\n      {\n        type: \"uint256\",\n        name: \"\",\n      },\n    ],\n    inputs: [\n      {\n        type: \"int128\",\n        name: \"i\",\n      },\n      {\n        type: \"int128\",\n        name: \"j\",\n      },\n      {\n        type: \"uint256\",\n        name: \"dx\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    name: \"get_dy_underlying\",\n    outputs: [\n      {\n        type: \"uint256\",\n        name: \"\",\n      },\n    ],\n    inputs: [\n      {\n        type: \"int128\",\n        name: \"i\",\n      },\n      {\n        type: \"int128\",\n        name: \"j\",\n      },\n      {\n        type: \"uint256\",\n        name: \"dx\",\n      },\n      {\n        type: \"uint256[2]\",\n        name: \"_balances\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    name: \"exchange\",\n    outputs: [\n      {\n        type: \"uint256\",\n        name: \"\",\n      },\n    ],\n    inputs: [\n      {\n        type: \"int128\",\n        name: \"i\",\n      },\n      {\n        type: \"int128\",\n        name: \"j\",\n      },\n      {\n        type: \"uint256\",\n        name: \"dx\",\n      },\n      {\n        type: \"uint256\",\n        name: \"min_dy\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    name: \"exchange\",\n    outputs: [\n      {\n        type: \"uint256\",\n        name: \"\",\n      },\n    ],\n    inputs: [\n      {\n        type: \"int128\",\n        name: \"i\",\n      },\n      {\n        type: \"int128\",\n        name: \"j\",\n      },\n      {\n        type: \"uint256\",\n        name: \"dx\",\n      },\n      {\n        type: \"uint256\",\n        name: \"min_dy\",\n      },\n      {\n        type: \"address\",\n        name: \"_receiver\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    name: \"exchange_underlying\",\n    outputs: [\n      {\n        type: \"uint256\",\n        name: \"\",\n      },\n    ],\n    inputs: [\n      {\n        type: \"int128\",\n        name: \"i\",\n      },\n      {\n        type: \"int128\",\n        name: \"j\",\n      },\n      {\n        type: \"uint256\",\n        name: \"dx\",\n      },\n      {\n        type: \"uint256\",\n        name: \"min_dy\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    name: \"exchange_underlying\",\n    outputs: [\n      {\n        type: \"uint256\",\n        name: \"\",\n      },\n    ],\n    inputs: [\n      {\n        type: \"int128\",\n        name: \"i\",\n      },\n      {\n        type: \"int128\",\n        name: \"j\",\n      },\n      {\n        type: \"uint256\",\n        name: \"dx\",\n      },\n      {\n        type: \"uint256\",\n        name: \"min_dy\",\n      },\n      {\n        type: \"address\",\n        name: \"_receiver\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    name: \"remove_liquidity\",\n    outputs: [\n      {\n        type: \"uint256[2]\",\n        name: \"\",\n      },\n    ],\n    inputs: [\n      {\n        type: \"uint256\",\n        name: \"_burn_amount\",\n      },\n      {\n        type: \"uint256[2]\",\n        name: \"_min_amounts\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    name: \"remove_liquidity\",\n    outputs: [\n      {\n        type: \"uint256[2]\",\n        name: \"\",\n      },\n    ],\n    inputs: [\n      {\n        type: \"uint256\",\n        name: \"_burn_amount\",\n      },\n      {\n        type: \"uint256[2]\",\n        name: \"_min_amounts\",\n      },\n      {\n        type: \"address\",\n        name: \"_receiver\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    name: \"remove_liquidity_imbalance\",\n    outputs: [\n      {\n        type: \"uint256\",\n        name: \"\",\n      },\n    ],\n    inputs: [\n      {\n        type: \"uint256[2]\",\n        name: \"_amounts\",\n      },\n      {\n        type: \"uint256\",\n        name: \"_max_burn_amount\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    name: \"remove_liquidity_imbalance\",\n    outputs: [\n      {\n        type: \"uint256\",\n        name: \"\",\n      },\n    ],\n    inputs: [\n      {\n        type: \"uint256[2]\",\n        name: \"_amounts\",\n      },\n      {\n        type: \"uint256\",\n        name: \"_max_burn_amount\",\n      },\n      {\n        type: \"address\",\n        name: \"_receiver\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    name: \"calc_withdraw_one_coin\",\n    outputs: [\n      {\n        type: \"uint256\",\n        name: \"\",\n      },\n    ],\n    inputs: [\n      {\n        type: \"uint256\",\n        name: \"_burn_amount\",\n      },\n      {\n        type: \"int128\",\n        name: \"i\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    name: \"calc_withdraw_one_coin\",\n    outputs: [\n      {\n        type: \"uint256\",\n        name: \"\",\n      },\n    ],\n    inputs: [\n      {\n        type: \"uint256\",\n        name: \"_burn_amount\",\n      },\n      {\n        type: \"int128\",\n        name: \"i\",\n      },\n      {\n        type: \"bool\",\n        name: \"_previous\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    name: \"remove_liquidity_one_coin\",\n    outputs: [\n      {\n        type: \"uint256\",\n        name: \"\",\n      },\n    ],\n    inputs: [\n      {\n        type: \"uint256\",\n        name: \"_burn_amount\",\n      },\n      {\n        type: \"int128\",\n        name: \"i\",\n      },\n      {\n        type: \"uint256\",\n        name: \"_min_received\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    name: \"remove_liquidity_one_coin\",\n    outputs: [\n      {\n        type: \"uint256\",\n        name: \"\",\n      },\n    ],\n    inputs: [\n      {\n        type: \"uint256\",\n        name: \"_burn_amount\",\n      },\n      {\n        type: \"int128\",\n        name: \"i\",\n      },\n      {\n        type: \"uint256\",\n        name: \"_min_received\",\n      },\n      {\n        type: \"address\",\n        name: \"_receiver\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    name: \"ramp_A\",\n    outputs: [],\n    inputs: [\n      {\n        type: \"uint256\",\n        name: \"_future_A\",\n      },\n      {\n        type: \"uint256\",\n        name: \"_future_time\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n    gas: 152464,\n  },\n  {\n    name: \"stop_ramp_A\",\n    outputs: [],\n    inputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n    gas: 149225,\n  },\n  {\n    name: \"admin_balances\",\n    outputs: [\n      {\n        type: \"uint256\",\n        name: \"\",\n      },\n    ],\n    inputs: [\n      {\n        type: \"uint256\",\n        name: \"i\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n    gas: 3601,\n  },\n  {\n    name: \"withdraw_admin_fees\",\n    outputs: [],\n    inputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n    gas: 11347,\n  },\n  {\n    name: \"admin\",\n    outputs: [\n      {\n        type: \"address\",\n        name: \"\",\n      },\n    ],\n    inputs: [],\n    stateMutability: \"view\",\n    type: \"function\",\n    gas: 2141,\n  },\n  {\n    name: \"coins\",\n    outputs: [\n      {\n        type: \"address\",\n        name: \"\",\n      },\n    ],\n    inputs: [\n      {\n        type: \"uint256\",\n        name: \"arg0\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n    gas: 2280,\n  },\n  {\n    name: \"balances\",\n    outputs: [\n      {\n        type: \"uint256\",\n        name: \"\",\n      },\n    ],\n    inputs: [\n      {\n        type: \"uint256\",\n        name: \"arg0\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n    gas: 2310,\n  },\n  {\n    name: \"fee\",\n    outputs: [\n      {\n        type: \"uint256\",\n        name: \"\",\n      },\n    ],\n    inputs: [],\n    stateMutability: \"view\",\n    type: \"function\",\n    gas: 2231,\n  },\n  {\n    name: \"block_timestamp_last\",\n    outputs: [\n      {\n        type: \"uint256\",\n        name: \"\",\n      },\n    ],\n    inputs: [],\n    stateMutability: \"view\",\n    type: \"function\",\n    gas: 2261,\n  },\n  {\n    name: \"initial_A\",\n    outputs: [\n      {\n        type: \"uint256\",\n        name: \"\",\n      },\n    ],\n    inputs: [],\n    stateMutability: \"view\",\n    type: \"function\",\n    gas: 2291,\n  },\n  {\n    name: \"future_A\",\n    outputs: [\n      {\n        type: \"uint256\",\n        name: \"\",\n      },\n    ],\n    inputs: [],\n    stateMutability: \"view\",\n    type: \"function\",\n    gas: 2321,\n  },\n  {\n    name: \"initial_A_time\",\n    outputs: [\n      {\n        type: \"uint256\",\n        name: \"\",\n      },\n    ],\n    inputs: [],\n    stateMutability: \"view\",\n    type: \"function\",\n    gas: 2351,\n  },\n  {\n    name: \"future_A_time\",\n    outputs: [\n      {\n        type: \"uint256\",\n        name: \"\",\n      },\n    ],\n    inputs: [],\n    stateMutability: \"view\",\n    type: \"function\",\n    gas: 2381,\n  },\n  {\n    name: \"name\",\n    outputs: [\n      {\n        type: \"string\",\n        name: \"\",\n      },\n    ],\n    inputs: [],\n    stateMutability: \"view\",\n    type: \"function\",\n    gas: 8813,\n  },\n  {\n    name: \"symbol\",\n    outputs: [\n      {\n        type: \"string\",\n        name: \"\",\n      },\n    ],\n    inputs: [],\n    stateMutability: \"view\",\n    type: \"function\",\n    gas: 7866,\n  },\n  {\n    name: \"balanceOf\",\n    outputs: [\n      {\n        type: \"uint256\",\n        name: \"\",\n      },\n    ],\n    inputs: [\n      {\n        type: \"address\",\n        name: \"arg0\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n    gas: 2686,\n  },\n  {\n    name: \"allowance\",\n    outputs: [\n      {\n        type: \"uint256\",\n        name: \"\",\n      },\n    ],\n    inputs: [\n      {\n        type: \"address\",\n        name: \"arg0\",\n      },\n      {\n        type: \"address\",\n        name: \"arg1\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n    gas: 2931,\n  },\n  {\n    name: \"totalSupply\",\n    outputs: [\n      {\n        type: \"uint256\",\n        name: \"\",\n      },\n    ],\n    inputs: [],\n    stateMutability: \"view\",\n    type: \"function\",\n    gas: 2531,\n  },\n];\n\nexport class CurveMetaPool__factory {\n  static readonly abi = _abi;\n  static createInterface(): CurveMetaPoolInterface {\n    return new utils.Interface(_abi) as CurveMetaPoolInterface;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): CurveMetaPool {\n    return new Contract(address, _abi, signerOrProvider) as CurveMetaPool;\n  }\n}\n","/* Autogenerated file. Do not edit manually. */\n// @ts-nocheck\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Contract, Signer, utils } from \"ethers\";\nimport type { Provider } from \"@ethersproject/providers\";\nimport type {\n  CurvePlainPool,\n  CurvePlainPoolInterface,\n} from \"../../../Curve/Template/CurvePlainPool\";\n\nconst _abi = [\n  {\n    name: \"Transfer\",\n    inputs: [\n      {\n        name: \"sender\",\n        type: \"address\",\n        indexed: true,\n      },\n      {\n        name: \"receiver\",\n        type: \"address\",\n        indexed: true,\n      },\n      {\n        name: \"value\",\n        type: \"uint256\",\n        indexed: false,\n      },\n    ],\n    anonymous: false,\n    type: \"event\",\n  },\n  {\n    name: \"Approval\",\n    inputs: [\n      {\n        name: \"owner\",\n        type: \"address\",\n        indexed: true,\n      },\n      {\n        name: \"spender\",\n        type: \"address\",\n        indexed: true,\n      },\n      {\n        name: \"value\",\n        type: \"uint256\",\n        indexed: false,\n      },\n    ],\n    anonymous: false,\n    type: \"event\",\n  },\n  {\n    name: \"TokenExchange\",\n    inputs: [\n      {\n        name: \"buyer\",\n        type: \"address\",\n        indexed: true,\n      },\n      {\n        name: \"sold_id\",\n        type: \"int128\",\n        indexed: false,\n      },\n      {\n        name: \"tokens_sold\",\n        type: \"uint256\",\n        indexed: false,\n      },\n      {\n        name: \"bought_id\",\n        type: \"int128\",\n        indexed: false,\n      },\n      {\n        name: \"tokens_bought\",\n        type: \"uint256\",\n        indexed: false,\n      },\n    ],\n    anonymous: false,\n    type: \"event\",\n  },\n  {\n    name: \"AddLiquidity\",\n    inputs: [\n      {\n        name: \"provider\",\n        type: \"address\",\n        indexed: true,\n      },\n      {\n        name: \"token_amounts\",\n        type: \"uint256[2]\",\n        indexed: false,\n      },\n      {\n        name: \"fees\",\n        type: \"uint256[2]\",\n        indexed: false,\n      },\n      {\n        name: \"invariant\",\n        type: \"uint256\",\n        indexed: false,\n      },\n      {\n        name: \"token_supply\",\n        type: \"uint256\",\n        indexed: false,\n      },\n    ],\n    anonymous: false,\n    type: \"event\",\n  },\n  {\n    name: \"RemoveLiquidity\",\n    inputs: [\n      {\n        name: \"provider\",\n        type: \"address\",\n        indexed: true,\n      },\n      {\n        name: \"token_amounts\",\n        type: \"uint256[2]\",\n        indexed: false,\n      },\n      {\n        name: \"fees\",\n        type: \"uint256[2]\",\n        indexed: false,\n      },\n      {\n        name: \"token_supply\",\n        type: \"uint256\",\n        indexed: false,\n      },\n    ],\n    anonymous: false,\n    type: \"event\",\n  },\n  {\n    name: \"RemoveLiquidityOne\",\n    inputs: [\n      {\n        name: \"provider\",\n        type: \"address\",\n        indexed: true,\n      },\n      {\n        name: \"token_amount\",\n        type: \"uint256\",\n        indexed: false,\n      },\n      {\n        name: \"coin_amount\",\n        type: \"uint256\",\n        indexed: false,\n      },\n      {\n        name: \"token_supply\",\n        type: \"uint256\",\n        indexed: false,\n      },\n    ],\n    anonymous: false,\n    type: \"event\",\n  },\n  {\n    name: \"RemoveLiquidityImbalance\",\n    inputs: [\n      {\n        name: \"provider\",\n        type: \"address\",\n        indexed: true,\n      },\n      {\n        name: \"token_amounts\",\n        type: \"uint256[2]\",\n        indexed: false,\n      },\n      {\n        name: \"fees\",\n        type: \"uint256[2]\",\n        indexed: false,\n      },\n      {\n        name: \"invariant\",\n        type: \"uint256\",\n        indexed: false,\n      },\n      {\n        name: \"token_supply\",\n        type: \"uint256\",\n        indexed: false,\n      },\n    ],\n    anonymous: false,\n    type: \"event\",\n  },\n  {\n    name: \"RampA\",\n    inputs: [\n      {\n        name: \"old_A\",\n        type: \"uint256\",\n        indexed: false,\n      },\n      {\n        name: \"new_A\",\n        type: \"uint256\",\n        indexed: false,\n      },\n      {\n        name: \"initial_time\",\n        type: \"uint256\",\n        indexed: false,\n      },\n      {\n        name: \"future_time\",\n        type: \"uint256\",\n        indexed: false,\n      },\n    ],\n    anonymous: false,\n    type: \"event\",\n  },\n  {\n    name: \"StopRampA\",\n    inputs: [\n      {\n        name: \"A\",\n        type: \"uint256\",\n        indexed: false,\n      },\n      {\n        name: \"t\",\n        type: \"uint256\",\n        indexed: false,\n      },\n    ],\n    anonymous: false,\n    type: \"event\",\n  },\n  {\n    stateMutability: \"nonpayable\",\n    type: \"constructor\",\n    inputs: [],\n    outputs: [],\n  },\n  {\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n    name: \"initialize\",\n    inputs: [\n      {\n        name: \"_name\",\n        type: \"string\",\n      },\n      {\n        name: \"_symbol\",\n        type: \"string\",\n      },\n      {\n        name: \"_coins\",\n        type: \"address[4]\",\n      },\n      {\n        name: \"_rate_multipliers\",\n        type: \"uint256[4]\",\n      },\n      {\n        name: \"_A\",\n        type: \"uint256\",\n      },\n      {\n        name: \"_fee\",\n        type: \"uint256\",\n      },\n    ],\n    outputs: [],\n    gas: 471502,\n  },\n  {\n    stateMutability: \"view\",\n    type: \"function\",\n    name: \"decimals\",\n    inputs: [],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    gas: 318,\n  },\n  {\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n    name: \"transfer\",\n    inputs: [\n      {\n        name: \"_to\",\n        type: \"address\",\n      },\n      {\n        name: \"_value\",\n        type: \"uint256\",\n      },\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    gas: 77977,\n  },\n  {\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n    name: \"transferFrom\",\n    inputs: [\n      {\n        name: \"_from\",\n        type: \"address\",\n      },\n      {\n        name: \"_to\",\n        type: \"address\",\n      },\n      {\n        name: \"_value\",\n        type: \"uint256\",\n      },\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    gas: 115912,\n  },\n  {\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n    name: \"approve\",\n    inputs: [\n      {\n        name: \"_spender\",\n        type: \"address\",\n      },\n      {\n        name: \"_value\",\n        type: \"uint256\",\n      },\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    gas: 37851,\n  },\n  {\n    stateMutability: \"view\",\n    type: \"function\",\n    name: \"get_balances\",\n    inputs: [],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256[2]\",\n      },\n    ],\n    gas: 4707,\n  },\n  {\n    stateMutability: \"view\",\n    type: \"function\",\n    name: \"admin_fee\",\n    inputs: [],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    gas: 468,\n  },\n  {\n    stateMutability: \"view\",\n    type: \"function\",\n    name: \"A\",\n    inputs: [],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    gas: 10764,\n  },\n  {\n    stateMutability: \"view\",\n    type: \"function\",\n    name: \"A_precise\",\n    inputs: [],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    gas: 10726,\n  },\n  {\n    stateMutability: \"view\",\n    type: \"function\",\n    name: \"get_virtual_price\",\n    inputs: [],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    gas: 848656,\n  },\n  {\n    stateMutability: \"view\",\n    type: \"function\",\n    name: \"calc_token_amount\",\n    inputs: [\n      {\n        name: \"_amounts\",\n        type: \"uint256[2]\",\n      },\n      {\n        name: \"_is_deposit\",\n        type: \"bool\",\n      },\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    gas: 3336308,\n  },\n  {\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n    name: \"add_liquidity\",\n    inputs: [\n      {\n        name: \"_amounts\",\n        type: \"uint256[2]\",\n      },\n      {\n        name: \"_min_mint_amount\",\n        type: \"uint256\",\n      },\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n  },\n  {\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n    name: \"add_liquidity\",\n    inputs: [\n      {\n        name: \"_amounts\",\n        type: \"uint256[2]\",\n      },\n      {\n        name: \"_min_mint_amount\",\n        type: \"uint256\",\n      },\n      {\n        name: \"_receiver\",\n        type: \"address\",\n      },\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n  },\n  {\n    stateMutability: \"view\",\n    type: \"function\",\n    name: \"get_dy\",\n    inputs: [\n      {\n        name: \"i\",\n        type: \"int128\",\n      },\n      {\n        name: \"j\",\n        type: \"int128\",\n      },\n      {\n        name: \"dx\",\n        type: \"uint256\",\n      },\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    gas: 2117591,\n  },\n  {\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n    name: \"exchange\",\n    inputs: [\n      {\n        name: \"i\",\n        type: \"int128\",\n      },\n      {\n        name: \"j\",\n        type: \"int128\",\n      },\n      {\n        name: \"_dx\",\n        type: \"uint256\",\n      },\n      {\n        name: \"_min_dy\",\n        type: \"uint256\",\n      },\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n  },\n  {\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n    name: \"exchange\",\n    inputs: [\n      {\n        name: \"i\",\n        type: \"int128\",\n      },\n      {\n        name: \"j\",\n        type: \"int128\",\n      },\n      {\n        name: \"_dx\",\n        type: \"uint256\",\n      },\n      {\n        name: \"_min_dy\",\n        type: \"uint256\",\n      },\n      {\n        name: \"_receiver\",\n        type: \"address\",\n      },\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n  },\n  {\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n    name: \"remove_liquidity\",\n    inputs: [\n      {\n        name: \"_burn_amount\",\n        type: \"uint256\",\n      },\n      {\n        name: \"_min_amounts\",\n        type: \"uint256[2]\",\n      },\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256[2]\",\n      },\n    ],\n  },\n  {\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n    name: \"remove_liquidity\",\n    inputs: [\n      {\n        name: \"_burn_amount\",\n        type: \"uint256\",\n      },\n      {\n        name: \"_min_amounts\",\n        type: \"uint256[2]\",\n      },\n      {\n        name: \"_receiver\",\n        type: \"address\",\n      },\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256[2]\",\n      },\n    ],\n  },\n  {\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n    name: \"remove_liquidity_imbalance\",\n    inputs: [\n      {\n        name: \"_amounts\",\n        type: \"uint256[2]\",\n      },\n      {\n        name: \"_max_burn_amount\",\n        type: \"uint256\",\n      },\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n  },\n  {\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n    name: \"remove_liquidity_imbalance\",\n    inputs: [\n      {\n        name: \"_amounts\",\n        type: \"uint256[2]\",\n      },\n      {\n        name: \"_max_burn_amount\",\n        type: \"uint256\",\n      },\n      {\n        name: \"_receiver\",\n        type: \"address\",\n      },\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n  },\n  {\n    stateMutability: \"view\",\n    type: \"function\",\n    name: \"calc_withdraw_one_coin\",\n    inputs: [\n      {\n        name: \"_burn_amount\",\n        type: \"uint256\",\n      },\n      {\n        name: \"i\",\n        type: \"int128\",\n      },\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    gas: 1100,\n  },\n  {\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n    name: \"remove_liquidity_one_coin\",\n    inputs: [\n      {\n        name: \"_burn_amount\",\n        type: \"uint256\",\n      },\n      {\n        name: \"i\",\n        type: \"int128\",\n      },\n      {\n        name: \"_min_received\",\n        type: \"uint256\",\n      },\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n  },\n  {\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n    name: \"remove_liquidity_one_coin\",\n    inputs: [\n      {\n        name: \"_burn_amount\",\n        type: \"uint256\",\n      },\n      {\n        name: \"i\",\n        type: \"int128\",\n      },\n      {\n        name: \"_min_received\",\n        type: \"uint256\",\n      },\n      {\n        name: \"_receiver\",\n        type: \"address\",\n      },\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n  },\n  {\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n    name: \"ramp_A\",\n    inputs: [\n      {\n        name: \"_future_A\",\n        type: \"uint256\",\n      },\n      {\n        name: \"_future_time\",\n        type: \"uint256\",\n      },\n    ],\n    outputs: [],\n    gas: 162101,\n  },\n  {\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n    name: \"stop_ramp_A\",\n    inputs: [],\n    outputs: [],\n    gas: 157565,\n  },\n  {\n    stateMutability: \"view\",\n    type: \"function\",\n    name: \"admin_balances\",\n    inputs: [\n      {\n        name: \"i\",\n        type: \"uint256\",\n      },\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    gas: 7740,\n  },\n  {\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n    name: \"withdraw_admin_fees\",\n    inputs: [],\n    outputs: [],\n    gas: 33182,\n  },\n  {\n    stateMutability: \"view\",\n    type: \"function\",\n    name: \"coins\",\n    inputs: [\n      {\n        name: \"arg0\",\n        type: \"uint256\",\n      },\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    gas: 3093,\n  },\n  {\n    stateMutability: \"view\",\n    type: \"function\",\n    name: \"balances\",\n    inputs: [\n      {\n        name: \"arg0\",\n        type: \"uint256\",\n      },\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    gas: 3123,\n  },\n  {\n    stateMutability: \"view\",\n    type: \"function\",\n    name: \"fee\",\n    inputs: [],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    gas: 3108,\n  },\n  {\n    stateMutability: \"view\",\n    type: \"function\",\n    name: \"initial_A\",\n    inputs: [],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    gas: 3138,\n  },\n  {\n    stateMutability: \"view\",\n    type: \"function\",\n    name: \"future_A\",\n    inputs: [],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    gas: 3168,\n  },\n  {\n    stateMutability: \"view\",\n    type: \"function\",\n    name: \"initial_A_time\",\n    inputs: [],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    gas: 3198,\n  },\n  {\n    stateMutability: \"view\",\n    type: \"function\",\n    name: \"future_A_time\",\n    inputs: [],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    gas: 3228,\n  },\n  {\n    stateMutability: \"view\",\n    type: \"function\",\n    name: \"name\",\n    inputs: [],\n    outputs: [\n      {\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    gas: 13488,\n  },\n  {\n    stateMutability: \"view\",\n    type: \"function\",\n    name: \"symbol\",\n    inputs: [],\n    outputs: [\n      {\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    gas: 11241,\n  },\n  {\n    stateMutability: \"view\",\n    type: \"function\",\n    name: \"balanceOf\",\n    inputs: [\n      {\n        name: \"arg0\",\n        type: \"address\",\n      },\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    gas: 3533,\n  },\n  {\n    stateMutability: \"view\",\n    type: \"function\",\n    name: \"allowance\",\n    inputs: [\n      {\n        name: \"arg0\",\n        type: \"address\",\n      },\n      {\n        name: \"arg1\",\n        type: \"address\",\n      },\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    gas: 3778,\n  },\n  {\n    stateMutability: \"view\",\n    type: \"function\",\n    name: \"totalSupply\",\n    inputs: [],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    gas: 3378,\n  },\n];\n\nexport class CurvePlainPool__factory {\n  static readonly abi = _abi;\n  static createInterface(): CurvePlainPoolInterface {\n    return new utils.Interface(_abi) as CurvePlainPoolInterface;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): CurvePlainPool {\n    return new Contract(address, _abi, signerOrProvider) as CurvePlainPool;\n  }\n}\n","/* Autogenerated file. Do not edit manually. */\n// @ts-nocheck\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Contract, Signer, utils } from \"ethers\";\nimport type { Provider } from \"@ethersproject/providers\";\nimport type { CurveZap, CurveZapInterface } from \"../../Curve/CurveZap\";\n\nconst _abi = [\n  {\n    outputs: [],\n    inputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"constructor\",\n  },\n  {\n    name: \"add_liquidity\",\n    outputs: [\n      {\n        type: \"uint256\",\n        name: \"\",\n      },\n    ],\n    inputs: [\n      {\n        type: \"address\",\n        name: \"_pool\",\n      },\n      {\n        type: \"uint256[4]\",\n        name: \"_deposit_amounts\",\n      },\n      {\n        type: \"uint256\",\n        name: \"_min_mint_amount\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    name: \"add_liquidity\",\n    outputs: [\n      {\n        type: \"uint256\",\n        name: \"\",\n      },\n    ],\n    inputs: [\n      {\n        type: \"address\",\n        name: \"_pool\",\n      },\n      {\n        type: \"uint256[4]\",\n        name: \"_deposit_amounts\",\n      },\n      {\n        type: \"uint256\",\n        name: \"_min_mint_amount\",\n      },\n      {\n        type: \"address\",\n        name: \"_receiver\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    name: \"remove_liquidity\",\n    outputs: [\n      {\n        type: \"uint256[4]\",\n        name: \"\",\n      },\n    ],\n    inputs: [\n      {\n        type: \"address\",\n        name: \"_pool\",\n      },\n      {\n        type: \"uint256\",\n        name: \"_burn_amount\",\n      },\n      {\n        type: \"uint256[4]\",\n        name: \"_min_amounts\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    name: \"remove_liquidity\",\n    outputs: [\n      {\n        type: \"uint256[4]\",\n        name: \"\",\n      },\n    ],\n    inputs: [\n      {\n        type: \"address\",\n        name: \"_pool\",\n      },\n      {\n        type: \"uint256\",\n        name: \"_burn_amount\",\n      },\n      {\n        type: \"uint256[4]\",\n        name: \"_min_amounts\",\n      },\n      {\n        type: \"address\",\n        name: \"_receiver\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    name: \"remove_liquidity_one_coin\",\n    outputs: [\n      {\n        type: \"uint256\",\n        name: \"\",\n      },\n    ],\n    inputs: [\n      {\n        type: \"address\",\n        name: \"_pool\",\n      },\n      {\n        type: \"uint256\",\n        name: \"_burn_amount\",\n      },\n      {\n        type: \"int128\",\n        name: \"i\",\n      },\n      {\n        type: \"uint256\",\n        name: \"_min_amount\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    name: \"remove_liquidity_one_coin\",\n    outputs: [\n      {\n        type: \"uint256\",\n        name: \"\",\n      },\n    ],\n    inputs: [\n      {\n        type: \"address\",\n        name: \"_pool\",\n      },\n      {\n        type: \"uint256\",\n        name: \"_burn_amount\",\n      },\n      {\n        type: \"int128\",\n        name: \"i\",\n      },\n      {\n        type: \"uint256\",\n        name: \"_min_amount\",\n      },\n      {\n        type: \"address\",\n        name: \"_receiver\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    name: \"remove_liquidity_imbalance\",\n    outputs: [\n      {\n        type: \"uint256\",\n        name: \"\",\n      },\n    ],\n    inputs: [\n      {\n        type: \"address\",\n        name: \"_pool\",\n      },\n      {\n        type: \"uint256[4]\",\n        name: \"_amounts\",\n      },\n      {\n        type: \"uint256\",\n        name: \"_max_burn_amount\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    name: \"remove_liquidity_imbalance\",\n    outputs: [\n      {\n        type: \"uint256\",\n        name: \"\",\n      },\n    ],\n    inputs: [\n      {\n        type: \"address\",\n        name: \"_pool\",\n      },\n      {\n        type: \"uint256[4]\",\n        name: \"_amounts\",\n      },\n      {\n        type: \"uint256\",\n        name: \"_max_burn_amount\",\n      },\n      {\n        type: \"address\",\n        name: \"_receiver\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    name: \"calc_withdraw_one_coin\",\n    outputs: [\n      {\n        type: \"uint256\",\n        name: \"\",\n      },\n    ],\n    inputs: [\n      {\n        type: \"address\",\n        name: \"_pool\",\n      },\n      {\n        type: \"uint256\",\n        name: \"_token_amount\",\n      },\n      {\n        type: \"int128\",\n        name: \"i\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n    gas: 1650,\n  },\n  {\n    name: \"calc_token_amount\",\n    outputs: [\n      {\n        type: \"uint256\",\n        name: \"\",\n      },\n    ],\n    inputs: [\n      {\n        type: \"address\",\n        name: \"_pool\",\n      },\n      {\n        type: \"uint256[4]\",\n        name: \"_amounts\",\n      },\n      {\n        type: \"bool\",\n        name: \"_is_deposit\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n    gas: 2717,\n  },\n];\n\nexport class CurveZap__factory {\n  static readonly abi = _abi;\n  static createInterface(): CurveZapInterface {\n    return new utils.Interface(_abi) as CurveZapInterface;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): CurveZap {\n    return new Contract(address, _abi, signerOrProvider) as CurveZap;\n  }\n}\n","/* Autogenerated file. Do not edit manually. */\n// @ts-nocheck\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Contract, Signer, utils } from \"ethers\";\nimport type { Provider } from \"@ethersproject/providers\";\nimport type { ERC20, ERC20Interface } from \"../ERC20\";\n\nconst _abi = [\n  {\n    constant: true,\n    inputs: [],\n    name: \"name\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        name: \"_spender\",\n        type: \"address\",\n      },\n      {\n        name: \"_value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"approve\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"totalSupply\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        name: \"_from\",\n        type: \"address\",\n      },\n      {\n        name: \"_to\",\n        type: \"address\",\n      },\n      {\n        name: \"_value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"transferFrom\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"decimals\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [\n      {\n        name: \"_owner\",\n        type: \"address\",\n      },\n    ],\n    name: \"balanceOf\",\n    outputs: [\n      {\n        name: \"balance\",\n        type: \"uint256\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"symbol\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        name: \"_to\",\n        type: \"address\",\n      },\n      {\n        name: \"_value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"transfer\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [\n      {\n        name: \"_owner\",\n        type: \"address\",\n      },\n      {\n        name: \"_spender\",\n        type: \"address\",\n      },\n    ],\n    name: \"allowance\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    payable: true,\n    stateMutability: \"payable\",\n    type: \"fallback\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        name: \"value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Approval\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        name: \"value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Transfer\",\n    type: \"event\",\n  },\n];\n\nexport class ERC20__factory {\n  static readonly abi = _abi;\n  static createInterface(): ERC20Interface {\n    return new utils.Interface(_abi) as ERC20Interface;\n  }\n  static connect(address: string, signerOrProvider: Signer | Provider): ERC20 {\n    return new Contract(address, _abi, signerOrProvider) as ERC20;\n  }\n}\n","/* Autogenerated file. Do not edit manually. */\n// @ts-nocheck\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Contract, Signer, utils } from \"ethers\";\nimport type { Provider } from \"@ethersproject/providers\";\nimport type { ERC20Permit, ERC20PermitInterface } from \"../ERC20Permit\";\n\nconst _abi = [\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Approval\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Transfer\",\n    type: \"event\",\n  },\n  {\n    inputs: [],\n    name: \"DOMAIN_SEPARATOR\",\n    outputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"\",\n        type: \"bytes32\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n    ],\n    name: \"allowance\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"approve\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"balanceOf\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"decimals\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"subtractedValue\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"decreaseAllowance\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"addedValue\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"increaseAllowance\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"name\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n    ],\n    name: \"nonces\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"deadline\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint8\",\n        name: \"v\",\n        type: \"uint8\",\n      },\n      {\n        internalType: \"bytes32\",\n        name: \"r\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"bytes32\",\n        name: \"s\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"permit\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"symbol\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"totalSupply\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"recipient\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"transfer\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"sender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"recipient\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"transferFrom\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n];\n\nexport class ERC20Permit__factory {\n  static readonly abi = _abi;\n  static createInterface(): ERC20PermitInterface {\n    return new utils.Interface(_abi) as ERC20PermitInterface;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): ERC20Permit {\n    return new Contract(address, _abi, signerOrProvider) as ERC20Permit;\n  }\n}\n","import BigNumber from \"bignumber.js\";\nimport { ContractTransaction } from \"ethers\";\nimport { ERC20__factory } from \"../../constants/generated\";\nimport { PromiseOrValue } from \"../../constants/generated/common\";\nimport { ERC20Permit } from \"../../constants/generated/ERC20Permit\";\nimport { ERC20Permit__factory } from \"../../constants/generated/factories/ERC20Permit__factory\";\nimport { BeanNumber } from \"../../utils/BeanNumber\";\nimport { bigNumberResult } from \"../../utils/Ledger\";\nimport { Token } from \"./Token\";\n\nexport class ERC20Token extends Token {\n  public contract : ERC20Permit;\n\n  //////////////////////// Setup ////////////////////////\n  \n  // @fixme this throws the following error:\n  // src/lib/tokens.ts(57,32): semantic error TS2345: Argument of type 'BeanstalkSDK' is not assignable to parameter of type 'never'.\n  //\n  // constructor(...args: ConstructorParameters<typeof Token>) {\n  //   super(...args);\n  //   if (!this.address) throw new Error('Address is required for ERC20 token instancess');\n  // } \n  \n  //////////////////////// Contract Instance ////////////////////////\n\n  public getContract() {\n    if (!this.contract) {\n      this.contract = ERC20Permit__factory.connect(this.address, Token.sdk.providerOrSigner);\n    }\n    return this.contract;\n  }\n\n  //////////////////////// On-chain Configuration ////////////////////////\n\n  /** @fixme */\n  public async getName() {\n    if (this.name) return this.name;\n    this.name = await this.getContract().name();\n    return this.name;\n  }\n\n  /** @fixme */\n  static getName(tokenAddress: string) {\n    const tok = ERC20__factory.connect(tokenAddress, this.sdk.provider);\n    return tok.name();\n  }\n\n  /**\n   * Get the on-chain `.decimals()` for an ERC-20 token.\n   * @todo make this work with ERC-1155 (does it already?)\n   * @note stored onchain in hex format, need to decode.\n   */\n  static getDecimals(tokenAddress: string) {\n    const tok = ERC20__factory.connect(tokenAddress, this.sdk.provider);\n    return tok.decimals();\n  }\n\n  //////////////////////// Contract Method Extensions ////////////////////////\n\n  public getBalance(account: string) {\n    return (\n      this.getContract()\n        .balanceOf(account)\n        .then(result => BeanNumber.fromBigNumber(result, this.decimals))\n        .catch((err: Error) => {\n          console.error(`[ERC20Token] ${this.symbol} failed to call balanceOf(${account})`, err);\n          throw err;\n        })\n    );\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  public getAllowance(account: string, spender: string) {\n    return this.getContract().allowance(account, spender)\n    .then(bigNumberResult);\n  }\n\n  public getTotalSupply() {\n    return this.getContract().totalSupply()\n    .then(bigNumberResult);\n  }\n\n  public approve(spender: PromiseOrValue<string>, value: PromiseOrValue<BigNumber>):Promise<ContractTransaction> {\n    return this.getContract().approve(spender, value.toString())\n  }\n}\n","import BigNumber from 'bignumber.js';\nimport { MAX_UINT256 } from '../../constants';\nimport { BeanNumber } from '../../utils/BeanNumber';\nimport { Token } from './Token';\n\nexport class NativeToken extends Token {\n  // eslint-disable-next-line class-methods-use-this\n  public getContract() {\n    return null;\n  }\n\n  public getBalance(account: string): Promise<BeanNumber> {\n    // console.debug(`[NativeToken] ${this.symbol} (${this.chainId} / ${this.address}) -> getBalance(${account})`);\n    return Token.sdk.provider.getBalance(account).then(\n      // No need to convert decimals because ethers does this already\n      result => BeanNumber.fromBigNumber(result, this.decimals)\n    );\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  public getAllowance(): Promise<BigNumber | undefined> {\n    return Promise.resolve(new BigNumber(parseInt(MAX_UINT256, 16)));\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  public getTotalSupply() {\n    return undefined;\n  }\n\n  public equals(other: NativeToken): boolean {\n    return this.chainId === other.chainId;\n  }\n}\n","import { Signer, TypedDataField, VoidSigner } from \"ethers\";\n// import { zeros } from \"../utils\";\nimport { BeanstalkSDK } from \"./BeanstalkSDK\";\n\n/// EIP-712: \"Typed structured data hashing and signing\"\n/// https://eips.ethereum.org/EIPS/eip-712\nexport type EIP712Domain = {\n  name: string;\n  version: string;\n  chainId: number;\n  verifyingContract: string;\n}\n\n/// EIP-2612: EIP-20 Permit Extension: Signed Approvals\n/// https://eips.ethereum.org/EIPS/eip-2612\n/// @note applies EIP-712 signatures to tokens that adhere to EIP-20.\nexport type EIP712PermitMessage<\n  D extends {} = {}\n  // D extends {} = { value: number | string; }\n> = ({\n  owner: string;\n  spender: string;\n} & D & {\n  nonce: number | string;\n  deadline: number | string;\n});\n\nexport type EIP2612PermitMessage = EIP712PermitMessage<{ value: number | string }>; // use default value for D\nexport interface RSV {\n  r: string;\n  s: string;\n  v: number;\n}\n\n//\nexport type EIP712TypedData<\n  Message extends EIP712PermitMessage = any,\n  Domain extends EIP712Domain = EIP712Domain, \n> = {\n  types: {\n    EIP712Domain: typeof Permit.EIP712_DOMAIN;\n    Permit: ({ name: string; type: string; })[]\n  };\n  primaryType: string;\n  domain: Domain;\n  message: Message;\n}\n\nexport type SignedPermit<\n  Message extends EIP712PermitMessage = any,\n  Domain extends EIP712Domain = EIP712Domain,\n> = {\n  /** The account that signed the permit. */\n  owner: string;\n  /** The typed data included within the permit. */\n  typedData: EIP712TypedData<Message, Domain>;\n  /** The raw signature output for this permit, signed by `owner`. */\n  rawSignature: string;\n  /** The \"RSV\" split of the raw signature. */\n  split: RSV;\n}\n\n/**\n * @ref https://github.com/dmihal/eth-permit/blob/master/src/eth-permit.ts\n */\nexport class Permit {\n  static sdk : BeanstalkSDK;\n\n  static MAX_UINT256 = '0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff';\n\n  static NONCES_FN = '0x7ecebe00';\n\n  static EIP712_DOMAIN = [\n    { name: \"name\", type: \"string\" },\n    { name: \"version\", type: \"string\" },\n    { name: \"chainId\", type: \"uint256\" },\n    { name: \"verifyingContract\", type: \"address\" },\n  ] as const;\n\n  /// \n  constructor(sdk: BeanstalkSDK) {\n    Permit.sdk = sdk;\n  }\n\n  //////////////////////// Utilities ////////////////////////\n\n  /**\n   * https://github.com/dmihal/eth-permit/blob/34f3fb59f0e32d8c19933184f5a7121ee125d0a5/src/rpc.ts#L52\n   */\n  static signatureToRSV(signature: string) : RSV {\n    const r = \"0x\" + signature.substring(2).substring(0, 64);\n    const s = \"0x\" + signature.substring(2).substring(64, 128);\n    const v = parseInt(signature.substring(2).substring(128, 130), 16);\n    return { r, s, v };\n  }\n\n  //////////////////////// Sign Typed Data ////////////////////////\n\n  /**\n   * Request a signature for arbitrary typed data.\n   * @ref https://github.com/dmihal/eth-permit/blob/34f3fb59f0e32d8c19933184f5a7121ee125d0a5/src/rpc.ts#L73\n   */\n  public async sign<\n    Message extends EIP712PermitMessage\n  >(\n    owner: string,\n    typedData: EIP712TypedData<Message>\n  ) : Promise<\n    SignedPermit<Message>\n  > {\n    const signerAddress = await Permit.sdk.getAccount();\n\n    if (signerAddress.toLowerCase() !== owner.toLowerCase()) {\n      throw new Error(\"Signer address does not match requested signing address\");\n    }\n  \n    // FIXME: signer currently doesn't expose signTypedData\n    // https://docs.ethers.io/v5/api/signer/#Signer-signTypedData\n    const signer = Permit.sdk.signer! as unknown as (VoidSigner & { signTypedData?: any });\n\n    const { \n      EIP712Domain: _unused, \n      ...types\n    } = typedData.types;\n\n\n    // Shim in case of method renaming.\n    // src/lib/permit.ts(129,48): semantic error TS2352: Conversion of type '{ Permit: { name: string; type: string; }[]; }' to type 'Record<string, TypedDataField[]>' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first. Index signature is missing in type '{ Permit: { name: string; type: string; }[]; }'.\n    const rawSignature = await (signer.signTypedData\n      ? signer.signTypedData(typedData.domain, types as any as Record<string, TypedDataField[]>, typedData.message)\n      : signer._signTypedData(typedData.domain, types as any as Record<string, TypedDataField[]>, typedData.message));\n  \n    return {\n      owner,\n      typedData,\n      rawSignature,\n      split: Permit.signatureToRSV(rawSignature),\n    };\n  }\n}","import { addresses } from '../constants';\nimport { Token, BeanstalkToken, ERC20Token, NativeToken } from '../classes/Token';\nimport { BeanstalkSDK } from './BeanstalkSDK';\nimport BigNumber from 'bignumber.js';\nimport { TokenFacet } from '../constants/generated/Beanstalk/Beanstalk';\nimport { EIP2612PermitMessage, EIP712Domain, EIP712TypedData, Permit } from './permit';\nimport { ERC20__factory } from '../constants/generated';\n\nexport type TokenBalance = {\n  internal: BigNumber;\n  external: BigNumber;\n  total: BigNumber;\n}\n\nexport class Tokens {\n  private sdk: BeanstalkSDK;\n  public readonly ETH: NativeToken;\n  public readonly WETH: ERC20Token;\n  public readonly BEAN: ERC20Token;\n  public readonly ROOT: ERC20Token;\n  public readonly CRV3: ERC20Token;\n  public readonly DAI: ERC20Token;\n  public readonly USDC: ERC20Token;\n  public readonly USDT: ERC20Token;\n  public readonly LUSD: ERC20Token;\n  public readonly BEAN_ETH_UNIV2_LP: ERC20Token;\n  public readonly BEAN_CRV3_LP: ERC20Token;\n  public readonly UNRIPE_BEAN: ERC20Token;\n  public readonly UNRIPE_BEAN_CRV3: ERC20Token;\n  public readonly STALK: BeanstalkToken;\n  public readonly SEEDS: BeanstalkToken;\n  public readonly PODS: BeanstalkToken;\n  public readonly SPROUTS: BeanstalkToken;\n  public readonly RINSABLE_SPROUTS: BeanstalkToken;\n\n  public unripeTokens: Set<Token>;\n  public unripeUnderlyingTokens: Set<Token>;\n  public siloWhitelist: Set<Token>;\n  public erc20Tokens: Set<Token>;\n  public balanceTokens: Set<Token>;\n  public crv3Underlying: Set<Token>;\n\n  private map: Map<string, Token>;\n\n  constructor(sdk: BeanstalkSDK) {\n    this.sdk = sdk;\n    this.map = new Map();\n    \n    /// Ethereum\n\n    this.ETH = new NativeToken(this.sdk, null, 18, {\n      name: 'Ether',\n      symbol: 'ETH',\n      displayDecimals: 4,\n    });\n\n    this.WETH = new ERC20Token(this.sdk, addresses.WETH.get(this.sdk.chainId), 18, {\n      name: 'Wrapped Ether',\n      symbol: 'WETH',\n    });\n\n    /// Beanstalk\n\n    this.BEAN = new ERC20Token(\n      this.sdk,\n      addresses.BEAN.get(this.sdk.chainId),\n      6,\n      {\n        name: 'Bean',\n        displayName: 'Bean',\n        symbol: 'BEAN',\n      },\n      {\n        stalk: 1,\n        seeds: 2,\n      }\n    );\n\n    this.BEAN_CRV3_LP = new ERC20Token(\n      this.sdk,\n      addresses.BEAN_CRV3.get(this.sdk.chainId),\n      18,\n      {\n        name: 'Curve.fi Factory USD Metapool: Bean', // see .name()\n        displayName: 'BEAN:3CRV LP',\n        symbol: 'BEAN3CRV',\n        isLP: true,\n        color: '#DFB385',\n      },\n      {\n        stalk: 1,\n        seeds: 4,\n      }\n    );\n\n    this.UNRIPE_BEAN = new ERC20Token(\n      this.sdk,\n      addresses.UNRIPE_BEAN.get(this.sdk.chainId),\n      6,\n      {\n        name: 'Unripe Bean', // see `.name()`\n        displayName: 'Unripe Bean',\n        symbol: 'urBEAN',\n        displayDecimals: 2,\n        isUnripe: true,\n      },\n      {\n        stalk: 1,\n        seeds: 2,\n      }\n    );\n\n    this.UNRIPE_BEAN_CRV3 = new ERC20Token(\n      this.sdk,\n      addresses.UNRIPE_BEAN_CRV3.get(this.sdk.chainId),\n      6,\n      {\n        name: 'Unripe BEAN3CRV', // see `.name()`\n        displayName: 'Unripe BEAN:3CRV LP',\n        symbol: 'urBEAN3CRV',\n        displayDecimals: 2,\n        isUnripe: true,\n      },\n      {\n        stalk: 1,\n        seeds: 4,\n      }\n    );\n\n    this.ROOT = new ERC20Token(\n      this.sdk,\n      addresses.ROOT.get(this.sdk.chainId),\n      6,\n      {\n        name: 'Root',\n        symbol: 'ROOT',\n      }\n    );\n\n    /// Beanstalk \"Tokens\" (non ERC-20)\n\n    this.STALK = new BeanstalkToken(this.sdk, null, 10, {\n      name: 'Stalk',\n      symbol: 'STALK',\n    });\n\n    this.SEEDS = new BeanstalkToken(this.sdk, null, 6, {\n      name: 'Seeds',\n      symbol: 'SEED',\n    });\n\n    this.PODS = new BeanstalkToken(this.sdk, null, 6, {\n      name: 'Pods',\n      symbol: 'PODS',\n    });\n\n    this.SPROUTS = new BeanstalkToken(this.sdk, null, 6, {\n      name: 'Sprouts',\n      symbol: 'SPROUT',\n    });\n\n    this.RINSABLE_SPROUTS = new BeanstalkToken(this.sdk, null, 6, {\n      name: 'Rinsable Sprouts',\n      symbol: 'rSPROUT',\n    });\n\n    /// Common ERC-20 Tokens\n\n    this.CRV3 = new ERC20Token(this.sdk, addresses.CRV3.get(this.sdk.chainId), 18, {\n      name: '3CRV',\n      symbol: '3CRV',\n      isLP: true,\n    });\n\n    this.DAI = new ERC20Token(this.sdk, addresses.DAI.get(this.sdk.chainId), 18, {\n      name: 'Dai',\n      symbol: 'DAI',\n    });\n\n    this.USDC = new ERC20Token(this.sdk, addresses.USDC.get(this.sdk.chainId), 6, {\n      name: 'USD Coin',\n      symbol: 'USDC',\n    });\n\n    this.USDT = new ERC20Token(this.sdk, addresses.USDT.get(this.sdk.chainId), 6, {\n      name: 'Tether',\n      symbol: 'USDT',\n    });\n\n    this.LUSD = new ERC20Token(this.sdk, addresses.LUSD.get(this.sdk.chainId), 6, {\n      name: 'LUSD',\n      symbol: 'LUSD',\n    });\n\n    /// Legacy\n    // Keep the old BEAN_ETH and BEAN_LUSD tokens to let\n    // the Pick dialog properly display pickable assets.\n    this.BEAN_ETH_UNIV2_LP = new ERC20Token(\n      this.sdk,\n      addresses.BEAN_ETH_UNIV2_LP.get(this.sdk.chainId),\n      18,\n      {\n        name: 'BEAN:ETH LP',\n        symbol: 'BEAN:ETH',\n\n        displayDecimals: 9,\n        isLP: true,\n      },\n      {\n        stalk: 1,\n        seeds: 4,\n      }\n    );\n\n    // create a map of address -> Token\n    // this will help in the UI migration to SDK use\n    this.map.set('eth', this.ETH);\n    this.map.set(addresses.WETH.get(this.sdk.chainId), this.WETH);\n    this.map.set(addresses.ROOT.get(this.sdk.chainId), this.ROOT);\n    this.map.set(addresses.BEAN.get(this.sdk.chainId), this.BEAN);\n    this.map.set(addresses.CRV3.get(this.sdk.chainId), this.CRV3);\n    this.map.set(addresses.DAI.get(this.sdk.chainId), this.DAI);\n    this.map.set(addresses.USDC.get(this.sdk.chainId), this.USDC);\n    this.map.set(addresses.USDT.get(this.sdk.chainId), this.USDT);\n    this.map.set(addresses.LUSD.get(this.sdk.chainId), this.LUSD);\n    this.map.set(addresses.BEAN_CRV3.get(this.sdk.chainId), this.BEAN_CRV3_LP);\n    this.map.set(addresses.UNRIPE_BEAN.get(this.sdk.chainId), this.UNRIPE_BEAN);\n    this.map.set(addresses.UNRIPE_BEAN_CRV3.get(this.sdk.chainId), this.UNRIPE_BEAN_CRV3);\n    this.map.set('STALK', this.STALK);\n    this.map.set('SEED', this.SEEDS);\n    this.map.set('PODS', this.PODS);\n    this.map.set('SPROUT', this.SPROUTS);\n    this.map.set('rSPROUT', this.RINSABLE_SPROUTS);\n    this.map.set(addresses.BEAN_ETH_UNIV2_LP.get(this.sdk.chainId), this.BEAN_ETH_UNIV2_LP);\n\n    this.unripeTokens = new Set([this.UNRIPE_BEAN, this.UNRIPE_BEAN_CRV3]);\n    this.unripeUnderlyingTokens = new Set([this.BEAN, this.BEAN_CRV3_LP]);\n    this.siloWhitelist = new Set([this.BEAN, this.BEAN_CRV3_LP, this.UNRIPE_BEAN, this.UNRIPE_BEAN_CRV3]);\n    this.erc20Tokens = new Set([...this.siloWhitelist, this.WETH, this.CRV3, this.DAI, this.USDC, this.USDT]);\n    this.balanceTokens = new Set([this.ETH, ...this.erc20Tokens]);\n    this.crv3Underlying = new Set([this.DAI, this.USDC, this.USDT]);\n  }\n\n  /**\n   * Find a Token by address\n   */\n  findByAddress(address: string): Token | undefined {\n    return this.map.get(address.toLowerCase());\n  }\n\n  _deriveAddress(value: string | Token) {\n    return typeof value === 'string' ? value : value.address;\n  }\n\n  _deriveToken(value: string | Token) : [Token, string] {\n    if (typeof value === 'string') {\n      const _token = this.findByAddress(value);\n      if (!_token) throw new Error(`Unknown token: ${value}`);\n      return [_token, value];\n    }\n    return [value, value.address];\n  }\n\n  _balanceStructToTokenBalance(\n    token: Token,\n    result: TokenFacet.BalanceStruct\n  ) : TokenBalance {\n    return {\n      internal: token.stringifyToDecimal(result.internalBalance.toString()),\n      external: token.stringifyToDecimal(result.externalBalance.toString()),\n      total:    token.stringifyToDecimal(result.totalBalance.toString()),\n    }\n  }\n\n  /**\n   * Return a TokenBalance struct for a requested token.\n   * Includes the Farmer's INTERNAL and EXTERNAL balance in one item.\n   * This is the typical representation of balances within Beanstalk.\n   */\n  public async getBalance(\n    _token: (string | Token),\n    _account?: string,\n  ) : Promise<TokenBalance> {\n    const account = await this.sdk.getAccount(_account);\n\n    // ETH cannot be stored in the INTERNAL balance.\n    // Here we use the native getBalance() method and cast to a TokenBalance.\n    if (_token === this.ETH) {\n      const balance = await this.sdk.provider.getBalance(account);\n      return this._balanceStructToTokenBalance(_token, {\n        internalBalance: '0',\n        externalBalance: balance,\n        totalBalance: balance,\n      });\n    }\n\n    // FIXME: use the ERC20 token contract directly to load decimals for parsing?\n    const [token, tokenAddress] = this._deriveToken(_token);\n\n    const balance = await this.sdk.contracts.beanstalk.getAllBalance(\n      account,\n      tokenAddress,\n    );\n\n    return this._balanceStructToTokenBalance(token, balance);\n  }\n\n  /**\n   * Return a TokenBalance struct for each requested token.\n   * Includes the Farmer's INTERNAL and EXTERNAL balance in one item.\n   * This is the typical representation of balances within Beanstalk.\n   * \n   * @todo discuss parameter inversion between getBalance() and getBalances().\n   */\n  public async getBalances(\n    _account?: string,\n    _tokens?: (string | Token)[],\n  ) : Promise<Map<Token, TokenBalance>> {\n    const account = await this.sdk.getAccount(_account);\n    const tokens = _tokens || Array.from(this.erc20Tokens);\n    const tokenAddresses = tokens.map(this._deriveAddress);\n\n    // FIXME: only allow ERC20 tokens with getBalance() method, or\n    // override if token is NativeToken\n    const balances = new Map<Token, TokenBalance>();\n    const results = await this.sdk.contracts.beanstalk.getAllBalances(\n      account,\n      tokenAddresses,\n    );\n\n    results.forEach((result, index) => {\n      const token = this.findByAddress(tokenAddresses[index]);\n      \n      // FIXME: use the ERC20 token contract directly to load decimals for parsing?\n      if (!token) throw new Error(`Unknown token: ${tokenAddresses}`);\n\n      balances.set(token, this._balanceStructToTokenBalance(token, result));\n    })\n\n    return balances;\n  }\n\n  //////////////////////// Permit Data ////////////////////////\n\n  /**\n   * Create the domain for an particular ERC-2636 signature.\n   * Look up the name of an ERC-20 token for signing.\n   * \n   * @ref https://github.com/dmihal/eth-permit/blob/34f3fb59f0e32d8c19933184f5a7121ee125d0a5/src/eth-permit.ts#L85\n   */\n  private async _getEIP712DomainForToken(\n    token: ERC20Token\n  ): Promise<EIP712Domain> {\n    const [name, chainId] = await Promise.all([ \n      token.getName(),\n      this.sdk.provider.getNetwork().then((network) => network.chainId),\n    ]);\n  \n    return {\n      name,\n      version: '1',\n      chainId,\n      verifyingContract: token.address,\n    };\n  };\n\n  //////////////////////// PERMIT: ERC-2612 (for other ERC-20 tokens) ////////////////////////\n\n  /**\n   * Sign a permit for an arbitrary ERC-20 token. This allows `spender` to use `value`\n   * of `owner`'s `token`.\n   * \n   * @fixme should this be in `tokens.ts`?\n   * @fixme does the order of keys in `message` matter? if not we could make an abstraction here\n   * @fixme `permitERC2612` -> `getERC20Permit`\n   * \n   * @ref https://github.com/dmihal/eth-permit/blob/34f3fb59f0e32d8c19933184f5a7121ee125d0a5/src/eth-permit.ts#L126\n   * @param token a Token instance representing an ERC20 token to permit\n   * @param owner \n   * @param spender authorize this account to spend `token` on behalf of `owner`\n   * @param value the amount of `token` to authorize\n   * @param _nonce\n   * @param _deadline\n   */\n  public async permitERC2612(\n    token: ERC20Token,      \n    owner: string,           // \n    spender: string,\n    value: string | number,  // FIXME: included default on eth-permit, see @ref\n    _nonce?: number,         //\n    _deadline?: number,      // FIXME: is MAX_UINT256 an appropriate default?\n  ) : Promise<EIP712TypedData<EIP2612PermitMessage>> {\n    const deadline = _deadline || Permit.MAX_UINT256;\n    const [domain, nonce] = await Promise.all([\n      this._getEIP712DomainForToken(token),\n      // @ts-ignore FIXME\n      token.getContract().nonces(owner).then(r => r.toString()),\n    ]);\n\n    return this._createTypedERC2612Data(domain, {\n      owner,\n      spender,\n      value,\n      nonce,\n      deadline,\n    });\n  }\n\n  private _createTypedERC2612Data = (domain: EIP712Domain, message: EIP2612PermitMessage) => ({\n    types: {\n      EIP712Domain: Permit.EIP712_DOMAIN,\n      Permit: [\n        { name: \"owner\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"value\", type: \"uint256\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"deadline\", type: \"uint256\" },\n      ],\n    },\n    primaryType: \"Permit\",\n    domain,\n    message,\n  });\n\n  //////////////////////// PERMIT: Beanstalk \"Token\" (for internal balances) ////////////////////////\n\n  // TODO\n\n  //////////////////////// Create new Token instance ////////////////////////\n  // public async createERC20<\n  //   T1 extends ConstructorParameters<typeof ERC20Token>,\n  //   T2 = [any]\n  // >(\n  //   ...args: T[]\n  // ) {\n  // }\n}\n","// import { BaseContract } from 'ethers';\nimport type { BeanstalkSDK } from './BeanstalkSDK';\n// import { addresses, ChainID } from '../constants';\nimport {\n  Curve3Pool__factory,\n  CurveTriCrypto2Pool__factory,\n  CurveMetaPool__factory,\n  Beanstalk__factory,\n  CurveCryptoFactory__factory,\n  CurveMetaFactory__factory,\n  CurveRegistry__factory,\n  CurveZap__factory,\n  Beanstalk,\n  Curve3Pool,\n  CurveCryptoFactory,\n  CurveMetaFactory,\n  CurveMetaPool,\n  CurveRegistry,\n  CurveTriCrypto2Pool,\n  CurveZap,\n  BeanstalkFertilizer__factory,\n  CurvePlainPool__factory,\n  Root,\n  Root__factory,\n\n} from '../constants/generated';\nimport { BaseContract } from 'ethers';\n\ntype CurveContracts = {\n  pools: {\n    pool3: Curve3Pool;\n    tricrypto2: CurveTriCrypto2Pool;\n    beanCrv3: CurveMetaPool;\n    [k: string]: BaseContract;\n  };\n  registries: {\n    poolRegistry: CurveRegistry;\n    metaFactory: CurveMetaFactory;\n    cryptoFactory: CurveCryptoFactory;\n    [k: string]: BaseContract;\n  };\n  zap: CurveZap;\n};\n\nexport class Contracts {\n  static sdk: BeanstalkSDK;\n\n  public readonly beanstalk: Beanstalk;\n  public readonly root: Root;\n  public readonly fertilizer: import(\"../constants/generated/index\").BeanstalkFertilizer;\n\n  public readonly curve: CurveContracts;\n\n  // private chain: string;\n\n  constructor(sdk: BeanstalkSDK) {\n    Contracts.sdk = sdk;\n\n    // Addressses\n    const beanstalkAddress = sdk.addresses.BEANSTALK.get(sdk.chainId);\n    const rootAddress = sdk.addresses.ROOT.get(sdk.chainId);\n    const beanstalkFertilizerAddress = sdk.addresses.BEANSTALK_FERTILIZER.get(sdk.chainId);\n    const pool3Address = sdk.addresses.POOL3.get(sdk.chainId);\n    const tricrypto2Address = sdk.addresses.TRICRYPTO2.get(sdk.chainId);\n    const beancrv3Address = sdk.addresses.BEAN_CRV3.get(sdk.chainId);\n    const poolRegistryAddress = sdk.addresses.POOL_REGISTRY.get(sdk.chainId);\n    const metaFactoryAddress = sdk.addresses.META_FACTORY.get(sdk.chainId);\n    const cryptoFactoryAddress = sdk.addresses.CRYPTO_FACTORY.get(sdk.chainId);\n    const zapAddress = sdk.addresses.CURVE_ZAP.get(sdk.chainId);\n\n    // Instances\n    this.beanstalk = Beanstalk__factory.connect(beanstalkAddress, sdk.providerOrSigner);\n    this.root = Root__factory.connect(rootAddress, sdk.providerOrSigner);\n    this.fertilizer = BeanstalkFertilizer__factory.connect(beanstalkFertilizerAddress, sdk.providerOrSigner);\n\n    const pool3 = Curve3Pool__factory.connect(pool3Address, sdk.providerOrSigner);\n    const tricrypto2 = CurveTriCrypto2Pool__factory.connect(tricrypto2Address, sdk.providerOrSigner);\n    const beanCrv3 = CurveMetaPool__factory.connect(beancrv3Address, sdk.providerOrSigner);\n    const poolRegistry = CurveRegistry__factory.connect(poolRegistryAddress, sdk.providerOrSigner);\n    const metaFactory = CurveMetaFactory__factory.connect(metaFactoryAddress, sdk.providerOrSigner);\n    const cryptoFactory = CurveCryptoFactory__factory.connect(cryptoFactoryAddress, sdk.providerOrSigner);\n    const zap = CurveZap__factory.connect(zapAddress, sdk.providerOrSigner);\n\n    this.curve = {\n      pools: {\n        pool3,\n        [pool3Address]: pool3,\n        tricrypto2,\n        [tricrypto2Address]: tricrypto2,\n        beanCrv3,\n        [beancrv3Address]: beanCrv3\n      },\n      registries: {\n        poolRegistry,\n        [poolRegistryAddress]: poolRegistry,\n        metaFactory,\n        [metaFactoryAddress]: metaFactory,\n        cryptoFactory,\n        [cryptoFactoryAddress]: cryptoFactory,\n      },\n      zap\n    };\n  }\n}\n","\nimport { ethers } from 'ethers';\nimport { Event } from './processor';\n\nexport enum EventType {\n  SILO = 'silo',\n  FIELD = 'filed',\n  FERTILIER = 'fertilizer',\n  MARKET = 'market'\n}\n\nexport const sortEvents = (a: Event, b: Event) => {\n  const diff = a.blockNumber - b.blockNumber;\n  if (diff !== 0) return diff;\n  return a.logIndex - b.logIndex;\n};\n\n\nexport const reduceEvent = (prev: Event[], e: ethers.Event) => {\n  try {\n    prev.push({\n      event: e.event,\n      args: e.args,\n      blockNumber: e.blockNumber,\n      logIndex: e.logIndex,\n      transactionHash: e.transactionHash,\n      transactionIndex: e.transactionIndex,\n    });\n  } catch (err) {\n    console.error(`Failed to parse event ${e.event} ${e.transactionHash}`, err, e);\n  }\n  return prev;\n};\n","import { ChainId } from \"./chains\";\n\n\nexport const Blocks = {\n  [ChainId.MAINNET]: {\n    BEANSTALK_GENESIS_BLOCK:  12974075, // beanstalk initial launch\n    BIP10_COMMITTED_BLOCK:    14148509, // marketplace live\n    EXPLOIT_BLOCK:            14602789, // \n    FERTILIZER_LAUNCH_BLOCK:  14915800, // first FERT purchase\n  }\n};\n","import { BeanstalkSDK } from '../BeanstalkSDK';\nimport { EventType, reduceEvent, sortEvents } from './utils';\nimport { Blocks } from '../../constants/blocks';\nimport { ChainId } from '../../constants';\nimport { TypedEvent } from '../../constants/generated/common';\nimport { flattenDeep } from 'lodash';\nimport { Event } from 'ethers';\n\nexport class EventManager {\n  private readonly sdk: BeanstalkSDK;\n\n  private readonly filters: {\n    [key in EventType]: Function[];\n  };\n\n  constructor(sdk: BeanstalkSDK) {\n    this.sdk = sdk;\n  }\n\n  async getSiloEvents(\n    _account: string,\n    _token?: string,\n    _fromBlock?: number,\n    _toBlock?: number\n  ) {\n    const fromBlockOrGenesis = _fromBlock || Blocks[ChainId.MAINNET].BEANSTALK_GENESIS_BLOCK;\n    const toBlock = _toBlock || 'latest';\n    return Promise.all([\n      this.sdk.contracts.beanstalk.queryFilter(\n        this.sdk.contracts.beanstalk.filters.AddDeposit(_account, _token),\n        fromBlockOrGenesis,\n        toBlock\n      ),\n      this.sdk.contracts.beanstalk.queryFilter(\n        this.sdk.contracts.beanstalk.filters.AddWithdrawal(_account, _token),\n        fromBlockOrGenesis,\n        toBlock\n      ),\n      this.sdk.contracts.beanstalk.queryFilter(\n        this.sdk.contracts.beanstalk.filters.RemoveWithdrawal(_account, _token),\n        fromBlockOrGenesis,\n        toBlock\n      ),\n      this.sdk.contracts.beanstalk.queryFilter(\n        this.sdk.contracts.beanstalk.filters.RemoveWithdrawals(_account, _token),\n        fromBlockOrGenesis,\n        toBlock\n      ),\n      this.sdk.contracts.beanstalk.queryFilter(\n        this.sdk.contracts.beanstalk.filters.RemoveDeposit(_account, _token),\n        fromBlockOrGenesis,\n        toBlock\n      ),\n      this.sdk.contracts.beanstalk.queryFilter(\n        this.sdk.contracts.beanstalk.filters.RemoveDeposits(_account, _token),\n        fromBlockOrGenesis,\n        toBlock\n      ),\n    ]).then(this.reduceAndSort);\n  }\n\n  async getFieldEvents(_account: string, _fromBlock?: number, _toBlock?: number) {\n    if (!_account) throw new Error('account missing');\n    const rawEvents = await this.getRawEventsByType(EventType.FIELD, _account, _fromBlock, _toBlock);\n    return this.reduceAndSort(rawEvents);\n  }\n\n  async getMarketEvents(_account: string, _fromBlock?: number, _toBlock?: number) {\n    if (!_account) throw new Error('account missing');\n    const rawEvents = await this.getRawEventsByType(EventType.MARKET, _account, _fromBlock, _toBlock);\n    return this.reduceAndSort(rawEvents);\n  }\n\n  async getFertilizerEvents(_account: string, _fromBlock?: number, _toBlock?: number) {\n    if (!_account) throw new Error('account missing');\n    const rawEvents = await this.getRawEventsByType(EventType.FERTILIER, _account, _fromBlock, _toBlock);\n    return this.reduceAndSort(rawEvents);\n  }\n\n  async getRawEventsByType(eventType: EventType, _account: string, _fromBlock?: number, _toBlock?: number): Promise<Event[][]> {\n    const fromBlockOrGenesis = _fromBlock || Blocks[ChainId.MAINNET].BEANSTALK_GENESIS_BLOCK;\n    const fromBlockOrBIP10 = _fromBlock || Blocks[ChainId.MAINNET].BIP10_COMMITTED_BLOCK;\n    const fromBlockOrFertLaunch = _fromBlock || Blocks[ChainId.MAINNET].FERTILIZER_LAUNCH_BLOCK;\n    const toBlock = _toBlock || 'latest';\n\n    switch (eventType) {\n      case EventType.SILO:\n        return Promise.all([\n          this.sdk.contracts.beanstalk.queryFilter(\n            this.sdk.contracts.beanstalk.filters.AddDeposit(_account),\n            fromBlockOrGenesis,\n            toBlock\n          ),\n          this.sdk.contracts.beanstalk.queryFilter(\n            this.sdk.contracts.beanstalk.filters.AddWithdrawal(_account),\n            fromBlockOrGenesis,\n            toBlock\n          ),\n          this.sdk.contracts.beanstalk.queryFilter(\n            this.sdk.contracts.beanstalk.filters.RemoveWithdrawal(_account),\n            fromBlockOrGenesis,\n            toBlock\n          ),\n          this.sdk.contracts.beanstalk.queryFilter(\n            this.sdk.contracts.beanstalk.filters.RemoveWithdrawals(_account),\n            fromBlockOrGenesis,\n            toBlock\n          ),\n          this.sdk.contracts.beanstalk.queryFilter(\n            this.sdk.contracts.beanstalk.filters.RemoveDeposit(_account),\n            fromBlockOrGenesis,\n            toBlock\n          ),\n          this.sdk.contracts.beanstalk.queryFilter(\n            this.sdk.contracts.beanstalk.filters.RemoveDeposits(_account),\n            fromBlockOrGenesis,\n            toBlock\n          ),\n        ]);\n      case EventType.FIELD:\n        return Promise.all([\n          this.sdk.contracts.beanstalk.queryFilter(\n            this.sdk.contracts.beanstalk.filters['Sow(address,uint256,uint256,uint256)'](_account),\n            fromBlockOrGenesis,\n            toBlock\n          ),\n          this.sdk.contracts.beanstalk.queryFilter(this.sdk.contracts.beanstalk.filters.Harvest(_account), fromBlockOrGenesis, toBlock),\n          this.sdk.contracts.beanstalk.queryFilter(\n            this.sdk.contracts.beanstalk.filters.PlotTransfer(_account, null), // from\n            fromBlockOrGenesis,\n            toBlock\n          ),\n          this.sdk.contracts.beanstalk.queryFilter(\n            this.sdk.contracts.beanstalk.filters.PlotTransfer(null, _account), // to\n            fromBlockOrGenesis,\n            toBlock\n          ),\n        ]);\n      case EventType.MARKET:\n        return Promise.all([\n          this.sdk.contracts.beanstalk.queryFilter(\n            this.sdk.contracts.beanstalk.filters.PodListingCreated(_account),\n            fromBlockOrBIP10,\n            toBlock\n          ),\n          this.sdk.contracts.beanstalk.queryFilter(\n            this.sdk.contracts.beanstalk.filters['PodListingCancelled(address,uint256)'](_account),\n            fromBlockOrBIP10,\n            toBlock\n          ),\n          // this account had a listing filled\n          this.sdk.contracts.beanstalk.queryFilter(\n            this.sdk.contracts.beanstalk.filters.PodListingFilled(null, _account), // to\n            fromBlockOrBIP10,\n            toBlock\n          ),\n          this.sdk.contracts.beanstalk.queryFilter(\n            this.sdk.contracts.beanstalk.filters.PodOrderCreated(_account),\n            fromBlockOrBIP10,\n            toBlock\n          ),\n          this.sdk.contracts.beanstalk.queryFilter(\n            this.sdk.contracts.beanstalk.filters.PodOrderCancelled(_account),\n            fromBlockOrBIP10,\n            toBlock\n          ),\n          this.sdk.contracts.beanstalk.queryFilter(\n            this.sdk.contracts.beanstalk.filters.PodOrderFilled(null, _account), // to\n            fromBlockOrBIP10,\n            toBlock\n          ),\n        ]);\n\n      case EventType.FERTILIER:\n        return Promise.all([\n          /// Send FERT\n          this.sdk.contracts.fertilizer.queryFilter(\n            this.sdk.contracts.fertilizer.filters.TransferSingle(\n              null, // operator\n              _account, // from\n              null, // to\n              null, // id\n              null // value\n            ),\n            fromBlockOrFertLaunch,\n            toBlock\n          ),\n          this.sdk.contracts.fertilizer.queryFilter(\n            this.sdk.contracts.fertilizer.filters.TransferBatch(\n              null, // operator\n              _account, // from\n              null, // to\n              null, // ids\n              null // values\n            ),\n            fromBlockOrFertLaunch,\n            toBlock\n          ),\n          /// Receive FERT\n          this.sdk.contracts.fertilizer.queryFilter(\n            this.sdk.contracts.fertilizer.filters.TransferSingle(\n              null, // operator\n              null, // from\n              _account, // to\n              null, // id\n              null // value\n            ),\n            fromBlockOrFertLaunch,\n            toBlock\n          ),\n          this.sdk.contracts.fertilizer.queryFilter(\n            this.sdk.contracts.fertilizer.filters.TransferBatch(\n              null, // operator\n              null, // from\n              _account, // to\n              null, // ids\n              null // values\n            ),\n            fromBlockOrFertLaunch,\n            toBlock\n          ),\n        ]);\n\n      default:\n        throw new Error(`Cannot build event EventQuery for unknown type: ${eventType}`);\n    }\n  }\n\n  // : TypedEvent[]\n  private reduceAndSort(events: Event[][]) {\n    return flattenDeep<Event[]>(events)\n      .reduce(reduceEvent, [])\n      .sort(sortEvents);\n  }\n}\n","import BigNumber from 'bignumber.js';\nimport { BigNumber as EBN, ethers } from 'ethers';\nimport { Token } from '../../classes/Token';\nimport { ZERO_BN } from '../../constants';\nimport {\n  SowEvent,\n  HarvestEvent,\n  PlotTransferEvent,\n  AddDepositEvent,\n  RemoveDepositEvent,\n  RemoveDepositsEvent,\n  AddWithdrawalEvent,\n  RemoveWithdrawalEvent,\n  RemoveWithdrawalsEvent,\n  PodListingCreatedEvent,\n  PodListingCancelledEvent,\n  PodListingFilledEvent,\n  PodOrderCreatedEvent,\n  PodOrderCancelledEvent,\n  PodOrderFilledEvent,\n} from '../../constants/generated/Beanstalk/Beanstalk';\nimport {  StringMap } from '../../types';\nimport { BeanstalkSDK } from '../BeanstalkSDK';\nimport { PodListing, PodOrder } from './types';\n\n// ----------------------------------------\n\nconst SupportedEvents = [\n  // Field\n  'Sow',\n  'Harvest',\n  'PlotTransfer',\n  // Silo\n  'AddDeposit',\n  'RemoveDeposit',\n  'RemoveDeposits',\n  'AddWithdrawal',\n  'RemoveWithdrawal',\n  'RemoveWithdrawals',\n  // Market\n  'PodListingCreated',\n  'PodListingCancelled',\n  'PodListingFilled',\n  'PodOrderCreated',\n  'PodOrderCancelled',\n  'PodOrderFilled',\n] as const;\nconst SupportedEventsSet = new Set(SupportedEvents);\n\n// ----------------------------------------\n\n/** */\nexport const BN = (v: EBN | BigNumber.Value) => (v instanceof EBN ? new BigNumber(v.toString()) : new BigNumber(v));\nexport const decimalBN = (v: EBN | BigNumber.Value, decimals: number) => BN(v).div(10 ** decimals);\nexport const tokenBN = (v: EBN | BigNumber.Value, token: Token) => decimalBN(v, token.decimals);\n\nexport const setToMap = (tokens: Set<Token>): Map<Token, any> => {\n  const map = new Map<Token, any>();\n  for (const token of tokens) {\n    map.set(token, {});\n  }\n  return map;\n};\n\n// ----------------------------------------\n\nexport type EventProcessingParameters = {\n  season: EBN;\n  whitelist: Set<Token>;\n};\n\nexport type DepositCrateRaw = {\n  amount: EBN;\n  bdv: EBN;\n};\nexport type WithdrawalCrateRaw = {\n  amount: EBN;\n};\n\nexport type EventProcessorData = {\n  plots: StringMap<EBN>;\n  deposits: Map<\n    Token,\n    {\n      [season: string]: DepositCrateRaw;\n    }\n  >;\n  withdrawals: Map<\n    Token,\n    {\n      [season: string]: WithdrawalCrateRaw;\n    }\n  >;\n  listings: {\n    [plotIndex: string]: PodListing; // FIXME: need to use EBN here\n  };\n  orders: {\n    [orderId: string]: PodOrder; // FIXME: need to use EBN here\n  };\n};\n\n\nexport type EventKeys = 'event' | 'args' | 'blockNumber' | 'transactionIndex' | 'transactionHash' | 'logIndex';\nexport type Simplify<T extends ethers.Event> = Pick<T, EventKeys> & { returnValues?: any };\nexport type Event = Simplify<ethers.Event>;\n\n//\n\nexport default class EventProcessor {\n  private readonly sdk: BeanstalkSDK;\n  // ----------------------------\n  // |       PROCESSING         |\n  // ----------------------------\n  account: string;\n\n  epp: EventProcessingParameters;\n\n  // ----------------------------\n  // |      DATA STORAGE        |\n  // ----------------------------\n\n  plots: EventProcessorData['plots'];\n  deposits: EventProcessorData['deposits'];       // token => season => amount\n  withdrawals: EventProcessorData['withdrawals']; // token => season => amount\n  listings: EventProcessorData['listings'];\n  orders: EventProcessorData['orders'];\n\n  /// /////////////////////// SETUP //////////////////////////\n\n  constructor(sdk: BeanstalkSDK, account: string, epp: EventProcessingParameters, initialState?: Partial<EventProcessorData>) {\n    if (!epp.whitelist || typeof epp !== 'object') throw new Error('EventProcessor: Missing whitelist.');\n    this.sdk = sdk;\n    // Setup\n    this.account = account.toLowerCase();\n    this.epp = epp;\n    // Silo\n    this.deposits = initialState?.deposits || setToMap(this.epp.whitelist);\n    this.withdrawals = initialState?.withdrawals || setToMap(this.epp.whitelist);\n    // Field\n    this.plots = initialState?.plots || {};\n    this.listings = initialState?.listings || {};\n    this.orders = initialState?.orders || {};\n  }\n\n  ingest<T extends Event>(event: T) {\n    if (!event.event) {\n      return;\n    }\n    if (!SupportedEventsSet.has(event.event as typeof SupportedEvents[number])) {\n      return;\n    }\n    // @ts-ignore\n    return this[event.event as typeof SupportedEvents[number]]?.(event as any);\n  }\n\n  ingestAll<T extends Event>(events: T[]) {\n    events.forEach(event => {\n      this.ingest(event);\n    });\n    return this.data();\n  }\n\n  data() {\n    return {\n      plots: this.plots,\n      deposits: this.deposits,\n      withdrawals: this.withdrawals,\n      listings: this.listings,\n      orders: this.orders,\n    };\n  }\n\n  // Utils\n  getToken(event: Event): Token {\n    const token = this.sdk.tokens.findByAddress(event?.args?.token);\n    if (!token) {\n      this.sdk.debug('token not found for this event', { event });\n      throw new Error(`token not found for address ${event?.args?.token}`);\n    }\n\n    return token;\n  }\n\n  // /// /////////////////////// FIELD //////////////////////////\n\n  // Sow(event: Simplify<SowEvent>) {\n  //   const index       = tokenBN(event.args.index, PODS).toString();\n  //   this.plots[index] = tokenBN(event.args.pods,  PODS);\n  // }\n\n  // Harvest(event: Simplify<HarvestEvent>) {\n  //   let beansClaimed = tokenBN(event.args.beans, Bean);\n  //   const plots = (\n  //     event.args.plots\n  //       .map((_index) => tokenBN(_index, Bean))\n  //       .sort((a, b) => a.minus(b).toNumber())\n  //   );\n  //   plots.forEach((indexBN) => {\n  //     const index = indexBN.toString();\n  //     if (beansClaimed.isLessThan(this.plots[index])) {\n  //       // ----------------------------------------\n  //       // A Plot was partially Harvested. Example:\n  //       // Event: Sow\n  //       //  index  = 10\n  //       //  amount = 10\n  //       //\n  //       // I call harvest when harvestableIndex = 14 (I harvest 10,11,12,13)\n  //       //\n  //       // Event: Harvest\n  //       //  args.beans = 4\n  //       //  args.plots = [10]\n  //       //  beansClaimed  = 4\n  //       //  partialIndex  = 4 + 10 = 14\n  //       //  partialAmount = 10 - 4 = 6\n  //       //\n  //       // Add Plot with 6 Pods at index 14\n  //       // Remove Plot at index 10.\n  //       // ----------------------------------------\n  //       const partialIndex  = beansClaimed.plus(indexBN);\n  //       const partialAmount = this.plots[index].minus(beansClaimed);\n  //       this.plots = {\n  //         ...this.plots,\n  //         [partialIndex.toString()]: partialAmount,\n  //       };\n  //     } else {\n  //       beansClaimed = beansClaimed.minus(this.plots[index]);\n  //     }\n  //     delete this.plots[index];\n  //   });\n  // }\n\n  // PlotTransfer(event: Simplify<PlotTransferEvent>) {\n  //   // Numerical \"index\" of the Plot. Absolute, with respect to Pod 0.\n  //   const transferIndex   = tokenBN(event.args.id, Bean);\n  //   const podsTransferred = tokenBN(event.args.pods, Bean);\n\n  //   if (event.args.to.toLowerCase() === this.account) {\n  //     // This account received a Plot\n  //     this.plots[transferIndex.toString()] = podsTransferred;\n  //   }\n  //   else {\n  //     // This account sent a Plot\n  //     const indexStr = transferIndex.toString();\n\n  //     // ----------------------------------------\n  //     // The PlotTransfer event doesn't contain info\n  //     // about the `start` position of a Transfer.\n  //     // Say for example I have the following plot:\n  //     //\n  //     //  0       9 10         20              END\n  //     // [---------[0123456789)-----------------]\n  //     //                 ^\n  //     // PlotTransfer   [56789)\n  //     //                 15    20\n  //     //\n  //     // PlotTransfer(from=0x, to=0x, id=15, pods=5)\n  //     // This means we send Pods: 15, 16, 17, 18, 19\n  //     //\n  //     // However this Plot doesn't exist yet in our\n  //     // cache. To find it we search for the Plot\n  //     // beginning at 10 and ending at 20, then\n  //     // split it depending on params provided in\n  //     // the PlotTransfer event.\n  //     // ----------------------------------------\n  //     if (this.plots[indexStr] !== undefined) {\n  //       // A known Plot was sent.\n  //       if (!podsTransferred.isEqualTo(this.plots[indexStr])) {\n  //         const newStartIndex = transferIndex.plus(podsTransferred);\n  //         this.plots[newStartIndex.toString()] = this.plots[indexStr].minus(podsTransferred);\n  //       }\n  //       delete this.plots[indexStr];\n  //     }\n  //     else {\n  //       // A Plot was partially sent from a non-zero\n  //       // starting index. Find the containing Plot\n  //       // in our cache.\n  //       let i = 0;\n  //       let found = false;\n  //       const plotIndices = Object.keys(this.plots);\n  //       while (found === false && i < plotIndices.length) {\n  //         // Setup the boundaries of this Plot\n  //         const startIndex = BN(plotIndices[i]);\n  //         const endIndex   = startIndex.plus(this.plots[startIndex.toString()]);\n  //         // Check if the Transfer happened within this Plot\n  //         if (startIndex.isLessThanOrEqualTo(transferIndex)\n  //            && endIndex.isGreaterThan(transferIndex)) {\n  //           // ----------------------------------------\n  //           // Slice #1. This is the part that\n  //           // the user keeps (they sent the other part).\n  //           //\n  //           // Following the above example:\n  //           //  transferIndex   = 15\n  //           //  podsTransferred = 5\n  //           //  startIndex      = 10\n  //           //  endIndex        = 20\n  //           //\n  //           // This would update the existing Plot such that:\n  //           //  this.plots[10] = (15 - 10) = 5\n  //           // containing Pods 10, 11, 12, 13, 14\n  //           // ----------------------------------------\n  //           if (transferIndex.eq(startIndex)) {\n  //             delete this.plots[startIndex.toString()];\n  //           } else {\n  //             this.plots[startIndex.toString()] = transferIndex.minus(startIndex);\n  //           }\n\n  //           // ----------------------------------------\n  //           // Slice #2. Handles the below case where\n  //           // the amount sent doesn't reach the end\n  //           // of the Plot (i.e. I sent Pods in the middle.\n  //           //\n  //           //  0       9 10         20              END\n  //           // [---------[0123456789)-----------------]\n  //           //                 ^\n  //           // PlotTransfer   [567)\n  //           //                 15  18\n  //           //\n  //           //  transferIndex   = 15\n  //           //  podsTransferred = 3\n  //           //  startIndex      = 10\n  //           //  endIndex        = 20\n  //           //\n  //           // PlotTransfer(from=0x, to=0x, id=15, pods=3)\n  //           // This means we send Pods: 15, 16, 17.\n  //           // ----------------------------------------\n  //           if (!transferIndex.isEqualTo(endIndex)) {\n  //             // s2 = 15 + 3 = 18\n  //             // Requires another split since 18 != 20\n  //             const s2 = transferIndex.plus(podsTransferred);\n  //             const requiresAnotherSplit = !s2.isEqualTo(endIndex);\n  //             if (requiresAnotherSplit) {\n  //               // Create a new plot at s2=18 with 20-18 Pods.\n  //               const s2Str = s2.toString();\n  //               this.plots[s2Str] = endIndex.minus(s2);\n  //               if (this.plots[s2Str].isEqualTo(0)) {\n  //                 delete this.plots[s2Str];\n  //               }\n  //             }\n  //           }\n  //           found = true;\n  //         }\n  //         i += 1;\n  //       }\n  //     }\n  //   }\n  // }\n\n  // parsePlots(_harvestableIndex: BigNumber) {\n  //   return EventProcessor._parsePlots(\n  //     this.plots,\n  //     _harvestableIndex\n  //   );\n  // }\n\n  // static _parsePlots(\n  //   plots: EventProcessorData['plots'],\n  //   index: BigNumber\n  // ) {\n  //   console.debug(`[EventProcessor] Parsing plots with index ${index.toString()}`);\n\n  //   let pods = new BigNumber(0);\n  //   let harvestablePods = new BigNumber(0);\n  //   const unharvestablePlots  : PlotMap<BigNumber> = {};\n  //   const harvestablePlots    : PlotMap<BigNumber> = {};\n\n  //   Object.keys(plots).forEach((p) => {\n  //     if (plots[p].plus(p).isLessThanOrEqualTo(index)) {\n  //       harvestablePods = harvestablePods.plus(plots[p]);\n  //       harvestablePlots[p] = plots[p];\n  //     } else if (new BigNumber(p).isLessThan(index)) {\n  //       harvestablePods = harvestablePods.plus(index.minus(p));\n  //       pods = pods.plus(\n  //         plots[p].minus(index.minus(p))\n  //       );\n  //       harvestablePlots[p] = index.minus(p);\n  //       unharvestablePlots[index.minus(p).plus(p).toString()] = plots[p].minus(\n  //         index.minus(p)\n  //       );\n  //     } else {\n  //       pods = pods.plus(plots[p]);\n  //       unharvestablePlots[p] = plots[p];\n  //     }\n  //   });\n\n  //   // FIXME: \"unharvestable pods\" are just Pods,\n  //   // but we can't reuse \"plots\" in the same way.\n  //   return {\n  //     pods,\n  //     harvestablePods,\n  //     plots: unharvestablePlots,\n  //     harvestablePlots\n  //   };\n  // }\n\n  // /// /////////////////////// SILO: UTILS  //////////////////////////\n\n  // parseWithdrawals(_token: Token, _season: EBN) {\n  //   return EventProcessor._parseWithdrawals(\n  //     this.withdrawals.get(_token)!,\n  //     _season || this.epp.season\n  //   );\n  // }\n\n  // static _parseWithdrawals(\n  //   // withdrawals: EventProcessorData['withdrawals'] extends {[season:string]: infer I} ? I : undefined,\n  //   withdrawals: MapValueType<EventProcessorData['withdrawals']>,\n  //   currentSeason: EBN\n  // ): {\n  //   withdrawn: TokenSiloBalance['withdrawn'];\n  //   claimable: TokenSiloBalance['claimable'];\n  // } {\n  //   let transitBalance = EBN.from(0);\n  //   let receivableBalance = EBN.from(0);\n  //   const transitWithdrawals: WithdrawalCrate[] = [];\n  //   const receivableWithdrawals: WithdrawalCrate[] = [];\n\n  //   // Split each withdrawal between `receivable` and `transit`.\n  //   Object.keys(withdrawals).forEach((season: string) => {\n  //     const v = withdrawals[season].amount;\n  //     const s = EBN.from(season);\n  //     if (s.lte(currentSeason)) {\n  //       receivableBalance = receivableBalance.add(v);\n  //       receivableWithdrawals.push({\n  //         amount: v,\n  //         season: s,\n  //       });\n  //     } else {\n  //       transitBalance = transitBalance.plus(v);\n  //       transitWithdrawals.push({\n  //         amount: v,\n  //         season: s,\n  //       });\n  //     }\n  //   });\n\n  //   return {\n  //     withdrawn: {\n  //       amount: transitBalance,\n  //       crates: transitWithdrawals,\n  //     },\n  //     claimable: {\n  //       amount: receivableBalance,\n  //       crates: receivableWithdrawals,\n  //     },\n  //   };\n  // }\n\n  // /// /////////////////////// SILO: DEPOSIT  //////////////////////////\n\n  // eslint-disable-next-line class-methods-use-this\n  _upsertDeposit(\n    existing: DepositCrateRaw | undefined,\n    amount: EBN,\n    bdv: EBN\n  ) {\n    return existing\n      ? {\n          amount: existing.amount.add(amount),\n          bdv: existing.bdv.add(bdv),\n        }\n      : {\n          amount,\n          bdv,\n        };\n  }\n\n  _removeDeposit(\n    season: string,\n    token: Token,\n    amount: EBN\n  ) {\n    if (!this.epp.whitelist.has(token)) throw new Error(`Attempted to process an event with an unknown token: ${token}`);\n    const existingDeposit = this.deposits.get(token)?.[season];\n    if (!existingDeposit) throw new Error(`Received a 'RemoveDeposit' event for an unknown deposit: ${token.address} ${season}`);\n\n    // BDV scales linearly with the amount of the underlying token.\n    // Ex. if we remove 60% of the `amount`, we also remove 60% of the BDV.\n    // Because of this, the `RemoveDeposit` event doesn't contain the BDV to save gas.\n    //\n    // @note order of mul/div matters here to prevent underflow\n    const bdv = amount.mul(existingDeposit.bdv).div(existingDeposit.amount);\n\n    this.deposits.set(token, {\n      ...this.deposits.get(token),\n      [season]: this._upsertDeposit(\n        existingDeposit,\n        amount.mul(-1),\n        bdv.mul(-1)\n      ),\n    });\n\n    if (this.deposits.get(token)?.[season]?.amount?.eq(0)) {\n      delete this.deposits.get(token)?.[season];\n    }\n  }\n\n  AddDeposit(event: Simplify<AddDepositEvent>) {\n    const token = this.getToken(event);\n    if (!this.epp.whitelist.has(token)) throw new Error(`Attempted to process an event with an unknown token: ${token}`);\n\n    const tokDeposits = this.deposits.get(token);\n    this.deposits.set(token, {\n      ...tokDeposits,\n      [event.args.season]: this._upsertDeposit(\n        tokDeposits?.[event.args.season],\n        event.args.amount,\n        event.args.bdv\n      ),\n    });\n  }\n\n  RemoveDeposit(event: Simplify<RemoveDepositEvent>) {\n    const token = this.getToken(event);\n    this._removeDeposit(\n      event.args.season.toString(),\n      token,\n      event.args.amount\n    );\n  }\n\n  RemoveDeposits(event: Simplify<RemoveDepositsEvent>) {\n    const token = this.getToken(event);\n    event.args.seasons.forEach((season, index) => {\n      this._removeDeposit(\n        season.toString(),\n        token,\n        event.args.amounts[index]\n      );\n    });\n  }\n\n  /// /////////////////////// SILO: WITHDRAW  //////////////////////////\n\n  // eslint-disable-next-line class-methods-use-this\n  _upsertWithdrawal(existing: WithdrawalCrateRaw | undefined, amount: EBN) {\n    return existing\n      ? {\n          amount: existing.amount.add(amount),\n        }\n      : {\n          amount,\n        };\n  }\n\n  _removeWithdrawal(season: string, token: Token, _amount: EBN) {\n    // For gas optimization reasons, `RemoveWithdrawal` is emitted\n    // with a zero amount when the removeWithdrawal method is called with:\n    //  (a) a token that doesn't exist;\n    //  (b) a season that doesn't exist;\n    //  (c) a combo of (a) and (b) where there is no existing Withdrawal.\n    // In these cases we just ignore the event.\n    if (_amount.eq(0) || !this.epp.whitelist.has(token)) return;\n\n    const existingWithdrawal = this.withdrawals.get(token)?.[season];\n    if (!existingWithdrawal) throw new Error(`Received a RemoveWithdrawal(s) event for an unknown Withdrawal: ${token} ${season}`);\n\n    // Removing a Withdrawal always removes the entire season.\n    delete this.withdrawals.get(token)?.[season];\n  }\n\n  AddWithdrawal(event: Simplify<AddWithdrawalEvent>) {\n    const token = this.getToken(event);\n    if (!this.epp.whitelist.has(token)) throw new Error(`Attempted to process an event with an unknown token: ${token}`);\n\n    const tokWithdrawals = this.withdrawals.get(token);\n    this.withdrawals.set(token, {\n      ...tokWithdrawals,\n      [event.args.season]: this._upsertWithdrawal(\n        tokWithdrawals?.[event.args.season],\n        event.args.amount\n      ),\n    });\n  }\n\n  RemoveWithdrawal(event: Simplify<RemoveWithdrawalEvent>) {\n    const token = this.getToken(event);\n    this._removeWithdrawal(\n      event.args.season.toString(),\n      token,\n      event.args.amount\n    );\n  }\n\n  RemoveWithdrawals(event: Simplify<RemoveWithdrawalsEvent>) {\n    const token = this.getToken(event);\n    event.args.seasons.forEach(season => {\n      this._removeWithdrawal(\n        season.toString(),\n        token,\n        event.args.amount\n      );\n    });\n  }\n\n  // /// /////////////////////// MARKET  //////////////////////////\n\n  // PodListingCreated(event: Simplify<PodListingCreatedEvent>) {\n  //   const id          = event.args.index.toString();\n  //   const amount      = tokenBN(event.args.amount, BEAN[1]);\n  //   this.listings[id] = {\n  //     id:               id,\n  //     account:          event.args.account.toLowerCase(),\n  //     index:            tokenBN(event.args.index, BEAN[1]), // 6 dec\n  //     start:            tokenBN(event.args.start, BEAN[1]), // 6 dec\n  //     pricePerPod:      tokenBN(event.args.pricePerPod, BEAN[1]),\n  //     maxHarvestableIndex: tokenBN(event.args.maxHarvestableIndex, BEAN[1]),\n  //     mode:             event.args.mode.toString() as FarmToMode,\n  //     amount:           amount,   //\n  //     totalAmount:      amount,   //\n  //     remainingAmount:  amount,   //\n  //     filledAmount:     BN(0),    //\n  //     status:           MarketStatus.Active,\n  //     placeInLine:      ZERO_BN,  // FIXME\n  //   };\n  // }\n\n  // PodListingCancelled(event: Simplify<PodListingCancelledEvent>) {\n  //   const id = event.args.index.toString();\n  //   if (this.listings[id]) delete this.listings[id];\n  // }\n\n  // /**\n  //  * Notes on behavior:\n  //  *\n  //  * PodListingCreated                          => `status = active`\n  //  * -> PodListingFilled (for the full amount)  => `status = filled-full`\n  //  * -> PodListingFilled (for a partial amount) => `status = filled-partial`\n  //  * -> PodListingCancelled                     => `status = cancelled`\n  //  *\n  //  * Every `PodListingFilled` event changes the `index` of the Listing.\n  //  * When a Listing is partially filled, the Subgraph creates a new Listing\n  //  * with the new index and `status = active`. The \"old listing\" now has\n  //  * `status = filled-partial`.\n  //  *\n  //  * This EventProcessor is intended to stand in for the subgraph when we can't\n  //  * connect, so we treat listings similarly:\n  //  * 1. When a `PodListingFilled` event is received, delete the listing stored\n  //  *    at the original `index` and create one at the new `index`. The new `index`\n  //  *    is always: `previous index + start + amount`.\n  //  *\n  //  * @param event\n  //  * @returns\n  //  */\n  // PodListingFilled(event: Simplify<PodListingFilledEvent>) {\n  //   const id = event.args.index.toString();\n  //   if (!this.listings[id]) return;\n\n  //   const indexBN     = BN(event.args.index);\n  //   const deltaAmount = tokenBN(event.args.amount, BEAN[1]);\n  //   // const start   = tokenBN(event.args.start,  BEAN[1]);\n\n  //   /// Move current listing's index up by |amount|\n  //   ///  FIXME: does this match the new marketplace behavior? Believe\n  //   ///  this assumes we are selling from the front (such that, as a listing\n  //   ///  is sold, the index increases).\n  //   const prevID = id;\n  //   const currentListing = this.listings[prevID]; // copy\n  //   delete this.listings[prevID];\n\n  //   /// The new index of the Plot, now that some of it has been sold.\n  //   const newIndex       = indexBN.plus(BN(event.args.amount)).plus(BN(event.args.start)); // no decimals\n  //   const newID          = newIndex.toString();\n  //   this.listings[newID] = currentListing;\n\n  //   /// Bump up |amountSold| for this listing\n  //   this.listings[newID].id              = newID;\n  //   this.listings[newID].index           = tokenBN(newIndex, BEAN[1]);\n  //   this.listings[newID].start           = new BigNumber(0); // After a Fill, the new start position is always zero (?)\n  //   this.listings[newID].filledAmount    = currentListing.filledAmount.plus(deltaAmount);\n  //   this.listings[newID].remainingAmount = currentListing.amount.minus(currentListing.filledAmount);\n  //   // others stay the same, incl. currentListing.totalAmount, etc.\n\n  //   const isFilled = this.listings[newID].remainingAmount.isEqualTo(0);\n  //   if (isFilled) {\n  //     this.listings[newID].status = MarketStatus.Filled;\n  //     // delete this.listings[newID];\n  //   }\n  // }\n\n  // PodOrderCreated(event: Simplify<PodOrderCreatedEvent>) {\n  //   const id = event.args.id.toString();\n  //   this.orders[id] = {\n  //     id:               id,\n  //     account:          event.args.account.toLowerCase(),\n  //     maxPlaceInLine:   tokenBN(event.args.maxPlaceInLine, BEAN[1]),\n  //     totalAmount:      tokenBN(event.args.amount, BEAN[1]),\n  //     pricePerPod:      tokenBN(event.args.pricePerPod, BEAN[1]),\n  //     remainingAmount:  tokenBN(event.args.amount, BEAN[1]),\n  //     filledAmount:     new BigNumber(0),\n  //     status:           MarketStatus.Active,\n  //   };\n  // }\n\n  // PodOrderCancelled(event: Simplify<PodOrderCancelledEvent>) {\n  //   const id = event.args.id.toString();\n  //   if (this.orders[id]) delete this.orders[id];\n  // }\n\n  // PodOrderFilled(event: Simplify<PodOrderFilledEvent>) {\n  //   const id = event.args.id.toString();\n  //   if (!this.orders[id]) return;\n\n  //   const amount = tokenBN(event.args.amount, BEAN[1]);\n  //   this.orders[id].filledAmount    = this.orders[id].filledAmount.plus(amount);\n  //   this.orders[id].remainingAmount = this.orders[id].totalAmount.minus(this.orders[id].filledAmount);\n\n  //   /// Update status\n  //   const isFilled = this.orders[id].remainingAmount.isEqualTo(0);\n  //   if (isFilled) {\n  //     this.orders[id].status = MarketStatus.Filled;\n  //     // delete this.orders[id];\n  //   }\n  // }\n}\n","import BigNumber from \"bignumber.js\";\nimport { Token } from \"../classes/Token\";\nimport { ZERO_BN } from \"../constants\";\nimport { MapValueType } from \"../types\";\nimport { toTokenUnitsBN } from \"../utils/Tokens\";\nimport { EventProcessorData } from \"./events/processor\";\nimport { EIP712PermitMessage } from \"./permit\";\nimport { Crate, DepositCrate, TokenSiloBalance, WithdrawalCrate } from \"./silo\";\n\n// FIXME: resolve with EIP712PermitMessage\nexport type DepositTokenPermitMessage = EIP712PermitMessage<{\n  token: string;\n  value: number | string;\n}>\n\nexport type DepositTokensPermitMessage = EIP712PermitMessage<{\n  tokens: string[];\n  values: (number | string)[];\n}>\n\nexport type CrateSortFn = <T extends Crate<BigNumber>>(crates: T[]) => T[];\n\n/**\n * Beanstalk doesn't automatically re-categorize withdrawals as \"claimable\".\n * \"Claimable\" just means that the `season` parameter stored in the withdrawal\n * event is less than or equal to the current `season()`.\n * \n * This function serves two purposes:\n * 1. Break generic withdrawals into\n *    \"withdrawn\" (aka transit), which cannot yet be claimed\n *    \"claimable\" (aka receivable), which are eligible to be claimed\n * 2. Convert each crate amount to the appropriate number of decimals.\n */\nexport const _parseWithdrawalCrates = (\n  token: Token,\n  withdrawals: MapValueType<EventProcessorData['withdrawals']>,\n  currentSeason: BigNumber\n) : {\n  withdrawn: TokenSiloBalance['withdrawn'];\n  claimable: TokenSiloBalance['claimable'];\n} => {\n  let withdrawnBalance = ZERO_BN;           // aka \"transit\"\n  let claimableBalance = ZERO_BN;           // aka \"receivable\"\n  const withdrawn : WithdrawalCrate[] = []; // aka \"transit\"\n  const claimable : WithdrawalCrate[] = []; // aka \"receivable\"\n\n  // Split each withdrawal between `receivable` and `transit`.\n  Object.keys(withdrawals).forEach((season) => {\n    const amt = toTokenUnitsBN(withdrawals[season].amount.toString(), token.decimals);\n    const szn = new BigNumber(season);\n    if (szn.lte(currentSeason)) {\n      claimableBalance = claimableBalance.plus(amt);\n      claimable.push({\n        amount: amt,\n        season: szn,\n      });\n    } else {\n      withdrawnBalance = withdrawnBalance.plus(amt);\n      withdrawn.push({\n        amount: amt,\n        season: szn,\n      });\n    }\n  });\n\n  return {\n    withdrawn: {\n      amount: withdrawnBalance,\n      crates: withdrawn,\n    },\n    claimable: {\n      amount: claimableBalance,\n      crates: claimable,\n    },\n  };\n}\n\n/**\n * Order crates by Season.\n */\nexport function sortCratesBySeason<T extends Crate<BigNumber>>(crates: T[], direction : 'asc' | 'desc' = 'desc') {\n  const m = direction === 'asc' ? -1 : 1;\n  return [...crates].sort((a, b) => m * (b.season.minus(a.season).toNumber()));\n}\n\n/**\n * Order crates by BDV.\n */\nexport function sortCratesByBDVRatio<T extends DepositCrate<BigNumber>>(crates: T[], direction : 'asc' | 'desc' = 'asc') {\n  const m = direction === 'asc' ? -1 : 1;\n  return [...crates].sort((a, b) => {\n    const _a = a.bdv.div(a.amount);\n    const _b = b.bdv.div(b.amount);\n    return m * _b.minus(_a).toNumber();\n  });\n}\n\n","import { BigNumber } from 'bignumber.js';\nimport { ethers } from 'ethers';\nimport _ from 'lodash';\nimport { Token } from '../classes/Token';\nimport { MAX_UINT256, ZERO_BN } from '../constants';\nimport { DataSource, StringMap } from '../types';\nimport { toTokenUnitsBN } from '../utils/Tokens';\n\nimport { BeanstalkSDK } from './BeanstalkSDK';\nimport EventProcessor from './events/processor';\nimport { EIP712Domain, EIP712TypedData, Permit } from './permit';\nimport { CrateSortFn, DepositTokenPermitMessage, DepositTokensPermitMessage, sortCratesBySeason, _parseWithdrawalCrates } from './silo.utils';\n\n/**\n * A Crate is an `amount` of a token Deposited or\n * Withdrawn during a given `season`.\n */\ntype BigNumbers = BigNumber | ethers.BigNumber;\nexport type Crate<T extends BigNumbers = BigNumber>  = {\n  /** The amount of this Crate that was created, denominated in the underlying Token. */\n  amount: T;\n  /** The Season that the Crate was created. */\n  season: T;\n};\n\n/**\n * A \"Deposit\" represents an amount of a Whitelisted Silo Token\n * that has been added to the Silo.\n */\nexport type DepositCrate<T extends BigNumbers = BigNumber> = Crate<T> & {\n  /** The BDV of the Deposit, determined upon Deposit. */\n  bdv: T;\n  /** The amount of Stalk granted for this Deposit. */\n  stalk: T;\n  /** The amount of Seeds granted for this Deposit. */\n  seeds: T;\n};\n\nexport type WithdrawalCrate<T extends BigNumbers = BigNumber> = Crate<T> & {};\n\n/**\n * A \"Silo Balance\" provides all information\n * about a Farmer's ownership of a Whitelisted Silo Token.\n */\nexport type TokenSiloBalance = {\n  deposited: {\n    /** The total amount of this Token currently in the Deposited state. */\n    amount: BigNumber;\n    /** The BDV of this Token currently in the Deposited state. */\n    bdv: BigNumber;\n    /** All Deposit crates. */\n    crates: DepositCrate<BigNumber>[];\n  };\n  withdrawn: {\n    /** The total amount of this Token currently in the Withdrawn state. */\n    amount: BigNumber;\n    /** All Withdrawal crates. */\n    crates: WithdrawalCrate<BigNumber>[];\n  };\n  claimable: {\n    /** The total amount of this Token currently in the Claimable state. */\n    amount: BigNumber;\n    /** All Claimable crates. */\n    crates: Crate[];\n  };\n};\n\nexport type UpdateFarmerSiloBalancesPayload = StringMap<Partial<TokenSiloBalance>>;\n\nexport class Silo {\n  static sdk: BeanstalkSDK;\n  // public balances: Map<Token, TokenSiloBalance>;\n\n  constructor(sdk: BeanstalkSDK) {\n    Silo.sdk = sdk;\n  }\n\n  /**\n   *\n   * @param _tokenIn The input token, any that we can swap for the whitelisted token\n   * @param _amountIn Amount of _tokenIn to convert to _tokenOut and deposit\n   * @param _tokenOut The whitelisted Token (BEAN, BEAN3CRV, urBEAN, urBEAN3CRV)\n   */\n  // public async depositQuote(\n  //   _tokenIn: NativeToken | ERC20Token,\n  //   _amountIn: BigNumber,\n  //   _tokenOut: ERC20Token,\n  // ): Promise<{ amountOut: any; steps: any }> {\n  //   if (Silo.sdk.tokens.siloWhitelist.has(_tokenOut)) {\n  //     throw new Error(`${_tokenOut.symbol} is not a whitelisted token`)\n  //   }\n  //   const tokenIn: ERC20Token = _tokenIn instanceof NativeToken ? Silo.sdk.tokens.WETH : _tokenIn;\n  //   const tokenOut = _tokenOut;\n  //   const amountIn = ethers.BigNumber.from(toStringBaseUnitBN(_amountIn, tokenIn.decimals));\n\n  //   let estimate;\n\n  //   // Depositing BEAN\n  //   if (tokenOut.equals(Silo.sdk.tokens.BEAN)) {\n  //     if (tokenIn.equals(Silo.sdk.tokens.WETH)) {\n  //       estimate = await Silo.sdk.farm.estimate(\n  //         Silo.sdk.farm.buyBeans(), // this assumes we're coming from WETH\n  //         [amountIn]\n  //       );\n  //     }\n  //   }\n\n  //   // Depositing LP Tokens\n  //   else {\n  //     const pool = Silo.sdk.tokens\n  //     if (!pool) throw new Error(`Depositing to ${tokenOut.symbol} but no corresponding pool data found.`);\n\n  //     // This is a Curve MetaPool...\n  //     const isMetapool = true;\n  //     if (isMetapool) {\n  //       // ...and we're depositing one of the underlying pool tokens.\n  //       // Ex. for BEAN:3CRV this could be [BEAN, (DAI, USDC, USDT)].\n  //       // pool.tokens      = [BEAN, CRV3]\n  //       // pool.underlying  = [BEAN, DAI, USDC, USDT]\n  //       const tokenIndex = pool.tokens.indexOf(tokenIn);\n  //       console.log('TokenIndex: ', tokenIndex);\n  //       const underlyingTokenIndex = pool.underlying.indexOf(tokenIn);\n  //       console.debug('[Deposit] LP Deposit', {\n  //         pool,\n  //         tokenIn,\n  //         tokenIndex,\n  //         underlyingTokenIndex,\n  //       });\n\n  //       // This is X or CRV3\n  //       if (tokenIndex > -1) {\n  //         const indices = [0, 0];\n  //         indices[tokenIndex] = 1; // becomes [0, 1] or [1, 0]\n  //         console.debug('[Deposit] LP Deposit: indices=', indices);\n  //         estimate = await Farm.estimate(\n  //           [\n  //             farm.addLiquidity(\n  //               pool.address,\n  //               // FIXME: bean:lusd was a plain pool, bean:eth on curve would be a crypto pool\n  //               // perhaps the Curve pool instance needs to track a registry\n  //               farm.contracts.curve.registries.metaFactory.address,\n  //               // FIXME: find a better way to define this above\n  //               indices as [number, number],\n  //               optimizeFromMode(_amountIn, balanceIn) // use the BN version here\n  //             ),\n  //           ],\n  //           [amountIn]\n  //         );\n  //       }\n\n  //       // This is a CRV3-underlying stable (DAI/USDC/USDT etc)\n  //       else if (underlyingTokenIndex > -1) {\n  //         if (underlyingTokenIndex === 0) throw new Error('Malformatted pool.tokens / pool.underlying');\n  //         const indices = [0, 0, 0];\n  //         indices[underlyingTokenIndex - 1] = 1;\n  //         console.debug('[Deposit] LP Deposit: indices=', indices);\n  //         estimate = await Farm.estimate(\n  //           [\n  //             // Deposit token into 3pool for 3CRV\n  //             farm.addLiquidity(\n  //               farm.contracts.curve.pools.pool3.address,\n  //               farm.contracts.curve.registries.poolRegistry.address,\n  //               indices as [number, number, number], // [DAI, USDC, USDT] use Tether from previous call\n  //               optimizeFromMode(_amountIn, balanceIn) // use the BN version here\n  //             ),\n  //             farm.addLiquidity(\n  //               pool.address,\n  //               farm.contracts.curve.registries.metaFactory.address,\n  //               // adding the 3CRV side of liquidity\n  //               // FIXME: assuming that 3CRV is the second index (X:3CRV)\n  //               // not sure if this is always the case\n  //               [0, 1]\n  //             ),\n  //           ],\n  //           [amountIn]\n  //         );\n  //       }\n\n  //       // This is ETH or WETH\n  //       else if (tokenIn === Weth) {\n  //         estimate = await Farm.estimate(\n  //           [\n  //             // FIXME: this assumes the best route from\n  //             // WETH to [DAI, USDC, USDT] is via tricrypto2\n  //             // swapping to USDT. we should use routing logic here to\n  //             // find the best pool and output token.\n  //             // --------------------------------------------------\n  //             // WETH -> USDT\n  //             farm.exchange(\n  //               farm.contracts.curve.pools.tricrypto2.address,\n  //               farm.contracts.curve.registries.cryptoFactory.address,\n  //               Weth.address,\n  //               getChainToken(USDT).address,\n  //               // The prior step is a ETH->WETH \"swap\", from which\n  //               // we should expect to get an exact amount of WETH.\n  //               FarmFromMode.INTERNAL\n  //             ),\n  //             // USDT -> deposit into pool3 for CRV3\n  //             // FIXME: assumes USDT is the third index\n  //             farm.addLiquidity(\n  //               farm.contracts.curve.pools.pool3.address,\n  //               farm.contracts.curve.registries.poolRegistry.address,\n  //               [0, 0, 1] // [DAI, USDC, USDT]; use Tether from previous call\n  //             ),\n  //             // CRV3 -> deposit into right side of X:CRV3\n  //             // FIXME: assumes CRV3 is the second index\n  //             farm.addLiquidity(\n  //               pool.address,\n  //               farm.contracts.curve.registries.metaFactory.address,\n  //               [0, 1] // [BEAN, CRV3] use CRV3 from previous call\n  //             ),\n  //           ],\n  //           [amountIn]\n  //         );\n  //       }\n  //     }\n  //   }\n\n  //   if (!estimate) {\n  //     throw new Error(`Depositing ${tokenOut.symbol} to the Silo via ${tokenIn.symbol} is currently unsupported.`);\n  //   }\n\n  //   console.debug('[chain] estimate = ', estimate);\n\n  //   return {\n  //     amountOut: toTokenUnitsBN(estimate.amountOut.toString(), tokenOut.decimals),\n  //     steps: estimate.steps,\n  //   };\n  // }\n\n  //////////////////////// UTILITIES ////////////////////////\n\n  /**\n   * Sort the incoming map so that tokens are ordered in the same order\n   * they appear on the Silo Whitelist. \n   * \n   * @note the Silo Whitelist is sorted by the order in which tokens were\n   * whitelisted in Beanstalk. Unclear if the ordering shown on the\n   * Beanstalk UI will change at some point in the future.\n   */\n  private _sortTokenMapByWhitelist<T extends any>(map: Map<Token, T>) {\n    const whitelist = Silo.sdk.tokens.siloWhitelist;\n    const copy = new Map<Token, T>(map);\n    const ordered = new Map<Token, T>();\n    // by default, order by whitelist\n    whitelist.forEach((token) => {\n      const v = copy.get(token)\n      if (v) {\n        ordered.set(token, v);\n        copy.delete(token);\n      }\n    });\n    // add remaining tokens\n    copy.forEach((_, token) => {\n      ordered.set(token, copy.get(token)!);\n    });\n    return ordered;\n  }\n\n  //////////////////////// WHITELIST ////////////////////////\n\n  /**\n   * Return a list of tokens that are currently whitelisted in the Silo.\n   * \n   * @todo Check if the subgraph removes `WhitelistToken` entities if a\n   *       token is de-whitelisted.\n   * @todo Get name, decimals since these are ERC20 tokens.\n   */\n  public async getWhitelist(options?: (\n    { source: DataSource.LEDGER } | \n    { source: DataSource.SUBGRAPH }\n  )) {\n    const source = Silo.sdk.deriveConfig(\"source\", options);\n    if (source === DataSource.SUBGRAPH) {\n      const query = await Silo.sdk.queries.getSiloWhitelist(); \n      return query.whitelistTokens.map((e) => ({\n        token: e.token,\n        stalk: parseInt(e.stalk),\n        seeds: parseInt(e.seeds) / 1E4,\n      }));\n    }\n    throw new Error(`Unsupported source: ${source}`);\n  }\n\n  //////////////////////// BALANCES ////////////////////////\n\n  private _parseWithdrawalCrates = _parseWithdrawalCrates;\n\n  private _makeTokenSiloBalance() : TokenSiloBalance {\n    return {\n      deposited: {\n        amount: ZERO_BN,\n        bdv: ZERO_BN, \n        crates: [] as DepositCrate[],\n      },\n      withdrawn: {\n        amount: ZERO_BN,\n        crates: [] as WithdrawalCrate[]\n      },\n      claimable: { \n        amount: ZERO_BN,\n        crates: [] as WithdrawalCrate[]\n      },\n    }\n  }\n\n  /**\n   * Apply a Deposit to a TokenSiloBalance.\n   * \n   * @note expects inputs to be stringified (no decimals).\n   */\n  private _applyDeposit(\n    state: TokenSiloBalance['deposited'],\n    token: Token,\n    rawCrate: {\n      season: string | number;\n      amount: string;\n      bdv: string;\n    },\n  ) {\n    const season = new BigNumber(rawCrate.season);\n    const amount = toTokenUnitsBN(rawCrate.amount, token.decimals);\n    const bdv    = toTokenUnitsBN(rawCrate.bdv, Silo.sdk.tokens.BEAN.decimals);\n\n    const crate = {\n      season:   season,\n      amount:   amount,\n      bdv:      bdv,\n      stalk:    token.getStalk(bdv), // FIXME: include grown stalk?\n      seeds:    token.getSeeds(bdv),\n    };\n\n    state.amount = state.amount.plus(amount);\n    state.bdv    = state.bdv.plus(bdv);\n    state.crates.push(crate);\n\n    return crate;\n  }\n\n  /** \n   * Apply a Deposit to a TokenSiloBalance.\n   * \n   * @note expects inputs to be stringified (no decimals).\n   */\n  private _applyWithdrawal(\n    state: TokenSiloBalance['withdrawn' | 'claimable'],\n    token: Token,\n    rawCrate: {\n      season: string | number;\n      amount: string;\n    }\n  ) {\n    const season = new BigNumber(rawCrate.season);\n    const amount = toTokenUnitsBN(rawCrate.amount, token.decimals);\n\n    const crate = {\n      season:   season,\n      amount:   amount,\n    };\n\n    state.amount = state.amount.plus(amount);\n    state.crates.push(crate);\n\n    return crate;\n  }\n\n  private _sortCrates(\n    state: TokenSiloBalance['deposited' | 'withdrawn' | 'claimable']\n  ) {\n    state.crates = state.crates.sort(\n      (a, b) => a.season.minus(b.season).toNumber() // sort by season asc\n    );\n  }\n\n  /**\n   * Return the Farmer's balance of a single whitelisted token.\n   */\n  public async getBalance(\n    _token: Token,\n    _account?: string,\n    options?: (\n      { source: DataSource.LEDGER } | \n      { source: DataSource.SUBGRAPH }\n    )\n  ) : Promise<TokenSiloBalance> {\n    const source = Silo.sdk.deriveConfig(\"source\", options);\n    const [account, season] = await Promise.all([\n      Silo.sdk.getAccount(_account),\n      Silo.sdk.sun.getSeason(),\n    ]);\n\n    // FIXME: doesn't work if _token is an instance of a token created by the SDK consumer\n    if (!Silo.sdk.tokens.siloWhitelist.has(_token)) throw new Error(`${_token.address} is not whitelisted in the Silo`);\n\n    ///  SETUP\n    const whitelist = Silo.sdk.tokens.siloWhitelist;\n    const balance : TokenSiloBalance = this._makeTokenSiloBalance();\n\n    if (source === DataSource.LEDGER) {\n      // Fetch and process events.\n      const seasonBN = new BigNumber(season);\n      const events = await Silo.sdk.events.getSiloEvents(account, _token.address);\n      const processor = new EventProcessor(Silo.sdk, account, { \n        season: ethers.BigNumber.from(season.toString()), // FIXME: verbose\n        whitelist\n      });\n\n      const { deposits, withdrawals } = processor.ingestAll(events);\n\n      // Handle deposits\n      {\n        const _crates = deposits.get(_token);\n\n        for (let s in _crates) {\n          const rawCrate = {\n            season: s.toString(),\n            amount: _crates[s].amount.toString(),\n            bdv:    _crates[s].bdv.toString(),\n          }\n          // Update the total deposited of this token\n          // and return a parsed crate object\n          this._applyDeposit(balance.deposited, _token, rawCrate);\n        }\n\n        this._sortCrates(balance.deposited);\n      }\n\n      // Handle withdrawals\n      {\n        const _crates = withdrawals.get(_token);\n        if (_crates) {\n          const { withdrawn, claimable } = this._parseWithdrawalCrates(_token, _crates, seasonBN);\n          \n          balance.withdrawn = withdrawn;\n          balance.claimable = claimable;\n\n          this._sortCrates(balance.withdrawn);\n          this._sortCrates(balance.claimable);\n        }\n      }\n\n      return balance;\n    }\n\n    /// SUBGRAPH\n    else if (source === DataSource.SUBGRAPH) {\n      const query = await Silo.sdk.queries.getSiloBalance({\n        token: _token.address.toLowerCase(),\n        account,\n        season,\n      }); // crates ordered in asc order\n      if (!query.farmer) return balance;\n\n      const { deposited, withdrawn, claimable } = query.farmer!;\n      deposited.forEach((crate) => this._applyDeposit(balance.deposited, _token, crate));\n      withdrawn.forEach((crate) => this._applyWithdrawal(balance.withdrawn, _token, crate));\n      claimable.forEach((crate) => this._applyWithdrawal(balance.claimable, _token, crate));\n\n      return balance;\n    }\n\n    throw new Error(`Unsupported source: ${source}`);\n  }\n\n  /**\n   * Return a Farmer's Silo balances.\n   * \n   * ```\n   * [Token] => { \n   *   deposited => { amount, bdv, crates },\n   *   withdrawn => { amount, crates },\n   *   claimable => { amount, crates }\n   * }\n   * ```\n   * \n   * @note EventProcessor requires a known whitelist and returns \n   *       an object (possibly empty) for every whitelisted token.\n   * @note To process a Deposit, we must know how many Stalk & Seeds\n   *       are given to it. If a token is dewhitelisted and removed from\n   *       `tokens` (or from the on-chain whitelist)\n   * @fixme \"deposits\" vs \"deposited\"\n   */\n  public async getBalances(\n    _account?: string,\n    options?: (\n      { source: DataSource.LEDGER } | \n      { source: DataSource.SUBGRAPH }\n    )\n  ) : Promise<Map<Token, TokenSiloBalance>> {\n    const source = Silo.sdk.deriveConfig(\"source\", options);\n    const [account, season] = await Promise.all([\n      Silo.sdk.getAccount(_account),\n      Silo.sdk.sun.getSeason(),\n    ]);\n\n    \n    /// SETUP\n    const whitelist = Silo.sdk.tokens.siloWhitelist;\n    const balances = new Map<Token, TokenSiloBalance>();\n    whitelist.forEach((token) => balances.set(token, this._makeTokenSiloBalance()));\n\n    /// LEDGER\n    if (source === DataSource.LEDGER) {\n      // Fetch and process events.\n      const seasonBN = new BigNumber(season);\n      const events = await Silo.sdk.events.getSiloEvents(account);\n      const processor = new EventProcessor(Silo.sdk, account, { \n        season: ethers.BigNumber.from(season.toString()), // FIXME: verbose\n        whitelist\n      });\n      const { deposits, withdrawals } = processor.ingestAll(events);\n\n      // Handle deposits.\n      // Attach stalk & seed counts for each crate.\n      deposits.forEach((_crates, token) => {\n        if (!balances.has(token)) {\n          balances.set(token, this._makeTokenSiloBalance());\n        }\n        const state = balances.get(token)!.deposited;\n\n        for (let s in _crates) {\n          const rawCrate = {\n            season: s.toString(),\n            amount: _crates[s].amount.toString(),\n            bdv:    _crates[s].bdv.toString(),\n          }\n\n          // Update the total deposited of this token\n          // and return a parsed crate object\n          this._applyDeposit(state, token, rawCrate);\n        }\n\n        this._sortCrates(state);\n      });\n\n      // Handle withdrawals.\n      // Split crates into withdrawn and claimable.\n      withdrawals.forEach((_crates, token) => {\n        if (!balances.has(token)) {\n          balances.set(token, this._makeTokenSiloBalance());\n        }\n\n        //\n        const { withdrawn, claimable } = this._parseWithdrawalCrates(token, _crates, seasonBN);\n        const tokenBalance = balances.get(token);\n        tokenBalance!.withdrawn = withdrawn;\n        tokenBalance!.claimable = claimable;\n\n        this._sortCrates(tokenBalance!.withdrawn);\n        this._sortCrates(tokenBalance!.claimable);\n      });\n      \n      return this._sortTokenMapByWhitelist(balances); // FIXME: sorting is redundant if this is instantiated\n    }\n\n    /// SUBGRAPH\n    if (source === DataSource.SUBGRAPH) {\n      const query = await Silo.sdk.queries.getSiloBalances({ account, season }); // crates ordered in asc order\n      if (!query.farmer) return balances;\n      const { deposited, withdrawn, claimable } = query.farmer!;\n\n      // Lookup token by address and create a TokenSiloBalance entity.\n      const prep = (address: string) => {\n        const token = Silo.sdk.tokens.findByAddress(address);\n        if (!token) return; // FIXME: unknown token handling\n        if (!balances.has(token)) balances.set(token, this._makeTokenSiloBalance());\n        return token;\n      };\n\n      // Handle deposits.\n      type DepositEntity = (typeof deposited)[number];\n      const handleDeposit = (crate: DepositEntity) => {\n        const token = prep(crate.token);\n        if (!token) return;\n        const state = balances.get(token)!.deposited;\n        this._applyDeposit(state, token, crate);\n      };\n\n      // Handle withdrawals.\n      // Claimable = withdrawals from the past. The GraphQL query enforces this.\n      type WithdrawalEntity = (typeof withdrawn)[number];\n      const handleWithdrawal = (key: 'withdrawn' | 'claimable') => (crate: WithdrawalEntity) => {\n        const token = prep(crate.token);\n        if (!token) return;\n        const state = balances.get(token)![key];\n        this._applyWithdrawal(state, token, crate)\n      };\n\n      deposited.forEach(handleDeposit);\n      withdrawn.forEach(handleWithdrawal('withdrawn'));\n      claimable.forEach(handleWithdrawal('claimable'));\n\n      return this._sortTokenMapByWhitelist(balances);\n    }\n\n    throw new Error(`Unsupported source: ${source}`);\n  }\n  \n  //////////////////////// Crates ////////////////////////\n\n  pickCrates(\n    crates: Crate<BigNumber>[],\n    token: Token,\n    amount: BigNumber.Value,\n    sort: CrateSortFn = (crates) => sortCratesBySeason(crates, 'desc'),\n  ) {\n    const sortedCrates = sort(crates);\n    const seasons : string[] = [];\n    const amounts : string[] = [];\n    let remaining = new BigNumber(amount);\n    sortedCrates.some((crate) => {\n      const thisAmount = crate.amount.gt(remaining) ? crate.amount.minus(remaining) : crate.amount;\n      seasons.push(crate.season.toString());\n      amounts.push(token.stringify(thisAmount));\n      remaining = remaining.minus(thisAmount);\n      return remaining.eq(0); // done\n    });\n    if (!remaining.eq(0)) throw new Error('Not enough amount in crates');\n    return { seasons, amounts };\n  }\n\n  //////////////////////// ACTION: Deposit ////////////////////////\n  \n  // public deposit = wrapped(Silo.sdk.contracts.beanstalk, 'deposit')\n  // $deposit = Silo.sdk.contracts.beanstalk.deposit;\n  // $plant = Silo.sdk.contracts.beanstalk.plant;\n  // $update = Silo.sdk.contracts.beanstalk.update;\n  // $lastUpdate = Silo.sdk.contracts.beanstalk.lastUpdate;\n\n  //////////////////////// Permits ////////////////////////\n\n  /**\n   * Created typed permit data to authorize `spender` to transfer\n   * the `owner`'s deposit balance of `token`.\n   * \n   * @fixme `permitDepositToken` -> `getPermitForToken`\n   * \n   * @param owner the Farmer whose Silo deposit can be transferred\n   * @param spender the account authorized to make a transfer\n   * @param token the whitelisted token that can be transferred\n   * @param value the amount of the token that can be transferred\n   * @param _nonce a nonce to include when signing permit.\n   * Defaults to `beanstalk.depositPermitNonces(owner)`.\n   * @param _deadline the permit deadline. \n   * Defaults to `MAX_UINT256` (effectively no deadline).\n   * @returns typed permit data. This can be signed with `sdk.permit.sign()`.\n   */\n  public async permitDepositToken(\n    owner: string,\n    spender: string,\n    token: string,\n    value: string,\n    _nonce?: string,\n    _deadline?: string,\n  ) : Promise<EIP712TypedData<DepositTokenPermitMessage>> {\n    const deadline = _deadline || MAX_UINT256;\n    const [domain, nonce] = await Promise.all([\n      this._getEIP712Domain(), \n      _nonce || (Silo.sdk.contracts.beanstalk.depositPermitNonces(owner).then((nonce) => nonce.toString())),\n    ]);\n\n    return this._createTypedDepositTokenPermitData(domain, {\n      owner,\n      spender,\n      token,\n      value,\n      nonce,\n      deadline\n    });\n  }\n\n  /**\n   * Created typed permit data to authorize `spender` to transfer\n   * the `owner`'s deposit balance of `tokens`.\n   * \n   * @fixme `permitDepositTokens` -> `getPermitForTokens`\n   * \n   * @param owner the Farmer whose Silo deposit can be transferred\n   * @param spender the account authorized to make a transfer\n   * @param tokens the whitelisted tokens that can be transferred.\n   * @param values the amount of each token in `tokens` that can be transferred.\n   * `values[0]` = how much of `tokens[0]` can be transferred, etc.\n   * @param _nonce a nonce to include when signing permit.\n   * Defaults to `beanstalk.depositPermitNonces(owner)`.\n   * @param _deadline the permit deadline. \n   * Defaults to `MAX_UINT256` (effectively no deadline).\n   * @returns typed permit data. This can be signed with `sdk.permit.sign()`.\n   */\n  public async permitDepositTokens(\n    owner: string,\n    spender: string,\n    tokens: string[],\n    values: string[],\n    _nonce?: string,\n    _deadline?: string,\n  ): Promise<EIP712TypedData<DepositTokensPermitMessage>> {\n    if (tokens.length !== values.length) throw new Error('Input mismatch: number of tokens does not equal number of values');\n    if (tokens.length === 1) console.warn('Optimization: use permitDepositToken when permitting one Silo Token.')\n\n    const deadline = _deadline || MAX_UINT256;\n    const [domain, nonce] = await Promise.all([\n      this._getEIP712Domain(), \n      _nonce || (Silo.sdk.contracts.beanstalk.depositPermitNonces(owner).then((nonce) => nonce.toString())),\n    ]);\n\n    return this._createTypedDepositTokensPermitData(domain, {\n      owner,\n      spender,\n      tokens,\n      values,\n      nonce,\n      deadline\n    });\n  }\n  \n  /**\n   * Get the EIP-712 domain for the Silo.\n   * @note applies to both `depositToken` and `depositTokens` permits.\n   */\n  private async _getEIP712Domain() {\n    return {\n      name: \"SiloDeposit\",\n      version: \"1\",\n      // FIXME: switch to below after protocol patch\n      // chainId: (await Silo.sdk.provider.getNetwork()).chainId,\n      chainId: 1, \n      verifyingContract: \"0xc1e088fc1323b20bcbee9bd1b9fc9546db5624c5\"\n    }\n  }\n\n  private _createTypedDepositTokenPermitData = (\n    domain: EIP712Domain,\n    message: DepositTokenPermitMessage,\n  ) => ({\n    types: {\n      EIP712Domain: Permit.EIP712_DOMAIN,\n      Permit: [\n        { name: \"owner\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"token\", type: \"address\" },\n        { name: \"value\", type: \"uint256\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"deadline\", type: \"uint256\" },\n      ],\n    },\n    primaryType: \"Permit\",\n    domain,\n    message,\n  });\n\n  private _createTypedDepositTokensPermitData = (\n    domain: EIP712Domain,\n    message: DepositTokensPermitMessage,\n  ) => ({\n    types: {\n      EIP712Domain: Permit.EIP712_DOMAIN,\n      Permit: [\n        { name: \"owner\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"tokens\", type: \"address[]\" },\n        { name: \"values\", type: \"uint256[]\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"deadline\", type: \"uint256\" },\n      ],\n    },\n    primaryType: \"Permit\",\n    domain,\n    message,\n  });\n}","import { BigNumber } from 'bignumber.js';\nimport { Token } from '../classes/Token';\n\nimport { BeanstalkSDK } from './BeanstalkSDK';\n\nexport class Sun {\n  static sdk: BeanstalkSDK;\n\n  constructor(sdk: BeanstalkSDK) {\n    Sun.sdk = sdk;\n  }\n\n  async getSeason(): Promise<number> {\n    return Sun.sdk.contracts.beanstalk.season();\n  }\n\n  // ... other sun related things\n}\n","import { GraphQLClient } from 'graphql-request';\nimport * as Dom from 'graphql-request/dist/types.dom';\nimport gql from 'graphql-tag';\nexport type Maybe<T> = T | null;\nexport type InputMaybe<T> = Maybe<T>;\nexport type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };\nexport type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };\nexport type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };\n/** All built-in and custom scalars, mapped to their actual values */\nexport type Scalars = {\n  ID: string;\n  String: string;\n  Boolean: boolean;\n  Int: number;\n  Float: number;\n  BigDecimal: any;\n  BigInt: any;\n  Bytes: any;\n};\n\nexport type AddDeposit = SiloEvent & {\n  __typename?: 'AddDeposit';\n  /**  Account removing deposit */\n  account: Scalars['String'];\n  /**  Amount of token removed  */\n  amount: Scalars['BigInt'];\n  /**  BDV of the deposit  */\n  bdv: Scalars['BigInt'];\n  /**  Block number of this event  */\n  blockNumber: Scalars['BigInt'];\n  /**  Transaction hash of the transaction that emitted this event  */\n  hash: Scalars['String'];\n  /** addDeposit-{ Transaction hash }-{ Log index } */\n  id: Scalars['ID'];\n  /**  Event log index. For transactions that don't emit event, create arbitrary index starting from 0  */\n  logIndex: Scalars['Int'];\n  /**  The protocol this transaction belongs to  */\n  protocol: Beanstalk;\n  /**  Season of deposit removed  */\n  season: Scalars['Int'];\n  /**  Timestamp of this event  */\n  timestamp: Scalars['BigInt'];\n  /**  Token removed */\n  token: Scalars['String'];\n};\n\nexport type AddDeposit_Filter = {\n  /** Filter for the block changed event. */\n  _change_block?: InputMaybe<BlockChangedFilter>;\n  account?: InputMaybe<Scalars['String']>;\n  account_contains?: InputMaybe<Scalars['String']>;\n  account_contains_nocase?: InputMaybe<Scalars['String']>;\n  account_ends_with?: InputMaybe<Scalars['String']>;\n  account_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  account_gt?: InputMaybe<Scalars['String']>;\n  account_gte?: InputMaybe<Scalars['String']>;\n  account_in?: InputMaybe<Array<Scalars['String']>>;\n  account_lt?: InputMaybe<Scalars['String']>;\n  account_lte?: InputMaybe<Scalars['String']>;\n  account_not?: InputMaybe<Scalars['String']>;\n  account_not_contains?: InputMaybe<Scalars['String']>;\n  account_not_contains_nocase?: InputMaybe<Scalars['String']>;\n  account_not_ends_with?: InputMaybe<Scalars['String']>;\n  account_not_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  account_not_in?: InputMaybe<Array<Scalars['String']>>;\n  account_not_starts_with?: InputMaybe<Scalars['String']>;\n  account_not_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  account_starts_with?: InputMaybe<Scalars['String']>;\n  account_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  amount?: InputMaybe<Scalars['BigInt']>;\n  amount_gt?: InputMaybe<Scalars['BigInt']>;\n  amount_gte?: InputMaybe<Scalars['BigInt']>;\n  amount_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  amount_lt?: InputMaybe<Scalars['BigInt']>;\n  amount_lte?: InputMaybe<Scalars['BigInt']>;\n  amount_not?: InputMaybe<Scalars['BigInt']>;\n  amount_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  bdv?: InputMaybe<Scalars['BigInt']>;\n  bdv_gt?: InputMaybe<Scalars['BigInt']>;\n  bdv_gte?: InputMaybe<Scalars['BigInt']>;\n  bdv_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  bdv_lt?: InputMaybe<Scalars['BigInt']>;\n  bdv_lte?: InputMaybe<Scalars['BigInt']>;\n  bdv_not?: InputMaybe<Scalars['BigInt']>;\n  bdv_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  blockNumber?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_gt?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_gte?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  blockNumber_lt?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_lte?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_not?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  hash?: InputMaybe<Scalars['String']>;\n  hash_contains?: InputMaybe<Scalars['String']>;\n  hash_contains_nocase?: InputMaybe<Scalars['String']>;\n  hash_ends_with?: InputMaybe<Scalars['String']>;\n  hash_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  hash_gt?: InputMaybe<Scalars['String']>;\n  hash_gte?: InputMaybe<Scalars['String']>;\n  hash_in?: InputMaybe<Array<Scalars['String']>>;\n  hash_lt?: InputMaybe<Scalars['String']>;\n  hash_lte?: InputMaybe<Scalars['String']>;\n  hash_not?: InputMaybe<Scalars['String']>;\n  hash_not_contains?: InputMaybe<Scalars['String']>;\n  hash_not_contains_nocase?: InputMaybe<Scalars['String']>;\n  hash_not_ends_with?: InputMaybe<Scalars['String']>;\n  hash_not_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  hash_not_in?: InputMaybe<Array<Scalars['String']>>;\n  hash_not_starts_with?: InputMaybe<Scalars['String']>;\n  hash_not_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  hash_starts_with?: InputMaybe<Scalars['String']>;\n  hash_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  id?: InputMaybe<Scalars['ID']>;\n  id_gt?: InputMaybe<Scalars['ID']>;\n  id_gte?: InputMaybe<Scalars['ID']>;\n  id_in?: InputMaybe<Array<Scalars['ID']>>;\n  id_lt?: InputMaybe<Scalars['ID']>;\n  id_lte?: InputMaybe<Scalars['ID']>;\n  id_not?: InputMaybe<Scalars['ID']>;\n  id_not_in?: InputMaybe<Array<Scalars['ID']>>;\n  logIndex?: InputMaybe<Scalars['Int']>;\n  logIndex_gt?: InputMaybe<Scalars['Int']>;\n  logIndex_gte?: InputMaybe<Scalars['Int']>;\n  logIndex_in?: InputMaybe<Array<Scalars['Int']>>;\n  logIndex_lt?: InputMaybe<Scalars['Int']>;\n  logIndex_lte?: InputMaybe<Scalars['Int']>;\n  logIndex_not?: InputMaybe<Scalars['Int']>;\n  logIndex_not_in?: InputMaybe<Array<Scalars['Int']>>;\n  protocol?: InputMaybe<Scalars['String']>;\n  protocol_?: InputMaybe<Beanstalk_Filter>;\n  protocol_contains?: InputMaybe<Scalars['String']>;\n  protocol_contains_nocase?: InputMaybe<Scalars['String']>;\n  protocol_ends_with?: InputMaybe<Scalars['String']>;\n  protocol_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  protocol_gt?: InputMaybe<Scalars['String']>;\n  protocol_gte?: InputMaybe<Scalars['String']>;\n  protocol_in?: InputMaybe<Array<Scalars['String']>>;\n  protocol_lt?: InputMaybe<Scalars['String']>;\n  protocol_lte?: InputMaybe<Scalars['String']>;\n  protocol_not?: InputMaybe<Scalars['String']>;\n  protocol_not_contains?: InputMaybe<Scalars['String']>;\n  protocol_not_contains_nocase?: InputMaybe<Scalars['String']>;\n  protocol_not_ends_with?: InputMaybe<Scalars['String']>;\n  protocol_not_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  protocol_not_in?: InputMaybe<Array<Scalars['String']>>;\n  protocol_not_starts_with?: InputMaybe<Scalars['String']>;\n  protocol_not_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  protocol_starts_with?: InputMaybe<Scalars['String']>;\n  protocol_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  season?: InputMaybe<Scalars['Int']>;\n  season_gt?: InputMaybe<Scalars['Int']>;\n  season_gte?: InputMaybe<Scalars['Int']>;\n  season_in?: InputMaybe<Array<Scalars['Int']>>;\n  season_lt?: InputMaybe<Scalars['Int']>;\n  season_lte?: InputMaybe<Scalars['Int']>;\n  season_not?: InputMaybe<Scalars['Int']>;\n  season_not_in?: InputMaybe<Array<Scalars['Int']>>;\n  timestamp?: InputMaybe<Scalars['BigInt']>;\n  timestamp_gt?: InputMaybe<Scalars['BigInt']>;\n  timestamp_gte?: InputMaybe<Scalars['BigInt']>;\n  timestamp_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  timestamp_lt?: InputMaybe<Scalars['BigInt']>;\n  timestamp_lte?: InputMaybe<Scalars['BigInt']>;\n  timestamp_not?: InputMaybe<Scalars['BigInt']>;\n  timestamp_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  token?: InputMaybe<Scalars['String']>;\n  token_contains?: InputMaybe<Scalars['String']>;\n  token_contains_nocase?: InputMaybe<Scalars['String']>;\n  token_ends_with?: InputMaybe<Scalars['String']>;\n  token_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  token_gt?: InputMaybe<Scalars['String']>;\n  token_gte?: InputMaybe<Scalars['String']>;\n  token_in?: InputMaybe<Array<Scalars['String']>>;\n  token_lt?: InputMaybe<Scalars['String']>;\n  token_lte?: InputMaybe<Scalars['String']>;\n  token_not?: InputMaybe<Scalars['String']>;\n  token_not_contains?: InputMaybe<Scalars['String']>;\n  token_not_contains_nocase?: InputMaybe<Scalars['String']>;\n  token_not_ends_with?: InputMaybe<Scalars['String']>;\n  token_not_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  token_not_in?: InputMaybe<Array<Scalars['String']>>;\n  token_not_starts_with?: InputMaybe<Scalars['String']>;\n  token_not_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  token_starts_with?: InputMaybe<Scalars['String']>;\n  token_starts_with_nocase?: InputMaybe<Scalars['String']>;\n};\n\nexport enum AddDeposit_OrderBy {\n  Account = 'account',\n  Amount = 'amount',\n  Bdv = 'bdv',\n  BlockNumber = 'blockNumber',\n  Hash = 'hash',\n  Id = 'id',\n  LogIndex = 'logIndex',\n  Protocol = 'protocol',\n  Season = 'season',\n  Timestamp = 'timestamp',\n  Token = 'token'\n}\n\nexport type Beanstalk = {\n  __typename?: 'Beanstalk';\n  /**  Array of the addresses for all active farmers in the silo  */\n  activeFarmers: Array<Scalars['String']>;\n  /**  Array of the addresses for all farmers that had silo transfers and need stalk/seeds/roots updated  */\n  farmersToUpdate: Array<Scalars['String']>;\n  /**  Field level data  */\n  field: Field;\n  /**  Smart contract address of the protocol's main contract (Factory, Registry, etc)  */\n  id: Scalars['ID'];\n  /**  Last season called  */\n  lastSeason: Scalars['Int'];\n  /**  Timestamp of the latest DiamondCut call  */\n  lastUpgrade: Scalars['BigInt'];\n  /**  Version of the methodology used to compute metrics, loosely based on SemVer format (e.g. 1.0.0)  */\n  methodologyVersion: Scalars['String'];\n  /**  Name of the protocol, including version. e.g. Uniswap v3  */\n  name: Scalars['String'];\n  /**  The blockchain network this subgraph is indexing on  */\n  network: Network;\n  /**  Version of the subgraph schema, in SemVer format (e.g. 1.0.0)  */\n  schemaVersion: Scalars['String'];\n  /**  Season specific data  */\n  seasons: Array<Season>;\n  /**  Silo level data  */\n  silo: Silo;\n  /**  Slug of protocol, including version. e.g. uniswap-v3  */\n  slug: Scalars['String'];\n  /**  Version of the subgraph implementation, in SemVer format (e.g. 1.0.0)  */\n  subgraphVersion: Scalars['String'];\n};\n\n\nexport type BeanstalkSeasonsArgs = {\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<Season_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  where?: InputMaybe<Season_Filter>;\n};\n\nexport type Beanstalk_Filter = {\n  /** Filter for the block changed event. */\n  _change_block?: InputMaybe<BlockChangedFilter>;\n  activeFarmers?: InputMaybe<Array<Scalars['String']>>;\n  activeFarmers_contains?: InputMaybe<Array<Scalars['String']>>;\n  activeFarmers_contains_nocase?: InputMaybe<Array<Scalars['String']>>;\n  activeFarmers_not?: InputMaybe<Array<Scalars['String']>>;\n  activeFarmers_not_contains?: InputMaybe<Array<Scalars['String']>>;\n  activeFarmers_not_contains_nocase?: InputMaybe<Array<Scalars['String']>>;\n  farmersToUpdate?: InputMaybe<Array<Scalars['String']>>;\n  farmersToUpdate_contains?: InputMaybe<Array<Scalars['String']>>;\n  farmersToUpdate_contains_nocase?: InputMaybe<Array<Scalars['String']>>;\n  farmersToUpdate_not?: InputMaybe<Array<Scalars['String']>>;\n  farmersToUpdate_not_contains?: InputMaybe<Array<Scalars['String']>>;\n  farmersToUpdate_not_contains_nocase?: InputMaybe<Array<Scalars['String']>>;\n  field_?: InputMaybe<Field_Filter>;\n  id?: InputMaybe<Scalars['ID']>;\n  id_gt?: InputMaybe<Scalars['ID']>;\n  id_gte?: InputMaybe<Scalars['ID']>;\n  id_in?: InputMaybe<Array<Scalars['ID']>>;\n  id_lt?: InputMaybe<Scalars['ID']>;\n  id_lte?: InputMaybe<Scalars['ID']>;\n  id_not?: InputMaybe<Scalars['ID']>;\n  id_not_in?: InputMaybe<Array<Scalars['ID']>>;\n  lastSeason?: InputMaybe<Scalars['Int']>;\n  lastSeason_gt?: InputMaybe<Scalars['Int']>;\n  lastSeason_gte?: InputMaybe<Scalars['Int']>;\n  lastSeason_in?: InputMaybe<Array<Scalars['Int']>>;\n  lastSeason_lt?: InputMaybe<Scalars['Int']>;\n  lastSeason_lte?: InputMaybe<Scalars['Int']>;\n  lastSeason_not?: InputMaybe<Scalars['Int']>;\n  lastSeason_not_in?: InputMaybe<Array<Scalars['Int']>>;\n  lastUpgrade?: InputMaybe<Scalars['BigInt']>;\n  lastUpgrade_gt?: InputMaybe<Scalars['BigInt']>;\n  lastUpgrade_gte?: InputMaybe<Scalars['BigInt']>;\n  lastUpgrade_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  lastUpgrade_lt?: InputMaybe<Scalars['BigInt']>;\n  lastUpgrade_lte?: InputMaybe<Scalars['BigInt']>;\n  lastUpgrade_not?: InputMaybe<Scalars['BigInt']>;\n  lastUpgrade_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  methodologyVersion?: InputMaybe<Scalars['String']>;\n  methodologyVersion_contains?: InputMaybe<Scalars['String']>;\n  methodologyVersion_contains_nocase?: InputMaybe<Scalars['String']>;\n  methodologyVersion_ends_with?: InputMaybe<Scalars['String']>;\n  methodologyVersion_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  methodologyVersion_gt?: InputMaybe<Scalars['String']>;\n  methodologyVersion_gte?: InputMaybe<Scalars['String']>;\n  methodologyVersion_in?: InputMaybe<Array<Scalars['String']>>;\n  methodologyVersion_lt?: InputMaybe<Scalars['String']>;\n  methodologyVersion_lte?: InputMaybe<Scalars['String']>;\n  methodologyVersion_not?: InputMaybe<Scalars['String']>;\n  methodologyVersion_not_contains?: InputMaybe<Scalars['String']>;\n  methodologyVersion_not_contains_nocase?: InputMaybe<Scalars['String']>;\n  methodologyVersion_not_ends_with?: InputMaybe<Scalars['String']>;\n  methodologyVersion_not_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  methodologyVersion_not_in?: InputMaybe<Array<Scalars['String']>>;\n  methodologyVersion_not_starts_with?: InputMaybe<Scalars['String']>;\n  methodologyVersion_not_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  methodologyVersion_starts_with?: InputMaybe<Scalars['String']>;\n  methodologyVersion_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  name?: InputMaybe<Scalars['String']>;\n  name_contains?: InputMaybe<Scalars['String']>;\n  name_contains_nocase?: InputMaybe<Scalars['String']>;\n  name_ends_with?: InputMaybe<Scalars['String']>;\n  name_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  name_gt?: InputMaybe<Scalars['String']>;\n  name_gte?: InputMaybe<Scalars['String']>;\n  name_in?: InputMaybe<Array<Scalars['String']>>;\n  name_lt?: InputMaybe<Scalars['String']>;\n  name_lte?: InputMaybe<Scalars['String']>;\n  name_not?: InputMaybe<Scalars['String']>;\n  name_not_contains?: InputMaybe<Scalars['String']>;\n  name_not_contains_nocase?: InputMaybe<Scalars['String']>;\n  name_not_ends_with?: InputMaybe<Scalars['String']>;\n  name_not_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  name_not_in?: InputMaybe<Array<Scalars['String']>>;\n  name_not_starts_with?: InputMaybe<Scalars['String']>;\n  name_not_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  name_starts_with?: InputMaybe<Scalars['String']>;\n  name_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  network?: InputMaybe<Network>;\n  network_in?: InputMaybe<Array<Network>>;\n  network_not?: InputMaybe<Network>;\n  network_not_in?: InputMaybe<Array<Network>>;\n  schemaVersion?: InputMaybe<Scalars['String']>;\n  schemaVersion_contains?: InputMaybe<Scalars['String']>;\n  schemaVersion_contains_nocase?: InputMaybe<Scalars['String']>;\n  schemaVersion_ends_with?: InputMaybe<Scalars['String']>;\n  schemaVersion_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  schemaVersion_gt?: InputMaybe<Scalars['String']>;\n  schemaVersion_gte?: InputMaybe<Scalars['String']>;\n  schemaVersion_in?: InputMaybe<Array<Scalars['String']>>;\n  schemaVersion_lt?: InputMaybe<Scalars['String']>;\n  schemaVersion_lte?: InputMaybe<Scalars['String']>;\n  schemaVersion_not?: InputMaybe<Scalars['String']>;\n  schemaVersion_not_contains?: InputMaybe<Scalars['String']>;\n  schemaVersion_not_contains_nocase?: InputMaybe<Scalars['String']>;\n  schemaVersion_not_ends_with?: InputMaybe<Scalars['String']>;\n  schemaVersion_not_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  schemaVersion_not_in?: InputMaybe<Array<Scalars['String']>>;\n  schemaVersion_not_starts_with?: InputMaybe<Scalars['String']>;\n  schemaVersion_not_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  schemaVersion_starts_with?: InputMaybe<Scalars['String']>;\n  schemaVersion_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  seasons_?: InputMaybe<Season_Filter>;\n  silo_?: InputMaybe<Silo_Filter>;\n  slug?: InputMaybe<Scalars['String']>;\n  slug_contains?: InputMaybe<Scalars['String']>;\n  slug_contains_nocase?: InputMaybe<Scalars['String']>;\n  slug_ends_with?: InputMaybe<Scalars['String']>;\n  slug_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  slug_gt?: InputMaybe<Scalars['String']>;\n  slug_gte?: InputMaybe<Scalars['String']>;\n  slug_in?: InputMaybe<Array<Scalars['String']>>;\n  slug_lt?: InputMaybe<Scalars['String']>;\n  slug_lte?: InputMaybe<Scalars['String']>;\n  slug_not?: InputMaybe<Scalars['String']>;\n  slug_not_contains?: InputMaybe<Scalars['String']>;\n  slug_not_contains_nocase?: InputMaybe<Scalars['String']>;\n  slug_not_ends_with?: InputMaybe<Scalars['String']>;\n  slug_not_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  slug_not_in?: InputMaybe<Array<Scalars['String']>>;\n  slug_not_starts_with?: InputMaybe<Scalars['String']>;\n  slug_not_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  slug_starts_with?: InputMaybe<Scalars['String']>;\n  slug_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  subgraphVersion?: InputMaybe<Scalars['String']>;\n  subgraphVersion_contains?: InputMaybe<Scalars['String']>;\n  subgraphVersion_contains_nocase?: InputMaybe<Scalars['String']>;\n  subgraphVersion_ends_with?: InputMaybe<Scalars['String']>;\n  subgraphVersion_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  subgraphVersion_gt?: InputMaybe<Scalars['String']>;\n  subgraphVersion_gte?: InputMaybe<Scalars['String']>;\n  subgraphVersion_in?: InputMaybe<Array<Scalars['String']>>;\n  subgraphVersion_lt?: InputMaybe<Scalars['String']>;\n  subgraphVersion_lte?: InputMaybe<Scalars['String']>;\n  subgraphVersion_not?: InputMaybe<Scalars['String']>;\n  subgraphVersion_not_contains?: InputMaybe<Scalars['String']>;\n  subgraphVersion_not_contains_nocase?: InputMaybe<Scalars['String']>;\n  subgraphVersion_not_ends_with?: InputMaybe<Scalars['String']>;\n  subgraphVersion_not_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  subgraphVersion_not_in?: InputMaybe<Array<Scalars['String']>>;\n  subgraphVersion_not_starts_with?: InputMaybe<Scalars['String']>;\n  subgraphVersion_not_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  subgraphVersion_starts_with?: InputMaybe<Scalars['String']>;\n  subgraphVersion_starts_with_nocase?: InputMaybe<Scalars['String']>;\n};\n\nexport enum Beanstalk_OrderBy {\n  ActiveFarmers = 'activeFarmers',\n  FarmersToUpdate = 'farmersToUpdate',\n  Field = 'field',\n  Id = 'id',\n  LastSeason = 'lastSeason',\n  LastUpgrade = 'lastUpgrade',\n  MethodologyVersion = 'methodologyVersion',\n  Name = 'name',\n  Network = 'network',\n  SchemaVersion = 'schemaVersion',\n  Seasons = 'seasons',\n  Silo = 'silo',\n  Slug = 'slug',\n  SubgraphVersion = 'subgraphVersion'\n}\n\nexport type BlockChangedFilter = {\n  number_gte: Scalars['Int'];\n};\n\nexport type Block_Height = {\n  hash?: InputMaybe<Scalars['Bytes']>;\n  number?: InputMaybe<Scalars['Int']>;\n  number_gte?: InputMaybe<Scalars['Int']>;\n};\n\nexport type Chop = SiloEvent & {\n  __typename?: 'Chop';\n  /**  Amount being chopped */\n  amount: Scalars['BigInt'];\n  /**  Block number of this event  */\n  blockNumber: Scalars['BigInt'];\n  /**  Address chopping  */\n  farmer: Scalars['String'];\n  /**  Transaction hash of the transaction that emitted this event  */\n  hash: Scalars['String'];\n  /** chop-{ Transaction hash }-{ Log index } */\n  id: Scalars['ID'];\n  /**  Event log index. For transactions that don't emit event, create arbitrary index starting from 0  */\n  logIndex: Scalars['Int'];\n  /**  The protocol this transaction belongs to  */\n  protocol: Beanstalk;\n  /**  Timestamp of this event  */\n  timestamp: Scalars['BigInt'];\n  /**  Underlying token  */\n  underlying: Token;\n  /**  Unripe token being chopped  */\n  unripe: Token;\n};\n\nexport type Chop_Filter = {\n  /** Filter for the block changed event. */\n  _change_block?: InputMaybe<BlockChangedFilter>;\n  amount?: InputMaybe<Scalars['BigInt']>;\n  amount_gt?: InputMaybe<Scalars['BigInt']>;\n  amount_gte?: InputMaybe<Scalars['BigInt']>;\n  amount_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  amount_lt?: InputMaybe<Scalars['BigInt']>;\n  amount_lte?: InputMaybe<Scalars['BigInt']>;\n  amount_not?: InputMaybe<Scalars['BigInt']>;\n  amount_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  blockNumber?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_gt?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_gte?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  blockNumber_lt?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_lte?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_not?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  farmer?: InputMaybe<Scalars['String']>;\n  farmer_contains?: InputMaybe<Scalars['String']>;\n  farmer_contains_nocase?: InputMaybe<Scalars['String']>;\n  farmer_ends_with?: InputMaybe<Scalars['String']>;\n  farmer_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  farmer_gt?: InputMaybe<Scalars['String']>;\n  farmer_gte?: InputMaybe<Scalars['String']>;\n  farmer_in?: InputMaybe<Array<Scalars['String']>>;\n  farmer_lt?: InputMaybe<Scalars['String']>;\n  farmer_lte?: InputMaybe<Scalars['String']>;\n  farmer_not?: InputMaybe<Scalars['String']>;\n  farmer_not_contains?: InputMaybe<Scalars['String']>;\n  farmer_not_contains_nocase?: InputMaybe<Scalars['String']>;\n  farmer_not_ends_with?: InputMaybe<Scalars['String']>;\n  farmer_not_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  farmer_not_in?: InputMaybe<Array<Scalars['String']>>;\n  farmer_not_starts_with?: InputMaybe<Scalars['String']>;\n  farmer_not_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  farmer_starts_with?: InputMaybe<Scalars['String']>;\n  farmer_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  hash?: InputMaybe<Scalars['String']>;\n  hash_contains?: InputMaybe<Scalars['String']>;\n  hash_contains_nocase?: InputMaybe<Scalars['String']>;\n  hash_ends_with?: InputMaybe<Scalars['String']>;\n  hash_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  hash_gt?: InputMaybe<Scalars['String']>;\n  hash_gte?: InputMaybe<Scalars['String']>;\n  hash_in?: InputMaybe<Array<Scalars['String']>>;\n  hash_lt?: InputMaybe<Scalars['String']>;\n  hash_lte?: InputMaybe<Scalars['String']>;\n  hash_not?: InputMaybe<Scalars['String']>;\n  hash_not_contains?: InputMaybe<Scalars['String']>;\n  hash_not_contains_nocase?: InputMaybe<Scalars['String']>;\n  hash_not_ends_with?: InputMaybe<Scalars['String']>;\n  hash_not_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  hash_not_in?: InputMaybe<Array<Scalars['String']>>;\n  hash_not_starts_with?: InputMaybe<Scalars['String']>;\n  hash_not_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  hash_starts_with?: InputMaybe<Scalars['String']>;\n  hash_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  id?: InputMaybe<Scalars['ID']>;\n  id_gt?: InputMaybe<Scalars['ID']>;\n  id_gte?: InputMaybe<Scalars['ID']>;\n  id_in?: InputMaybe<Array<Scalars['ID']>>;\n  id_lt?: InputMaybe<Scalars['ID']>;\n  id_lte?: InputMaybe<Scalars['ID']>;\n  id_not?: InputMaybe<Scalars['ID']>;\n  id_not_in?: InputMaybe<Array<Scalars['ID']>>;\n  logIndex?: InputMaybe<Scalars['Int']>;\n  logIndex_gt?: InputMaybe<Scalars['Int']>;\n  logIndex_gte?: InputMaybe<Scalars['Int']>;\n  logIndex_in?: InputMaybe<Array<Scalars['Int']>>;\n  logIndex_lt?: InputMaybe<Scalars['Int']>;\n  logIndex_lte?: InputMaybe<Scalars['Int']>;\n  logIndex_not?: InputMaybe<Scalars['Int']>;\n  logIndex_not_in?: InputMaybe<Array<Scalars['Int']>>;\n  protocol?: InputMaybe<Scalars['String']>;\n  protocol_?: InputMaybe<Beanstalk_Filter>;\n  protocol_contains?: InputMaybe<Scalars['String']>;\n  protocol_contains_nocase?: InputMaybe<Scalars['String']>;\n  protocol_ends_with?: InputMaybe<Scalars['String']>;\n  protocol_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  protocol_gt?: InputMaybe<Scalars['String']>;\n  protocol_gte?: InputMaybe<Scalars['String']>;\n  protocol_in?: InputMaybe<Array<Scalars['String']>>;\n  protocol_lt?: InputMaybe<Scalars['String']>;\n  protocol_lte?: InputMaybe<Scalars['String']>;\n  protocol_not?: InputMaybe<Scalars['String']>;\n  protocol_not_contains?: InputMaybe<Scalars['String']>;\n  protocol_not_contains_nocase?: InputMaybe<Scalars['String']>;\n  protocol_not_ends_with?: InputMaybe<Scalars['String']>;\n  protocol_not_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  protocol_not_in?: InputMaybe<Array<Scalars['String']>>;\n  protocol_not_starts_with?: InputMaybe<Scalars['String']>;\n  protocol_not_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  protocol_starts_with?: InputMaybe<Scalars['String']>;\n  protocol_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  timestamp?: InputMaybe<Scalars['BigInt']>;\n  timestamp_gt?: InputMaybe<Scalars['BigInt']>;\n  timestamp_gte?: InputMaybe<Scalars['BigInt']>;\n  timestamp_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  timestamp_lt?: InputMaybe<Scalars['BigInt']>;\n  timestamp_lte?: InputMaybe<Scalars['BigInt']>;\n  timestamp_not?: InputMaybe<Scalars['BigInt']>;\n  timestamp_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  underlying?: InputMaybe<Scalars['String']>;\n  underlying_?: InputMaybe<Token_Filter>;\n  underlying_contains?: InputMaybe<Scalars['String']>;\n  underlying_contains_nocase?: InputMaybe<Scalars['String']>;\n  underlying_ends_with?: InputMaybe<Scalars['String']>;\n  underlying_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  underlying_gt?: InputMaybe<Scalars['String']>;\n  underlying_gte?: InputMaybe<Scalars['String']>;\n  underlying_in?: InputMaybe<Array<Scalars['String']>>;\n  underlying_lt?: InputMaybe<Scalars['String']>;\n  underlying_lte?: InputMaybe<Scalars['String']>;\n  underlying_not?: InputMaybe<Scalars['String']>;\n  underlying_not_contains?: InputMaybe<Scalars['String']>;\n  underlying_not_contains_nocase?: InputMaybe<Scalars['String']>;\n  underlying_not_ends_with?: InputMaybe<Scalars['String']>;\n  underlying_not_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  underlying_not_in?: InputMaybe<Array<Scalars['String']>>;\n  underlying_not_starts_with?: InputMaybe<Scalars['String']>;\n  underlying_not_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  underlying_starts_with?: InputMaybe<Scalars['String']>;\n  underlying_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  unripe?: InputMaybe<Scalars['String']>;\n  unripe_?: InputMaybe<Token_Filter>;\n  unripe_contains?: InputMaybe<Scalars['String']>;\n  unripe_contains_nocase?: InputMaybe<Scalars['String']>;\n  unripe_ends_with?: InputMaybe<Scalars['String']>;\n  unripe_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  unripe_gt?: InputMaybe<Scalars['String']>;\n  unripe_gte?: InputMaybe<Scalars['String']>;\n  unripe_in?: InputMaybe<Array<Scalars['String']>>;\n  unripe_lt?: InputMaybe<Scalars['String']>;\n  unripe_lte?: InputMaybe<Scalars['String']>;\n  unripe_not?: InputMaybe<Scalars['String']>;\n  unripe_not_contains?: InputMaybe<Scalars['String']>;\n  unripe_not_contains_nocase?: InputMaybe<Scalars['String']>;\n  unripe_not_ends_with?: InputMaybe<Scalars['String']>;\n  unripe_not_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  unripe_not_in?: InputMaybe<Array<Scalars['String']>>;\n  unripe_not_starts_with?: InputMaybe<Scalars['String']>;\n  unripe_not_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  unripe_starts_with?: InputMaybe<Scalars['String']>;\n  unripe_starts_with_nocase?: InputMaybe<Scalars['String']>;\n};\n\nexport enum Chop_OrderBy {\n  Amount = 'amount',\n  BlockNumber = 'blockNumber',\n  Farmer = 'farmer',\n  Hash = 'hash',\n  Id = 'id',\n  LogIndex = 'logIndex',\n  Protocol = 'protocol',\n  Timestamp = 'timestamp',\n  Underlying = 'underlying',\n  Unripe = 'unripe'\n}\n\nexport type DewhitelistToken = SiloEvent & {\n  __typename?: 'DewhitelistToken';\n  /**  Block number of this event  */\n  blockNumber: Scalars['BigInt'];\n  /**  Transaction hash of the transaction that emitted this event  */\n  hash: Scalars['String'];\n  /** dewhitelistToken-{ Transaction hash }-{ Log index } */\n  id: Scalars['ID'];\n  /**  Event log index. For transactions that don't emit event, create arbitrary index starting from 0  */\n  logIndex: Scalars['Int'];\n  /**  The protocol this transaction belongs to  */\n  protocol: Beanstalk;\n  /**  Timestamp of this event  */\n  timestamp: Scalars['BigInt'];\n  /** Token address dewhitelisted */\n  token: Scalars['String'];\n};\n\nexport type DewhitelistToken_Filter = {\n  /** Filter for the block changed event. */\n  _change_block?: InputMaybe<BlockChangedFilter>;\n  blockNumber?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_gt?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_gte?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  blockNumber_lt?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_lte?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_not?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  hash?: InputMaybe<Scalars['String']>;\n  hash_contains?: InputMaybe<Scalars['String']>;\n  hash_contains_nocase?: InputMaybe<Scalars['String']>;\n  hash_ends_with?: InputMaybe<Scalars['String']>;\n  hash_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  hash_gt?: InputMaybe<Scalars['String']>;\n  hash_gte?: InputMaybe<Scalars['String']>;\n  hash_in?: InputMaybe<Array<Scalars['String']>>;\n  hash_lt?: InputMaybe<Scalars['String']>;\n  hash_lte?: InputMaybe<Scalars['String']>;\n  hash_not?: InputMaybe<Scalars['String']>;\n  hash_not_contains?: InputMaybe<Scalars['String']>;\n  hash_not_contains_nocase?: InputMaybe<Scalars['String']>;\n  hash_not_ends_with?: InputMaybe<Scalars['String']>;\n  hash_not_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  hash_not_in?: InputMaybe<Array<Scalars['String']>>;\n  hash_not_starts_with?: InputMaybe<Scalars['String']>;\n  hash_not_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  hash_starts_with?: InputMaybe<Scalars['String']>;\n  hash_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  id?: InputMaybe<Scalars['ID']>;\n  id_gt?: InputMaybe<Scalars['ID']>;\n  id_gte?: InputMaybe<Scalars['ID']>;\n  id_in?: InputMaybe<Array<Scalars['ID']>>;\n  id_lt?: InputMaybe<Scalars['ID']>;\n  id_lte?: InputMaybe<Scalars['ID']>;\n  id_not?: InputMaybe<Scalars['ID']>;\n  id_not_in?: InputMaybe<Array<Scalars['ID']>>;\n  logIndex?: InputMaybe<Scalars['Int']>;\n  logIndex_gt?: InputMaybe<Scalars['Int']>;\n  logIndex_gte?: InputMaybe<Scalars['Int']>;\n  logIndex_in?: InputMaybe<Array<Scalars['Int']>>;\n  logIndex_lt?: InputMaybe<Scalars['Int']>;\n  logIndex_lte?: InputMaybe<Scalars['Int']>;\n  logIndex_not?: InputMaybe<Scalars['Int']>;\n  logIndex_not_in?: InputMaybe<Array<Scalars['Int']>>;\n  protocol?: InputMaybe<Scalars['String']>;\n  protocol_?: InputMaybe<Beanstalk_Filter>;\n  protocol_contains?: InputMaybe<Scalars['String']>;\n  protocol_contains_nocase?: InputMaybe<Scalars['String']>;\n  protocol_ends_with?: InputMaybe<Scalars['String']>;\n  protocol_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  protocol_gt?: InputMaybe<Scalars['String']>;\n  protocol_gte?: InputMaybe<Scalars['String']>;\n  protocol_in?: InputMaybe<Array<Scalars['String']>>;\n  protocol_lt?: InputMaybe<Scalars['String']>;\n  protocol_lte?: InputMaybe<Scalars['String']>;\n  protocol_not?: InputMaybe<Scalars['String']>;\n  protocol_not_contains?: InputMaybe<Scalars['String']>;\n  protocol_not_contains_nocase?: InputMaybe<Scalars['String']>;\n  protocol_not_ends_with?: InputMaybe<Scalars['String']>;\n  protocol_not_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  protocol_not_in?: InputMaybe<Array<Scalars['String']>>;\n  protocol_not_starts_with?: InputMaybe<Scalars['String']>;\n  protocol_not_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  protocol_starts_with?: InputMaybe<Scalars['String']>;\n  protocol_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  timestamp?: InputMaybe<Scalars['BigInt']>;\n  timestamp_gt?: InputMaybe<Scalars['BigInt']>;\n  timestamp_gte?: InputMaybe<Scalars['BigInt']>;\n  timestamp_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  timestamp_lt?: InputMaybe<Scalars['BigInt']>;\n  timestamp_lte?: InputMaybe<Scalars['BigInt']>;\n  timestamp_not?: InputMaybe<Scalars['BigInt']>;\n  timestamp_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  token?: InputMaybe<Scalars['String']>;\n  token_contains?: InputMaybe<Scalars['String']>;\n  token_contains_nocase?: InputMaybe<Scalars['String']>;\n  token_ends_with?: InputMaybe<Scalars['String']>;\n  token_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  token_gt?: InputMaybe<Scalars['String']>;\n  token_gte?: InputMaybe<Scalars['String']>;\n  token_in?: InputMaybe<Array<Scalars['String']>>;\n  token_lt?: InputMaybe<Scalars['String']>;\n  token_lte?: InputMaybe<Scalars['String']>;\n  token_not?: InputMaybe<Scalars['String']>;\n  token_not_contains?: InputMaybe<Scalars['String']>;\n  token_not_contains_nocase?: InputMaybe<Scalars['String']>;\n  token_not_ends_with?: InputMaybe<Scalars['String']>;\n  token_not_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  token_not_in?: InputMaybe<Array<Scalars['String']>>;\n  token_not_starts_with?: InputMaybe<Scalars['String']>;\n  token_not_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  token_starts_with?: InputMaybe<Scalars['String']>;\n  token_starts_with_nocase?: InputMaybe<Scalars['String']>;\n};\n\nexport enum DewhitelistToken_OrderBy {\n  BlockNumber = 'blockNumber',\n  Hash = 'hash',\n  Id = 'id',\n  LogIndex = 'logIndex',\n  Protocol = 'protocol',\n  Timestamp = 'timestamp',\n  Token = 'token'\n}\n\n/**\n * An event is any user action that occurs in a protocol. Generally, they are Ethereum events\n * emitted by a function in the smart contracts, stored in transaction receipts as event logs.\n * However, some user actions of interest are function calls that don't emit events. For example,\n * the deposit and withdraw functions in Yearn do not emit any events. In our subgraphs, we still\n * store them as events, although they are not technically Ethereum events emitted by smart\n * contracts.\n *\n */\nexport type Event = {\n  /**  Block number of this event  */\n  blockNumber: Scalars['BigInt'];\n  /**  Transaction hash of the transaction that emitted this event  */\n  hash: Scalars['String'];\n  /**  { Event type }-{ Transaction hash }-{ Log index }  */\n  id: Scalars['ID'];\n  /**  Event log index. For transactions that don't emit event, create arbitrary index starting from 0  */\n  logIndex: Scalars['Int'];\n  /**  The protocol this transaction belongs to  */\n  protocol: Beanstalk;\n  /**  Timestamp of this event  */\n  timestamp: Scalars['BigInt'];\n};\n\nexport type Event_Filter = {\n  /** Filter for the block changed event. */\n  _change_block?: InputMaybe<BlockChangedFilter>;\n  blockNumber?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_gt?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_gte?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  blockNumber_lt?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_lte?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_not?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  hash?: InputMaybe<Scalars['String']>;\n  hash_contains?: InputMaybe<Scalars['String']>;\n  hash_contains_nocase?: InputMaybe<Scalars['String']>;\n  hash_ends_with?: InputMaybe<Scalars['String']>;\n  hash_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  hash_gt?: InputMaybe<Scalars['String']>;\n  hash_gte?: InputMaybe<Scalars['String']>;\n  hash_in?: InputMaybe<Array<Scalars['String']>>;\n  hash_lt?: InputMaybe<Scalars['String']>;\n  hash_lte?: InputMaybe<Scalars['String']>;\n  hash_not?: InputMaybe<Scalars['String']>;\n  hash_not_contains?: InputMaybe<Scalars['String']>;\n  hash_not_contains_nocase?: InputMaybe<Scalars['String']>;\n  hash_not_ends_with?: InputMaybe<Scalars['String']>;\n  hash_not_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  hash_not_in?: InputMaybe<Array<Scalars['String']>>;\n  hash_not_starts_with?: InputMaybe<Scalars['String']>;\n  hash_not_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  hash_starts_with?: InputMaybe<Scalars['String']>;\n  hash_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  id?: InputMaybe<Scalars['ID']>;\n  id_gt?: InputMaybe<Scalars['ID']>;\n  id_gte?: InputMaybe<Scalars['ID']>;\n  id_in?: InputMaybe<Array<Scalars['ID']>>;\n  id_lt?: InputMaybe<Scalars['ID']>;\n  id_lte?: InputMaybe<Scalars['ID']>;\n  id_not?: InputMaybe<Scalars['ID']>;\n  id_not_in?: InputMaybe<Array<Scalars['ID']>>;\n  logIndex?: InputMaybe<Scalars['Int']>;\n  logIndex_gt?: InputMaybe<Scalars['Int']>;\n  logIndex_gte?: InputMaybe<Scalars['Int']>;\n  logIndex_in?: InputMaybe<Array<Scalars['Int']>>;\n  logIndex_lt?: InputMaybe<Scalars['Int']>;\n  logIndex_lte?: InputMaybe<Scalars['Int']>;\n  logIndex_not?: InputMaybe<Scalars['Int']>;\n  logIndex_not_in?: InputMaybe<Array<Scalars['Int']>>;\n  protocol?: InputMaybe<Scalars['String']>;\n  protocol_?: InputMaybe<Beanstalk_Filter>;\n  protocol_contains?: InputMaybe<Scalars['String']>;\n  protocol_contains_nocase?: InputMaybe<Scalars['String']>;\n  protocol_ends_with?: InputMaybe<Scalars['String']>;\n  protocol_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  protocol_gt?: InputMaybe<Scalars['String']>;\n  protocol_gte?: InputMaybe<Scalars['String']>;\n  protocol_in?: InputMaybe<Array<Scalars['String']>>;\n  protocol_lt?: InputMaybe<Scalars['String']>;\n  protocol_lte?: InputMaybe<Scalars['String']>;\n  protocol_not?: InputMaybe<Scalars['String']>;\n  protocol_not_contains?: InputMaybe<Scalars['String']>;\n  protocol_not_contains_nocase?: InputMaybe<Scalars['String']>;\n  protocol_not_ends_with?: InputMaybe<Scalars['String']>;\n  protocol_not_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  protocol_not_in?: InputMaybe<Array<Scalars['String']>>;\n  protocol_not_starts_with?: InputMaybe<Scalars['String']>;\n  protocol_not_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  protocol_starts_with?: InputMaybe<Scalars['String']>;\n  protocol_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  timestamp?: InputMaybe<Scalars['BigInt']>;\n  timestamp_gt?: InputMaybe<Scalars['BigInt']>;\n  timestamp_gte?: InputMaybe<Scalars['BigInt']>;\n  timestamp_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  timestamp_lt?: InputMaybe<Scalars['BigInt']>;\n  timestamp_lte?: InputMaybe<Scalars['BigInt']>;\n  timestamp_not?: InputMaybe<Scalars['BigInt']>;\n  timestamp_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n};\n\nexport enum Event_OrderBy {\n  BlockNumber = 'blockNumber',\n  Hash = 'hash',\n  Id = 'id',\n  LogIndex = 'logIndex',\n  Protocol = 'protocol',\n  Timestamp = 'timestamp'\n}\n\nexport type Farmer = {\n  __typename?: 'Farmer';\n  deposits: Array<SiloDeposit>;\n  fertilizers: Array<FertilizerBalance>;\n  field?: Maybe<Field>;\n  id: Scalars['ID'];\n  listings: Array<PodListing>;\n  orders: Array<PodOrder>;\n  plots: Array<Plot>;\n  silo?: Maybe<Silo>;\n  sown: Scalars['Boolean'];\n  withdraws: Array<SiloWithdraw>;\n};\n\n\nexport type FarmerDepositsArgs = {\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<SiloDeposit_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  where?: InputMaybe<SiloDeposit_Filter>;\n};\n\n\nexport type FarmerFertilizersArgs = {\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<FertilizerBalance_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  where?: InputMaybe<FertilizerBalance_Filter>;\n};\n\n\nexport type FarmerListingsArgs = {\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<PodListing_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  where?: InputMaybe<PodListing_Filter>;\n};\n\n\nexport type FarmerOrdersArgs = {\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<PodOrder_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  where?: InputMaybe<PodOrder_Filter>;\n};\n\n\nexport type FarmerPlotsArgs = {\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<Plot_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  where?: InputMaybe<Plot_Filter>;\n};\n\n\nexport type FarmerWithdrawsArgs = {\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<SiloWithdraw_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  where?: InputMaybe<SiloWithdraw_Filter>;\n};\n\nexport type Farmer_Filter = {\n  /** Filter for the block changed event. */\n  _change_block?: InputMaybe<BlockChangedFilter>;\n  deposits_?: InputMaybe<SiloDeposit_Filter>;\n  fertilizers_?: InputMaybe<FertilizerBalance_Filter>;\n  field_?: InputMaybe<Field_Filter>;\n  id?: InputMaybe<Scalars['ID']>;\n  id_gt?: InputMaybe<Scalars['ID']>;\n  id_gte?: InputMaybe<Scalars['ID']>;\n  id_in?: InputMaybe<Array<Scalars['ID']>>;\n  id_lt?: InputMaybe<Scalars['ID']>;\n  id_lte?: InputMaybe<Scalars['ID']>;\n  id_not?: InputMaybe<Scalars['ID']>;\n  id_not_in?: InputMaybe<Array<Scalars['ID']>>;\n  listings_?: InputMaybe<PodListing_Filter>;\n  orders_?: InputMaybe<PodOrder_Filter>;\n  plots_?: InputMaybe<Plot_Filter>;\n  silo_?: InputMaybe<Silo_Filter>;\n  sown?: InputMaybe<Scalars['Boolean']>;\n  sown_in?: InputMaybe<Array<Scalars['Boolean']>>;\n  sown_not?: InputMaybe<Scalars['Boolean']>;\n  sown_not_in?: InputMaybe<Array<Scalars['Boolean']>>;\n  withdraws_?: InputMaybe<SiloWithdraw_Filter>;\n};\n\nexport enum Farmer_OrderBy {\n  Deposits = 'deposits',\n  Fertilizers = 'fertilizers',\n  Field = 'field',\n  Id = 'id',\n  Listings = 'listings',\n  Orders = 'orders',\n  Plots = 'plots',\n  Silo = 'silo',\n  Sown = 'sown',\n  Withdraws = 'withdraws'\n}\n\nexport type Fertilizer = {\n  __typename?: 'Fertilizer';\n  id: Scalars['ID'];\n  tokens: Array<FertilizerToken>;\n  totalSupply: Scalars['BigInt'];\n};\n\n\nexport type FertilizerTokensArgs = {\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<FertilizerToken_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  where?: InputMaybe<FertilizerToken_Filter>;\n};\n\nexport type FertilizerBalance = {\n  __typename?: 'FertilizerBalance';\n  amount: Scalars['BigInt'];\n  farmer: Farmer;\n  fertilizerToken: FertilizerToken;\n  id: Scalars['ID'];\n};\n\nexport type FertilizerBalance_Filter = {\n  /** Filter for the block changed event. */\n  _change_block?: InputMaybe<BlockChangedFilter>;\n  amount?: InputMaybe<Scalars['BigInt']>;\n  amount_gt?: InputMaybe<Scalars['BigInt']>;\n  amount_gte?: InputMaybe<Scalars['BigInt']>;\n  amount_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  amount_lt?: InputMaybe<Scalars['BigInt']>;\n  amount_lte?: InputMaybe<Scalars['BigInt']>;\n  amount_not?: InputMaybe<Scalars['BigInt']>;\n  amount_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  farmer?: InputMaybe<Scalars['String']>;\n  farmer_?: InputMaybe<Farmer_Filter>;\n  farmer_contains?: InputMaybe<Scalars['String']>;\n  farmer_contains_nocase?: InputMaybe<Scalars['String']>;\n  farmer_ends_with?: InputMaybe<Scalars['String']>;\n  farmer_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  farmer_gt?: InputMaybe<Scalars['String']>;\n  farmer_gte?: InputMaybe<Scalars['String']>;\n  farmer_in?: InputMaybe<Array<Scalars['String']>>;\n  farmer_lt?: InputMaybe<Scalars['String']>;\n  farmer_lte?: InputMaybe<Scalars['String']>;\n  farmer_not?: InputMaybe<Scalars['String']>;\n  farmer_not_contains?: InputMaybe<Scalars['String']>;\n  farmer_not_contains_nocase?: InputMaybe<Scalars['String']>;\n  farmer_not_ends_with?: InputMaybe<Scalars['String']>;\n  farmer_not_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  farmer_not_in?: InputMaybe<Array<Scalars['String']>>;\n  farmer_not_starts_with?: InputMaybe<Scalars['String']>;\n  farmer_not_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  farmer_starts_with?: InputMaybe<Scalars['String']>;\n  farmer_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  fertilizerToken?: InputMaybe<Scalars['String']>;\n  fertilizerToken_?: InputMaybe<FertilizerToken_Filter>;\n  fertilizerToken_contains?: InputMaybe<Scalars['String']>;\n  fertilizerToken_contains_nocase?: InputMaybe<Scalars['String']>;\n  fertilizerToken_ends_with?: InputMaybe<Scalars['String']>;\n  fertilizerToken_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  fertilizerToken_gt?: InputMaybe<Scalars['String']>;\n  fertilizerToken_gte?: InputMaybe<Scalars['String']>;\n  fertilizerToken_in?: InputMaybe<Array<Scalars['String']>>;\n  fertilizerToken_lt?: InputMaybe<Scalars['String']>;\n  fertilizerToken_lte?: InputMaybe<Scalars['String']>;\n  fertilizerToken_not?: InputMaybe<Scalars['String']>;\n  fertilizerToken_not_contains?: InputMaybe<Scalars['String']>;\n  fertilizerToken_not_contains_nocase?: InputMaybe<Scalars['String']>;\n  fertilizerToken_not_ends_with?: InputMaybe<Scalars['String']>;\n  fertilizerToken_not_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  fertilizerToken_not_in?: InputMaybe<Array<Scalars['String']>>;\n  fertilizerToken_not_starts_with?: InputMaybe<Scalars['String']>;\n  fertilizerToken_not_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  fertilizerToken_starts_with?: InputMaybe<Scalars['String']>;\n  fertilizerToken_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  id?: InputMaybe<Scalars['ID']>;\n  id_gt?: InputMaybe<Scalars['ID']>;\n  id_gte?: InputMaybe<Scalars['ID']>;\n  id_in?: InputMaybe<Array<Scalars['ID']>>;\n  id_lt?: InputMaybe<Scalars['ID']>;\n  id_lte?: InputMaybe<Scalars['ID']>;\n  id_not?: InputMaybe<Scalars['ID']>;\n  id_not_in?: InputMaybe<Array<Scalars['ID']>>;\n};\n\nexport enum FertilizerBalance_OrderBy {\n  Amount = 'amount',\n  Farmer = 'farmer',\n  FertilizerToken = 'fertilizerToken',\n  Id = 'id'\n}\n\nexport type FertilizerToken = {\n  __typename?: 'FertilizerToken';\n  balances: Array<FertilizerBalance>;\n  endBpf: Scalars['BigInt'];\n  fertilizer: Fertilizer;\n  humidity: Scalars['BigDecimal'];\n  id: Scalars['ID'];\n  season: Scalars['Int'];\n  startBpf: Scalars['BigInt'];\n  supply: Scalars['BigInt'];\n};\n\n\nexport type FertilizerTokenBalancesArgs = {\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<FertilizerBalance_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  where?: InputMaybe<FertilizerBalance_Filter>;\n};\n\nexport type FertilizerToken_Filter = {\n  /** Filter for the block changed event. */\n  _change_block?: InputMaybe<BlockChangedFilter>;\n  balances_?: InputMaybe<FertilizerBalance_Filter>;\n  endBpf?: InputMaybe<Scalars['BigInt']>;\n  endBpf_gt?: InputMaybe<Scalars['BigInt']>;\n  endBpf_gte?: InputMaybe<Scalars['BigInt']>;\n  endBpf_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  endBpf_lt?: InputMaybe<Scalars['BigInt']>;\n  endBpf_lte?: InputMaybe<Scalars['BigInt']>;\n  endBpf_not?: InputMaybe<Scalars['BigInt']>;\n  endBpf_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  fertilizer?: InputMaybe<Scalars['String']>;\n  fertilizer_?: InputMaybe<Fertilizer_Filter>;\n  fertilizer_contains?: InputMaybe<Scalars['String']>;\n  fertilizer_contains_nocase?: InputMaybe<Scalars['String']>;\n  fertilizer_ends_with?: InputMaybe<Scalars['String']>;\n  fertilizer_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  fertilizer_gt?: InputMaybe<Scalars['String']>;\n  fertilizer_gte?: InputMaybe<Scalars['String']>;\n  fertilizer_in?: InputMaybe<Array<Scalars['String']>>;\n  fertilizer_lt?: InputMaybe<Scalars['String']>;\n  fertilizer_lte?: InputMaybe<Scalars['String']>;\n  fertilizer_not?: InputMaybe<Scalars['String']>;\n  fertilizer_not_contains?: InputMaybe<Scalars['String']>;\n  fertilizer_not_contains_nocase?: InputMaybe<Scalars['String']>;\n  fertilizer_not_ends_with?: InputMaybe<Scalars['String']>;\n  fertilizer_not_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  fertilizer_not_in?: InputMaybe<Array<Scalars['String']>>;\n  fertilizer_not_starts_with?: InputMaybe<Scalars['String']>;\n  fertilizer_not_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  fertilizer_starts_with?: InputMaybe<Scalars['String']>;\n  fertilizer_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  humidity?: InputMaybe<Scalars['BigDecimal']>;\n  humidity_gt?: InputMaybe<Scalars['BigDecimal']>;\n  humidity_gte?: InputMaybe<Scalars['BigDecimal']>;\n  humidity_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n  humidity_lt?: InputMaybe<Scalars['BigDecimal']>;\n  humidity_lte?: InputMaybe<Scalars['BigDecimal']>;\n  humidity_not?: InputMaybe<Scalars['BigDecimal']>;\n  humidity_not_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n  id?: InputMaybe<Scalars['ID']>;\n  id_gt?: InputMaybe<Scalars['ID']>;\n  id_gte?: InputMaybe<Scalars['ID']>;\n  id_in?: InputMaybe<Array<Scalars['ID']>>;\n  id_lt?: InputMaybe<Scalars['ID']>;\n  id_lte?: InputMaybe<Scalars['ID']>;\n  id_not?: InputMaybe<Scalars['ID']>;\n  id_not_in?: InputMaybe<Array<Scalars['ID']>>;\n  season?: InputMaybe<Scalars['Int']>;\n  season_gt?: InputMaybe<Scalars['Int']>;\n  season_gte?: InputMaybe<Scalars['Int']>;\n  season_in?: InputMaybe<Array<Scalars['Int']>>;\n  season_lt?: InputMaybe<Scalars['Int']>;\n  season_lte?: InputMaybe<Scalars['Int']>;\n  season_not?: InputMaybe<Scalars['Int']>;\n  season_not_in?: InputMaybe<Array<Scalars['Int']>>;\n  startBpf?: InputMaybe<Scalars['BigInt']>;\n  startBpf_gt?: InputMaybe<Scalars['BigInt']>;\n  startBpf_gte?: InputMaybe<Scalars['BigInt']>;\n  startBpf_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  startBpf_lt?: InputMaybe<Scalars['BigInt']>;\n  startBpf_lte?: InputMaybe<Scalars['BigInt']>;\n  startBpf_not?: InputMaybe<Scalars['BigInt']>;\n  startBpf_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  supply?: InputMaybe<Scalars['BigInt']>;\n  supply_gt?: InputMaybe<Scalars['BigInt']>;\n  supply_gte?: InputMaybe<Scalars['BigInt']>;\n  supply_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  supply_lt?: InputMaybe<Scalars['BigInt']>;\n  supply_lte?: InputMaybe<Scalars['BigInt']>;\n  supply_not?: InputMaybe<Scalars['BigInt']>;\n  supply_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n};\n\nexport enum FertilizerToken_OrderBy {\n  Balances = 'balances',\n  EndBpf = 'endBpf',\n  Fertilizer = 'fertilizer',\n  Humidity = 'humidity',\n  Id = 'id',\n  Season = 'season',\n  StartBpf = 'startBpf',\n  Supply = 'supply'\n}\n\nexport type Fertilizer_Filter = {\n  /** Filter for the block changed event. */\n  _change_block?: InputMaybe<BlockChangedFilter>;\n  id?: InputMaybe<Scalars['ID']>;\n  id_gt?: InputMaybe<Scalars['ID']>;\n  id_gte?: InputMaybe<Scalars['ID']>;\n  id_in?: InputMaybe<Array<Scalars['ID']>>;\n  id_lt?: InputMaybe<Scalars['ID']>;\n  id_lte?: InputMaybe<Scalars['ID']>;\n  id_not?: InputMaybe<Scalars['ID']>;\n  id_not_in?: InputMaybe<Array<Scalars['ID']>>;\n  tokens_?: InputMaybe<FertilizerToken_Filter>;\n  totalSupply?: InputMaybe<Scalars['BigInt']>;\n  totalSupply_gt?: InputMaybe<Scalars['BigInt']>;\n  totalSupply_gte?: InputMaybe<Scalars['BigInt']>;\n  totalSupply_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  totalSupply_lt?: InputMaybe<Scalars['BigInt']>;\n  totalSupply_lte?: InputMaybe<Scalars['BigInt']>;\n  totalSupply_not?: InputMaybe<Scalars['BigInt']>;\n  totalSupply_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n};\n\nexport enum Fertilizer_OrderBy {\n  Id = 'id',\n  Tokens = 'tokens',\n  TotalSupply = 'totalSupply'\n}\n\nexport type Field = {\n  __typename?: 'Field';\n  beanstalk: Beanstalk;\n  dailySnapshots: Array<FieldDailySnapshot>;\n  farmer?: Maybe<Farmer>;\n  hourlySnapshots: Array<FieldHourlySnapshot>;\n  /**  Contract address for this field or farmer  */\n  id: Scalars['ID'];\n  plotIndexes: Array<Scalars['BigInt']>;\n  podIndex: Scalars['BigInt'];\n  podRate: Scalars['BigDecimal'];\n  realRateOfReturn: Scalars['BigDecimal'];\n  season: Scalars['Int'];\n  totalHarvestablePods: Scalars['BigInt'];\n  totalHarvestedPods: Scalars['BigInt'];\n  totalNumberOfSowers: Scalars['Int'];\n  totalNumberOfSows: Scalars['Int'];\n  totalPods: Scalars['BigInt'];\n  totalSoil: Scalars['BigInt'];\n  totalSownBeans: Scalars['BigInt'];\n  weather: Scalars['Int'];\n};\n\n\nexport type FieldDailySnapshotsArgs = {\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<FieldDailySnapshot_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  where?: InputMaybe<FieldDailySnapshot_Filter>;\n};\n\n\nexport type FieldHourlySnapshotsArgs = {\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<FieldHourlySnapshot_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  where?: InputMaybe<FieldHourlySnapshot_Filter>;\n};\n\nexport type FieldDailySnapshot = {\n  __typename?: 'FieldDailySnapshot';\n  blockNumber: Scalars['BigInt'];\n  field: Field;\n  id: Scalars['ID'];\n  lastUpdated: Scalars['BigInt'];\n  newHarvestablePods: Scalars['BigInt'];\n  newHarvestedPods: Scalars['BigInt'];\n  newPods: Scalars['BigInt'];\n  newSoil: Scalars['BigInt'];\n  numberOfSowers: Scalars['Int'];\n  numberOfSows: Scalars['Int'];\n  podIndex: Scalars['BigInt'];\n  podRate: Scalars['BigDecimal'];\n  realRateOfReturn: Scalars['BigDecimal'];\n  season: Scalars['Int'];\n  sownBeans: Scalars['BigInt'];\n  timestamp: Scalars['BigInt'];\n  totalHarvestablePods: Scalars['BigInt'];\n  totalHarvestedPods: Scalars['BigInt'];\n  totalNumberOfSowers: Scalars['Int'];\n  totalNumberOfSows: Scalars['Int'];\n  totalPods: Scalars['BigInt'];\n  totalSoil: Scalars['BigInt'];\n  totalSownBeans: Scalars['BigInt'];\n  weather: Scalars['Int'];\n};\n\nexport type FieldDailySnapshot_Filter = {\n  /** Filter for the block changed event. */\n  _change_block?: InputMaybe<BlockChangedFilter>;\n  blockNumber?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_gt?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_gte?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  blockNumber_lt?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_lte?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_not?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  field?: InputMaybe<Scalars['String']>;\n  field_?: InputMaybe<Field_Filter>;\n  field_contains?: InputMaybe<Scalars['String']>;\n  field_contains_nocase?: InputMaybe<Scalars['String']>;\n  field_ends_with?: InputMaybe<Scalars['String']>;\n  field_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  field_gt?: InputMaybe<Scalars['String']>;\n  field_gte?: InputMaybe<Scalars['String']>;\n  field_in?: InputMaybe<Array<Scalars['String']>>;\n  field_lt?: InputMaybe<Scalars['String']>;\n  field_lte?: InputMaybe<Scalars['String']>;\n  field_not?: InputMaybe<Scalars['String']>;\n  field_not_contains?: InputMaybe<Scalars['String']>;\n  field_not_contains_nocase?: InputMaybe<Scalars['String']>;\n  field_not_ends_with?: InputMaybe<Scalars['String']>;\n  field_not_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  field_not_in?: InputMaybe<Array<Scalars['String']>>;\n  field_not_starts_with?: InputMaybe<Scalars['String']>;\n  field_not_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  field_starts_with?: InputMaybe<Scalars['String']>;\n  field_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  id?: InputMaybe<Scalars['ID']>;\n  id_gt?: InputMaybe<Scalars['ID']>;\n  id_gte?: InputMaybe<Scalars['ID']>;\n  id_in?: InputMaybe<Array<Scalars['ID']>>;\n  id_lt?: InputMaybe<Scalars['ID']>;\n  id_lte?: InputMaybe<Scalars['ID']>;\n  id_not?: InputMaybe<Scalars['ID']>;\n  id_not_in?: InputMaybe<Array<Scalars['ID']>>;\n  lastUpdated?: InputMaybe<Scalars['BigInt']>;\n  lastUpdated_gt?: InputMaybe<Scalars['BigInt']>;\n  lastUpdated_gte?: InputMaybe<Scalars['BigInt']>;\n  lastUpdated_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  lastUpdated_lt?: InputMaybe<Scalars['BigInt']>;\n  lastUpdated_lte?: InputMaybe<Scalars['BigInt']>;\n  lastUpdated_not?: InputMaybe<Scalars['BigInt']>;\n  lastUpdated_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  newHarvestablePods?: InputMaybe<Scalars['BigInt']>;\n  newHarvestablePods_gt?: InputMaybe<Scalars['BigInt']>;\n  newHarvestablePods_gte?: InputMaybe<Scalars['BigInt']>;\n  newHarvestablePods_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  newHarvestablePods_lt?: InputMaybe<Scalars['BigInt']>;\n  newHarvestablePods_lte?: InputMaybe<Scalars['BigInt']>;\n  newHarvestablePods_not?: InputMaybe<Scalars['BigInt']>;\n  newHarvestablePods_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  newHarvestedPods?: InputMaybe<Scalars['BigInt']>;\n  newHarvestedPods_gt?: InputMaybe<Scalars['BigInt']>;\n  newHarvestedPods_gte?: InputMaybe<Scalars['BigInt']>;\n  newHarvestedPods_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  newHarvestedPods_lt?: InputMaybe<Scalars['BigInt']>;\n  newHarvestedPods_lte?: InputMaybe<Scalars['BigInt']>;\n  newHarvestedPods_not?: InputMaybe<Scalars['BigInt']>;\n  newHarvestedPods_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  newPods?: InputMaybe<Scalars['BigInt']>;\n  newPods_gt?: InputMaybe<Scalars['BigInt']>;\n  newPods_gte?: InputMaybe<Scalars['BigInt']>;\n  newPods_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  newPods_lt?: InputMaybe<Scalars['BigInt']>;\n  newPods_lte?: InputMaybe<Scalars['BigInt']>;\n  newPods_not?: InputMaybe<Scalars['BigInt']>;\n  newPods_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  newSoil?: InputMaybe<Scalars['BigInt']>;\n  newSoil_gt?: InputMaybe<Scalars['BigInt']>;\n  newSoil_gte?: InputMaybe<Scalars['BigInt']>;\n  newSoil_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  newSoil_lt?: InputMaybe<Scalars['BigInt']>;\n  newSoil_lte?: InputMaybe<Scalars['BigInt']>;\n  newSoil_not?: InputMaybe<Scalars['BigInt']>;\n  newSoil_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  numberOfSowers?: InputMaybe<Scalars['Int']>;\n  numberOfSowers_gt?: InputMaybe<Scalars['Int']>;\n  numberOfSowers_gte?: InputMaybe<Scalars['Int']>;\n  numberOfSowers_in?: InputMaybe<Array<Scalars['Int']>>;\n  numberOfSowers_lt?: InputMaybe<Scalars['Int']>;\n  numberOfSowers_lte?: InputMaybe<Scalars['Int']>;\n  numberOfSowers_not?: InputMaybe<Scalars['Int']>;\n  numberOfSowers_not_in?: InputMaybe<Array<Scalars['Int']>>;\n  numberOfSows?: InputMaybe<Scalars['Int']>;\n  numberOfSows_gt?: InputMaybe<Scalars['Int']>;\n  numberOfSows_gte?: InputMaybe<Scalars['Int']>;\n  numberOfSows_in?: InputMaybe<Array<Scalars['Int']>>;\n  numberOfSows_lt?: InputMaybe<Scalars['Int']>;\n  numberOfSows_lte?: InputMaybe<Scalars['Int']>;\n  numberOfSows_not?: InputMaybe<Scalars['Int']>;\n  numberOfSows_not_in?: InputMaybe<Array<Scalars['Int']>>;\n  podIndex?: InputMaybe<Scalars['BigInt']>;\n  podIndex_gt?: InputMaybe<Scalars['BigInt']>;\n  podIndex_gte?: InputMaybe<Scalars['BigInt']>;\n  podIndex_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  podIndex_lt?: InputMaybe<Scalars['BigInt']>;\n  podIndex_lte?: InputMaybe<Scalars['BigInt']>;\n  podIndex_not?: InputMaybe<Scalars['BigInt']>;\n  podIndex_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  podRate?: InputMaybe<Scalars['BigDecimal']>;\n  podRate_gt?: InputMaybe<Scalars['BigDecimal']>;\n  podRate_gte?: InputMaybe<Scalars['BigDecimal']>;\n  podRate_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n  podRate_lt?: InputMaybe<Scalars['BigDecimal']>;\n  podRate_lte?: InputMaybe<Scalars['BigDecimal']>;\n  podRate_not?: InputMaybe<Scalars['BigDecimal']>;\n  podRate_not_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n  realRateOfReturn?: InputMaybe<Scalars['BigDecimal']>;\n  realRateOfReturn_gt?: InputMaybe<Scalars['BigDecimal']>;\n  realRateOfReturn_gte?: InputMaybe<Scalars['BigDecimal']>;\n  realRateOfReturn_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n  realRateOfReturn_lt?: InputMaybe<Scalars['BigDecimal']>;\n  realRateOfReturn_lte?: InputMaybe<Scalars['BigDecimal']>;\n  realRateOfReturn_not?: InputMaybe<Scalars['BigDecimal']>;\n  realRateOfReturn_not_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n  season?: InputMaybe<Scalars['Int']>;\n  season_gt?: InputMaybe<Scalars['Int']>;\n  season_gte?: InputMaybe<Scalars['Int']>;\n  season_in?: InputMaybe<Array<Scalars['Int']>>;\n  season_lt?: InputMaybe<Scalars['Int']>;\n  season_lte?: InputMaybe<Scalars['Int']>;\n  season_not?: InputMaybe<Scalars['Int']>;\n  season_not_in?: InputMaybe<Array<Scalars['Int']>>;\n  sownBeans?: InputMaybe<Scalars['BigInt']>;\n  sownBeans_gt?: InputMaybe<Scalars['BigInt']>;\n  sownBeans_gte?: InputMaybe<Scalars['BigInt']>;\n  sownBeans_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  sownBeans_lt?: InputMaybe<Scalars['BigInt']>;\n  sownBeans_lte?: InputMaybe<Scalars['BigInt']>;\n  sownBeans_not?: InputMaybe<Scalars['BigInt']>;\n  sownBeans_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  timestamp?: InputMaybe<Scalars['BigInt']>;\n  timestamp_gt?: InputMaybe<Scalars['BigInt']>;\n  timestamp_gte?: InputMaybe<Scalars['BigInt']>;\n  timestamp_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  timestamp_lt?: InputMaybe<Scalars['BigInt']>;\n  timestamp_lte?: InputMaybe<Scalars['BigInt']>;\n  timestamp_not?: InputMaybe<Scalars['BigInt']>;\n  timestamp_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  totalHarvestablePods?: InputMaybe<Scalars['BigInt']>;\n  totalHarvestablePods_gt?: InputMaybe<Scalars['BigInt']>;\n  totalHarvestablePods_gte?: InputMaybe<Scalars['BigInt']>;\n  totalHarvestablePods_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  totalHarvestablePods_lt?: InputMaybe<Scalars['BigInt']>;\n  totalHarvestablePods_lte?: InputMaybe<Scalars['BigInt']>;\n  totalHarvestablePods_not?: InputMaybe<Scalars['BigInt']>;\n  totalHarvestablePods_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  totalHarvestedPods?: InputMaybe<Scalars['BigInt']>;\n  totalHarvestedPods_gt?: InputMaybe<Scalars['BigInt']>;\n  totalHarvestedPods_gte?: InputMaybe<Scalars['BigInt']>;\n  totalHarvestedPods_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  totalHarvestedPods_lt?: InputMaybe<Scalars['BigInt']>;\n  totalHarvestedPods_lte?: InputMaybe<Scalars['BigInt']>;\n  totalHarvestedPods_not?: InputMaybe<Scalars['BigInt']>;\n  totalHarvestedPods_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  totalNumberOfSowers?: InputMaybe<Scalars['Int']>;\n  totalNumberOfSowers_gt?: InputMaybe<Scalars['Int']>;\n  totalNumberOfSowers_gte?: InputMaybe<Scalars['Int']>;\n  totalNumberOfSowers_in?: InputMaybe<Array<Scalars['Int']>>;\n  totalNumberOfSowers_lt?: InputMaybe<Scalars['Int']>;\n  totalNumberOfSowers_lte?: InputMaybe<Scalars['Int']>;\n  totalNumberOfSowers_not?: InputMaybe<Scalars['Int']>;\n  totalNumberOfSowers_not_in?: InputMaybe<Array<Scalars['Int']>>;\n  totalNumberOfSows?: InputMaybe<Scalars['Int']>;\n  totalNumberOfSows_gt?: InputMaybe<Scalars['Int']>;\n  totalNumberOfSows_gte?: InputMaybe<Scalars['Int']>;\n  totalNumberOfSows_in?: InputMaybe<Array<Scalars['Int']>>;\n  totalNumberOfSows_lt?: InputMaybe<Scalars['Int']>;\n  totalNumberOfSows_lte?: InputMaybe<Scalars['Int']>;\n  totalNumberOfSows_not?: InputMaybe<Scalars['Int']>;\n  totalNumberOfSows_not_in?: InputMaybe<Array<Scalars['Int']>>;\n  totalPods?: InputMaybe<Scalars['BigInt']>;\n  totalPods_gt?: InputMaybe<Scalars['BigInt']>;\n  totalPods_gte?: InputMaybe<Scalars['BigInt']>;\n  totalPods_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  totalPods_lt?: InputMaybe<Scalars['BigInt']>;\n  totalPods_lte?: InputMaybe<Scalars['BigInt']>;\n  totalPods_not?: InputMaybe<Scalars['BigInt']>;\n  totalPods_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  totalSoil?: InputMaybe<Scalars['BigInt']>;\n  totalSoil_gt?: InputMaybe<Scalars['BigInt']>;\n  totalSoil_gte?: InputMaybe<Scalars['BigInt']>;\n  totalSoil_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  totalSoil_lt?: InputMaybe<Scalars['BigInt']>;\n  totalSoil_lte?: InputMaybe<Scalars['BigInt']>;\n  totalSoil_not?: InputMaybe<Scalars['BigInt']>;\n  totalSoil_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  totalSownBeans?: InputMaybe<Scalars['BigInt']>;\n  totalSownBeans_gt?: InputMaybe<Scalars['BigInt']>;\n  totalSownBeans_gte?: InputMaybe<Scalars['BigInt']>;\n  totalSownBeans_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  totalSownBeans_lt?: InputMaybe<Scalars['BigInt']>;\n  totalSownBeans_lte?: InputMaybe<Scalars['BigInt']>;\n  totalSownBeans_not?: InputMaybe<Scalars['BigInt']>;\n  totalSownBeans_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  weather?: InputMaybe<Scalars['Int']>;\n  weather_gt?: InputMaybe<Scalars['Int']>;\n  weather_gte?: InputMaybe<Scalars['Int']>;\n  weather_in?: InputMaybe<Array<Scalars['Int']>>;\n  weather_lt?: InputMaybe<Scalars['Int']>;\n  weather_lte?: InputMaybe<Scalars['Int']>;\n  weather_not?: InputMaybe<Scalars['Int']>;\n  weather_not_in?: InputMaybe<Array<Scalars['Int']>>;\n};\n\nexport enum FieldDailySnapshot_OrderBy {\n  BlockNumber = 'blockNumber',\n  Field = 'field',\n  Id = 'id',\n  LastUpdated = 'lastUpdated',\n  NewHarvestablePods = 'newHarvestablePods',\n  NewHarvestedPods = 'newHarvestedPods',\n  NewPods = 'newPods',\n  NewSoil = 'newSoil',\n  NumberOfSowers = 'numberOfSowers',\n  NumberOfSows = 'numberOfSows',\n  PodIndex = 'podIndex',\n  PodRate = 'podRate',\n  RealRateOfReturn = 'realRateOfReturn',\n  Season = 'season',\n  SownBeans = 'sownBeans',\n  Timestamp = 'timestamp',\n  TotalHarvestablePods = 'totalHarvestablePods',\n  TotalHarvestedPods = 'totalHarvestedPods',\n  TotalNumberOfSowers = 'totalNumberOfSowers',\n  TotalNumberOfSows = 'totalNumberOfSows',\n  TotalPods = 'totalPods',\n  TotalSoil = 'totalSoil',\n  TotalSownBeans = 'totalSownBeans',\n  Weather = 'weather'\n}\n\nexport type FieldEvent = {\n  /**  Block number of this event  */\n  blockNumber: Scalars['BigInt'];\n  /**  Transaction hash of the transaction that emitted this event  */\n  hash: Scalars['String'];\n  /**  { Event type }-{ Transaction hash }-{ Log index }  */\n  id: Scalars['ID'];\n  /**  Event log index. For transactions that don't emit event, create arbitrary index starting from 0  */\n  logIndex: Scalars['Int'];\n  /**  The protocol this transaction belongs to  */\n  protocol: Beanstalk;\n  /**  Timestamp of this event  */\n  timestamp: Scalars['BigInt'];\n};\n\nexport type FieldEvent_Filter = {\n  /** Filter for the block changed event. */\n  _change_block?: InputMaybe<BlockChangedFilter>;\n  blockNumber?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_gt?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_gte?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  blockNumber_lt?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_lte?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_not?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  hash?: InputMaybe<Scalars['String']>;\n  hash_contains?: InputMaybe<Scalars['String']>;\n  hash_contains_nocase?: InputMaybe<Scalars['String']>;\n  hash_ends_with?: InputMaybe<Scalars['String']>;\n  hash_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  hash_gt?: InputMaybe<Scalars['String']>;\n  hash_gte?: InputMaybe<Scalars['String']>;\n  hash_in?: InputMaybe<Array<Scalars['String']>>;\n  hash_lt?: InputMaybe<Scalars['String']>;\n  hash_lte?: InputMaybe<Scalars['String']>;\n  hash_not?: InputMaybe<Scalars['String']>;\n  hash_not_contains?: InputMaybe<Scalars['String']>;\n  hash_not_contains_nocase?: InputMaybe<Scalars['String']>;\n  hash_not_ends_with?: InputMaybe<Scalars['String']>;\n  hash_not_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  hash_not_in?: InputMaybe<Array<Scalars['String']>>;\n  hash_not_starts_with?: InputMaybe<Scalars['String']>;\n  hash_not_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  hash_starts_with?: InputMaybe<Scalars['String']>;\n  hash_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  id?: InputMaybe<Scalars['ID']>;\n  id_gt?: InputMaybe<Scalars['ID']>;\n  id_gte?: InputMaybe<Scalars['ID']>;\n  id_in?: InputMaybe<Array<Scalars['ID']>>;\n  id_lt?: InputMaybe<Scalars['ID']>;\n  id_lte?: InputMaybe<Scalars['ID']>;\n  id_not?: InputMaybe<Scalars['ID']>;\n  id_not_in?: InputMaybe<Array<Scalars['ID']>>;\n  logIndex?: InputMaybe<Scalars['Int']>;\n  logIndex_gt?: InputMaybe<Scalars['Int']>;\n  logIndex_gte?: InputMaybe<Scalars['Int']>;\n  logIndex_in?: InputMaybe<Array<Scalars['Int']>>;\n  logIndex_lt?: InputMaybe<Scalars['Int']>;\n  logIndex_lte?: InputMaybe<Scalars['Int']>;\n  logIndex_not?: InputMaybe<Scalars['Int']>;\n  logIndex_not_in?: InputMaybe<Array<Scalars['Int']>>;\n  protocol?: InputMaybe<Scalars['String']>;\n  protocol_?: InputMaybe<Beanstalk_Filter>;\n  protocol_contains?: InputMaybe<Scalars['String']>;\n  protocol_contains_nocase?: InputMaybe<Scalars['String']>;\n  protocol_ends_with?: InputMaybe<Scalars['String']>;\n  protocol_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  protocol_gt?: InputMaybe<Scalars['String']>;\n  protocol_gte?: InputMaybe<Scalars['String']>;\n  protocol_in?: InputMaybe<Array<Scalars['String']>>;\n  protocol_lt?: InputMaybe<Scalars['String']>;\n  protocol_lte?: InputMaybe<Scalars['String']>;\n  protocol_not?: InputMaybe<Scalars['String']>;\n  protocol_not_contains?: InputMaybe<Scalars['String']>;\n  protocol_not_contains_nocase?: InputMaybe<Scalars['String']>;\n  protocol_not_ends_with?: InputMaybe<Scalars['String']>;\n  protocol_not_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  protocol_not_in?: InputMaybe<Array<Scalars['String']>>;\n  protocol_not_starts_with?: InputMaybe<Scalars['String']>;\n  protocol_not_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  protocol_starts_with?: InputMaybe<Scalars['String']>;\n  protocol_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  timestamp?: InputMaybe<Scalars['BigInt']>;\n  timestamp_gt?: InputMaybe<Scalars['BigInt']>;\n  timestamp_gte?: InputMaybe<Scalars['BigInt']>;\n  timestamp_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  timestamp_lt?: InputMaybe<Scalars['BigInt']>;\n  timestamp_lte?: InputMaybe<Scalars['BigInt']>;\n  timestamp_not?: InputMaybe<Scalars['BigInt']>;\n  timestamp_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n};\n\nexport enum FieldEvent_OrderBy {\n  BlockNumber = 'blockNumber',\n  Hash = 'hash',\n  Id = 'id',\n  LogIndex = 'logIndex',\n  Protocol = 'protocol',\n  Timestamp = 'timestamp'\n}\n\nexport type FieldHourlySnapshot = {\n  __typename?: 'FieldHourlySnapshot';\n  blockNumber: Scalars['BigInt'];\n  blocksToSoldOutSoil: Scalars['BigInt'];\n  field: Field;\n  id: Scalars['ID'];\n  lastUpdated: Scalars['BigInt'];\n  newHarvestablePods: Scalars['BigInt'];\n  newHarvestedPods: Scalars['BigInt'];\n  newPods: Scalars['BigInt'];\n  newSoil: Scalars['BigInt'];\n  numberOfSowers: Scalars['Int'];\n  numberOfSows: Scalars['Int'];\n  podIndex: Scalars['BigInt'];\n  podRate: Scalars['BigDecimal'];\n  realRateOfReturn: Scalars['BigDecimal'];\n  season: Scalars['Int'];\n  soilSoldOut: Scalars['Boolean'];\n  sownBeans: Scalars['BigInt'];\n  timestamp: Scalars['BigInt'];\n  totalHarvestablePods: Scalars['BigInt'];\n  totalHarvestedPods: Scalars['BigInt'];\n  totalNumberOfSowers: Scalars['Int'];\n  totalNumberOfSows: Scalars['Int'];\n  totalPods: Scalars['BigInt'];\n  totalSoil: Scalars['BigInt'];\n  totalSownBeans: Scalars['BigInt'];\n  weather: Scalars['Int'];\n};\n\nexport type FieldHourlySnapshot_Filter = {\n  /** Filter for the block changed event. */\n  _change_block?: InputMaybe<BlockChangedFilter>;\n  blockNumber?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_gt?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_gte?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  blockNumber_lt?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_lte?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_not?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  blocksToSoldOutSoil?: InputMaybe<Scalars['BigInt']>;\n  blocksToSoldOutSoil_gt?: InputMaybe<Scalars['BigInt']>;\n  blocksToSoldOutSoil_gte?: InputMaybe<Scalars['BigInt']>;\n  blocksToSoldOutSoil_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  blocksToSoldOutSoil_lt?: InputMaybe<Scalars['BigInt']>;\n  blocksToSoldOutSoil_lte?: InputMaybe<Scalars['BigInt']>;\n  blocksToSoldOutSoil_not?: InputMaybe<Scalars['BigInt']>;\n  blocksToSoldOutSoil_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  field?: InputMaybe<Scalars['String']>;\n  field_?: InputMaybe<Field_Filter>;\n  field_contains?: InputMaybe<Scalars['String']>;\n  field_contains_nocase?: InputMaybe<Scalars['String']>;\n  field_ends_with?: InputMaybe<Scalars['String']>;\n  field_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  field_gt?: InputMaybe<Scalars['String']>;\n  field_gte?: InputMaybe<Scalars['String']>;\n  field_in?: InputMaybe<Array<Scalars['String']>>;\n  field_lt?: InputMaybe<Scalars['String']>;\n  field_lte?: InputMaybe<Scalars['String']>;\n  field_not?: InputMaybe<Scalars['String']>;\n  field_not_contains?: InputMaybe<Scalars['String']>;\n  field_not_contains_nocase?: InputMaybe<Scalars['String']>;\n  field_not_ends_with?: InputMaybe<Scalars['String']>;\n  field_not_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  field_not_in?: InputMaybe<Array<Scalars['String']>>;\n  field_not_starts_with?: InputMaybe<Scalars['String']>;\n  field_not_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  field_starts_with?: InputMaybe<Scalars['String']>;\n  field_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  id?: InputMaybe<Scalars['ID']>;\n  id_gt?: InputMaybe<Scalars['ID']>;\n  id_gte?: InputMaybe<Scalars['ID']>;\n  id_in?: InputMaybe<Array<Scalars['ID']>>;\n  id_lt?: InputMaybe<Scalars['ID']>;\n  id_lte?: InputMaybe<Scalars['ID']>;\n  id_not?: InputMaybe<Scalars['ID']>;\n  id_not_in?: InputMaybe<Array<Scalars['ID']>>;\n  lastUpdated?: InputMaybe<Scalars['BigInt']>;\n  lastUpdated_gt?: InputMaybe<Scalars['BigInt']>;\n  lastUpdated_gte?: InputMaybe<Scalars['BigInt']>;\n  lastUpdated_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  lastUpdated_lt?: InputMaybe<Scalars['BigInt']>;\n  lastUpdated_lte?: InputMaybe<Scalars['BigInt']>;\n  lastUpdated_not?: InputMaybe<Scalars['BigInt']>;\n  lastUpdated_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  newHarvestablePods?: InputMaybe<Scalars['BigInt']>;\n  newHarvestablePods_gt?: InputMaybe<Scalars['BigInt']>;\n  newHarvestablePods_gte?: InputMaybe<Scalars['BigInt']>;\n  newHarvestablePods_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  newHarvestablePods_lt?: InputMaybe<Scalars['BigInt']>;\n  newHarvestablePods_lte?: InputMaybe<Scalars['BigInt']>;\n  newHarvestablePods_not?: InputMaybe<Scalars['BigInt']>;\n  newHarvestablePods_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  newHarvestedPods?: InputMaybe<Scalars['BigInt']>;\n  newHarvestedPods_gt?: InputMaybe<Scalars['BigInt']>;\n  newHarvestedPods_gte?: InputMaybe<Scalars['BigInt']>;\n  newHarvestedPods_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  newHarvestedPods_lt?: InputMaybe<Scalars['BigInt']>;\n  newHarvestedPods_lte?: InputMaybe<Scalars['BigInt']>;\n  newHarvestedPods_not?: InputMaybe<Scalars['BigInt']>;\n  newHarvestedPods_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  newPods?: InputMaybe<Scalars['BigInt']>;\n  newPods_gt?: InputMaybe<Scalars['BigInt']>;\n  newPods_gte?: InputMaybe<Scalars['BigInt']>;\n  newPods_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  newPods_lt?: InputMaybe<Scalars['BigInt']>;\n  newPods_lte?: InputMaybe<Scalars['BigInt']>;\n  newPods_not?: InputMaybe<Scalars['BigInt']>;\n  newPods_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  newSoil?: InputMaybe<Scalars['BigInt']>;\n  newSoil_gt?: InputMaybe<Scalars['BigInt']>;\n  newSoil_gte?: InputMaybe<Scalars['BigInt']>;\n  newSoil_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  newSoil_lt?: InputMaybe<Scalars['BigInt']>;\n  newSoil_lte?: InputMaybe<Scalars['BigInt']>;\n  newSoil_not?: InputMaybe<Scalars['BigInt']>;\n  newSoil_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  numberOfSowers?: InputMaybe<Scalars['Int']>;\n  numberOfSowers_gt?: InputMaybe<Scalars['Int']>;\n  numberOfSowers_gte?: InputMaybe<Scalars['Int']>;\n  numberOfSowers_in?: InputMaybe<Array<Scalars['Int']>>;\n  numberOfSowers_lt?: InputMaybe<Scalars['Int']>;\n  numberOfSowers_lte?: InputMaybe<Scalars['Int']>;\n  numberOfSowers_not?: InputMaybe<Scalars['Int']>;\n  numberOfSowers_not_in?: InputMaybe<Array<Scalars['Int']>>;\n  numberOfSows?: InputMaybe<Scalars['Int']>;\n  numberOfSows_gt?: InputMaybe<Scalars['Int']>;\n  numberOfSows_gte?: InputMaybe<Scalars['Int']>;\n  numberOfSows_in?: InputMaybe<Array<Scalars['Int']>>;\n  numberOfSows_lt?: InputMaybe<Scalars['Int']>;\n  numberOfSows_lte?: InputMaybe<Scalars['Int']>;\n  numberOfSows_not?: InputMaybe<Scalars['Int']>;\n  numberOfSows_not_in?: InputMaybe<Array<Scalars['Int']>>;\n  podIndex?: InputMaybe<Scalars['BigInt']>;\n  podIndex_gt?: InputMaybe<Scalars['BigInt']>;\n  podIndex_gte?: InputMaybe<Scalars['BigInt']>;\n  podIndex_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  podIndex_lt?: InputMaybe<Scalars['BigInt']>;\n  podIndex_lte?: InputMaybe<Scalars['BigInt']>;\n  podIndex_not?: InputMaybe<Scalars['BigInt']>;\n  podIndex_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  podRate?: InputMaybe<Scalars['BigDecimal']>;\n  podRate_gt?: InputMaybe<Scalars['BigDecimal']>;\n  podRate_gte?: InputMaybe<Scalars['BigDecimal']>;\n  podRate_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n  podRate_lt?: InputMaybe<Scalars['BigDecimal']>;\n  podRate_lte?: InputMaybe<Scalars['BigDecimal']>;\n  podRate_not?: InputMaybe<Scalars['BigDecimal']>;\n  podRate_not_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n  realRateOfReturn?: InputMaybe<Scalars['BigDecimal']>;\n  realRateOfReturn_gt?: InputMaybe<Scalars['BigDecimal']>;\n  realRateOfReturn_gte?: InputMaybe<Scalars['BigDecimal']>;\n  realRateOfReturn_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n  realRateOfReturn_lt?: InputMaybe<Scalars['BigDecimal']>;\n  realRateOfReturn_lte?: InputMaybe<Scalars['BigDecimal']>;\n  realRateOfReturn_not?: InputMaybe<Scalars['BigDecimal']>;\n  realRateOfReturn_not_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n  season?: InputMaybe<Scalars['Int']>;\n  season_gt?: InputMaybe<Scalars['Int']>;\n  season_gte?: InputMaybe<Scalars['Int']>;\n  season_in?: InputMaybe<Array<Scalars['Int']>>;\n  season_lt?: InputMaybe<Scalars['Int']>;\n  season_lte?: InputMaybe<Scalars['Int']>;\n  season_not?: InputMaybe<Scalars['Int']>;\n  season_not_in?: InputMaybe<Array<Scalars['Int']>>;\n  soilSoldOut?: InputMaybe<Scalars['Boolean']>;\n  soilSoldOut_in?: InputMaybe<Array<Scalars['Boolean']>>;\n  soilSoldOut_not?: InputMaybe<Scalars['Boolean']>;\n  soilSoldOut_not_in?: InputMaybe<Array<Scalars['Boolean']>>;\n  sownBeans?: InputMaybe<Scalars['BigInt']>;\n  sownBeans_gt?: InputMaybe<Scalars['BigInt']>;\n  sownBeans_gte?: InputMaybe<Scalars['BigInt']>;\n  sownBeans_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  sownBeans_lt?: InputMaybe<Scalars['BigInt']>;\n  sownBeans_lte?: InputMaybe<Scalars['BigInt']>;\n  sownBeans_not?: InputMaybe<Scalars['BigInt']>;\n  sownBeans_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  timestamp?: InputMaybe<Scalars['BigInt']>;\n  timestamp_gt?: InputMaybe<Scalars['BigInt']>;\n  timestamp_gte?: InputMaybe<Scalars['BigInt']>;\n  timestamp_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  timestamp_lt?: InputMaybe<Scalars['BigInt']>;\n  timestamp_lte?: InputMaybe<Scalars['BigInt']>;\n  timestamp_not?: InputMaybe<Scalars['BigInt']>;\n  timestamp_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  totalHarvestablePods?: InputMaybe<Scalars['BigInt']>;\n  totalHarvestablePods_gt?: InputMaybe<Scalars['BigInt']>;\n  totalHarvestablePods_gte?: InputMaybe<Scalars['BigInt']>;\n  totalHarvestablePods_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  totalHarvestablePods_lt?: InputMaybe<Scalars['BigInt']>;\n  totalHarvestablePods_lte?: InputMaybe<Scalars['BigInt']>;\n  totalHarvestablePods_not?: InputMaybe<Scalars['BigInt']>;\n  totalHarvestablePods_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  totalHarvestedPods?: InputMaybe<Scalars['BigInt']>;\n  totalHarvestedPods_gt?: InputMaybe<Scalars['BigInt']>;\n  totalHarvestedPods_gte?: InputMaybe<Scalars['BigInt']>;\n  totalHarvestedPods_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  totalHarvestedPods_lt?: InputMaybe<Scalars['BigInt']>;\n  totalHarvestedPods_lte?: InputMaybe<Scalars['BigInt']>;\n  totalHarvestedPods_not?: InputMaybe<Scalars['BigInt']>;\n  totalHarvestedPods_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  totalNumberOfSowers?: InputMaybe<Scalars['Int']>;\n  totalNumberOfSowers_gt?: InputMaybe<Scalars['Int']>;\n  totalNumberOfSowers_gte?: InputMaybe<Scalars['Int']>;\n  totalNumberOfSowers_in?: InputMaybe<Array<Scalars['Int']>>;\n  totalNumberOfSowers_lt?: InputMaybe<Scalars['Int']>;\n  totalNumberOfSowers_lte?: InputMaybe<Scalars['Int']>;\n  totalNumberOfSowers_not?: InputMaybe<Scalars['Int']>;\n  totalNumberOfSowers_not_in?: InputMaybe<Array<Scalars['Int']>>;\n  totalNumberOfSows?: InputMaybe<Scalars['Int']>;\n  totalNumberOfSows_gt?: InputMaybe<Scalars['Int']>;\n  totalNumberOfSows_gte?: InputMaybe<Scalars['Int']>;\n  totalNumberOfSows_in?: InputMaybe<Array<Scalars['Int']>>;\n  totalNumberOfSows_lt?: InputMaybe<Scalars['Int']>;\n  totalNumberOfSows_lte?: InputMaybe<Scalars['Int']>;\n  totalNumberOfSows_not?: InputMaybe<Scalars['Int']>;\n  totalNumberOfSows_not_in?: InputMaybe<Array<Scalars['Int']>>;\n  totalPods?: InputMaybe<Scalars['BigInt']>;\n  totalPods_gt?: InputMaybe<Scalars['BigInt']>;\n  totalPods_gte?: InputMaybe<Scalars['BigInt']>;\n  totalPods_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  totalPods_lt?: InputMaybe<Scalars['BigInt']>;\n  totalPods_lte?: InputMaybe<Scalars['BigInt']>;\n  totalPods_not?: InputMaybe<Scalars['BigInt']>;\n  totalPods_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  totalSoil?: InputMaybe<Scalars['BigInt']>;\n  totalSoil_gt?: InputMaybe<Scalars['BigInt']>;\n  totalSoil_gte?: InputMaybe<Scalars['BigInt']>;\n  totalSoil_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  totalSoil_lt?: InputMaybe<Scalars['BigInt']>;\n  totalSoil_lte?: InputMaybe<Scalars['BigInt']>;\n  totalSoil_not?: InputMaybe<Scalars['BigInt']>;\n  totalSoil_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  totalSownBeans?: InputMaybe<Scalars['BigInt']>;\n  totalSownBeans_gt?: InputMaybe<Scalars['BigInt']>;\n  totalSownBeans_gte?: InputMaybe<Scalars['BigInt']>;\n  totalSownBeans_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  totalSownBeans_lt?: InputMaybe<Scalars['BigInt']>;\n  totalSownBeans_lte?: InputMaybe<Scalars['BigInt']>;\n  totalSownBeans_not?: InputMaybe<Scalars['BigInt']>;\n  totalSownBeans_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  weather?: InputMaybe<Scalars['Int']>;\n  weather_gt?: InputMaybe<Scalars['Int']>;\n  weather_gte?: InputMaybe<Scalars['Int']>;\n  weather_in?: InputMaybe<Array<Scalars['Int']>>;\n  weather_lt?: InputMaybe<Scalars['Int']>;\n  weather_lte?: InputMaybe<Scalars['Int']>;\n  weather_not?: InputMaybe<Scalars['Int']>;\n  weather_not_in?: InputMaybe<Array<Scalars['Int']>>;\n};\n\nexport enum FieldHourlySnapshot_OrderBy {\n  BlockNumber = 'blockNumber',\n  BlocksToSoldOutSoil = 'blocksToSoldOutSoil',\n  Field = 'field',\n  Id = 'id',\n  LastUpdated = 'lastUpdated',\n  NewHarvestablePods = 'newHarvestablePods',\n  NewHarvestedPods = 'newHarvestedPods',\n  NewPods = 'newPods',\n  NewSoil = 'newSoil',\n  NumberOfSowers = 'numberOfSowers',\n  NumberOfSows = 'numberOfSows',\n  PodIndex = 'podIndex',\n  PodRate = 'podRate',\n  RealRateOfReturn = 'realRateOfReturn',\n  Season = 'season',\n  SoilSoldOut = 'soilSoldOut',\n  SownBeans = 'sownBeans',\n  Timestamp = 'timestamp',\n  TotalHarvestablePods = 'totalHarvestablePods',\n  TotalHarvestedPods = 'totalHarvestedPods',\n  TotalNumberOfSowers = 'totalNumberOfSowers',\n  TotalNumberOfSows = 'totalNumberOfSows',\n  TotalPods = 'totalPods',\n  TotalSoil = 'totalSoil',\n  TotalSownBeans = 'totalSownBeans',\n  Weather = 'weather'\n}\n\nexport type Field_Filter = {\n  /** Filter for the block changed event. */\n  _change_block?: InputMaybe<BlockChangedFilter>;\n  beanstalk?: InputMaybe<Scalars['String']>;\n  beanstalk_?: InputMaybe<Beanstalk_Filter>;\n  beanstalk_contains?: InputMaybe<Scalars['String']>;\n  beanstalk_contains_nocase?: InputMaybe<Scalars['String']>;\n  beanstalk_ends_with?: InputMaybe<Scalars['String']>;\n  beanstalk_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  beanstalk_gt?: InputMaybe<Scalars['String']>;\n  beanstalk_gte?: InputMaybe<Scalars['String']>;\n  beanstalk_in?: InputMaybe<Array<Scalars['String']>>;\n  beanstalk_lt?: InputMaybe<Scalars['String']>;\n  beanstalk_lte?: InputMaybe<Scalars['String']>;\n  beanstalk_not?: InputMaybe<Scalars['String']>;\n  beanstalk_not_contains?: InputMaybe<Scalars['String']>;\n  beanstalk_not_contains_nocase?: InputMaybe<Scalars['String']>;\n  beanstalk_not_ends_with?: InputMaybe<Scalars['String']>;\n  beanstalk_not_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  beanstalk_not_in?: InputMaybe<Array<Scalars['String']>>;\n  beanstalk_not_starts_with?: InputMaybe<Scalars['String']>;\n  beanstalk_not_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  beanstalk_starts_with?: InputMaybe<Scalars['String']>;\n  beanstalk_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  dailySnapshots_?: InputMaybe<FieldDailySnapshot_Filter>;\n  farmer?: InputMaybe<Scalars['String']>;\n  farmer_?: InputMaybe<Farmer_Filter>;\n  farmer_contains?: InputMaybe<Scalars['String']>;\n  farmer_contains_nocase?: InputMaybe<Scalars['String']>;\n  farmer_ends_with?: InputMaybe<Scalars['String']>;\n  farmer_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  farmer_gt?: InputMaybe<Scalars['String']>;\n  farmer_gte?: InputMaybe<Scalars['String']>;\n  farmer_in?: InputMaybe<Array<Scalars['String']>>;\n  farmer_lt?: InputMaybe<Scalars['String']>;\n  farmer_lte?: InputMaybe<Scalars['String']>;\n  farmer_not?: InputMaybe<Scalars['String']>;\n  farmer_not_contains?: InputMaybe<Scalars['String']>;\n  farmer_not_contains_nocase?: InputMaybe<Scalars['String']>;\n  farmer_not_ends_with?: InputMaybe<Scalars['String']>;\n  farmer_not_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  farmer_not_in?: InputMaybe<Array<Scalars['String']>>;\n  farmer_not_starts_with?: InputMaybe<Scalars['String']>;\n  farmer_not_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  farmer_starts_with?: InputMaybe<Scalars['String']>;\n  farmer_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  hourlySnapshots_?: InputMaybe<FieldHourlySnapshot_Filter>;\n  id?: InputMaybe<Scalars['ID']>;\n  id_gt?: InputMaybe<Scalars['ID']>;\n  id_gte?: InputMaybe<Scalars['ID']>;\n  id_in?: InputMaybe<Array<Scalars['ID']>>;\n  id_lt?: InputMaybe<Scalars['ID']>;\n  id_lte?: InputMaybe<Scalars['ID']>;\n  id_not?: InputMaybe<Scalars['ID']>;\n  id_not_in?: InputMaybe<Array<Scalars['ID']>>;\n  plotIndexes?: InputMaybe<Array<Scalars['BigInt']>>;\n  plotIndexes_contains?: InputMaybe<Array<Scalars['BigInt']>>;\n  plotIndexes_contains_nocase?: InputMaybe<Array<Scalars['BigInt']>>;\n  plotIndexes_not?: InputMaybe<Array<Scalars['BigInt']>>;\n  plotIndexes_not_contains?: InputMaybe<Array<Scalars['BigInt']>>;\n  plotIndexes_not_contains_nocase?: InputMaybe<Array<Scalars['BigInt']>>;\n  podIndex?: InputMaybe<Scalars['BigInt']>;\n  podIndex_gt?: InputMaybe<Scalars['BigInt']>;\n  podIndex_gte?: InputMaybe<Scalars['BigInt']>;\n  podIndex_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  podIndex_lt?: InputMaybe<Scalars['BigInt']>;\n  podIndex_lte?: InputMaybe<Scalars['BigInt']>;\n  podIndex_not?: InputMaybe<Scalars['BigInt']>;\n  podIndex_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  podRate?: InputMaybe<Scalars['BigDecimal']>;\n  podRate_gt?: InputMaybe<Scalars['BigDecimal']>;\n  podRate_gte?: InputMaybe<Scalars['BigDecimal']>;\n  podRate_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n  podRate_lt?: InputMaybe<Scalars['BigDecimal']>;\n  podRate_lte?: InputMaybe<Scalars['BigDecimal']>;\n  podRate_not?: InputMaybe<Scalars['BigDecimal']>;\n  podRate_not_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n  realRateOfReturn?: InputMaybe<Scalars['BigDecimal']>;\n  realRateOfReturn_gt?: InputMaybe<Scalars['BigDecimal']>;\n  realRateOfReturn_gte?: InputMaybe<Scalars['BigDecimal']>;\n  realRateOfReturn_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n  realRateOfReturn_lt?: InputMaybe<Scalars['BigDecimal']>;\n  realRateOfReturn_lte?: InputMaybe<Scalars['BigDecimal']>;\n  realRateOfReturn_not?: InputMaybe<Scalars['BigDecimal']>;\n  realRateOfReturn_not_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n  season?: InputMaybe<Scalars['Int']>;\n  season_gt?: InputMaybe<Scalars['Int']>;\n  season_gte?: InputMaybe<Scalars['Int']>;\n  season_in?: InputMaybe<Array<Scalars['Int']>>;\n  season_lt?: InputMaybe<Scalars['Int']>;\n  season_lte?: InputMaybe<Scalars['Int']>;\n  season_not?: InputMaybe<Scalars['Int']>;\n  season_not_in?: InputMaybe<Array<Scalars['Int']>>;\n  totalHarvestablePods?: InputMaybe<Scalars['BigInt']>;\n  totalHarvestablePods_gt?: InputMaybe<Scalars['BigInt']>;\n  totalHarvestablePods_gte?: InputMaybe<Scalars['BigInt']>;\n  totalHarvestablePods_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  totalHarvestablePods_lt?: InputMaybe<Scalars['BigInt']>;\n  totalHarvestablePods_lte?: InputMaybe<Scalars['BigInt']>;\n  totalHarvestablePods_not?: InputMaybe<Scalars['BigInt']>;\n  totalHarvestablePods_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  totalHarvestedPods?: InputMaybe<Scalars['BigInt']>;\n  totalHarvestedPods_gt?: InputMaybe<Scalars['BigInt']>;\n  totalHarvestedPods_gte?: InputMaybe<Scalars['BigInt']>;\n  totalHarvestedPods_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  totalHarvestedPods_lt?: InputMaybe<Scalars['BigInt']>;\n  totalHarvestedPods_lte?: InputMaybe<Scalars['BigInt']>;\n  totalHarvestedPods_not?: InputMaybe<Scalars['BigInt']>;\n  totalHarvestedPods_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  totalNumberOfSowers?: InputMaybe<Scalars['Int']>;\n  totalNumberOfSowers_gt?: InputMaybe<Scalars['Int']>;\n  totalNumberOfSowers_gte?: InputMaybe<Scalars['Int']>;\n  totalNumberOfSowers_in?: InputMaybe<Array<Scalars['Int']>>;\n  totalNumberOfSowers_lt?: InputMaybe<Scalars['Int']>;\n  totalNumberOfSowers_lte?: InputMaybe<Scalars['Int']>;\n  totalNumberOfSowers_not?: InputMaybe<Scalars['Int']>;\n  totalNumberOfSowers_not_in?: InputMaybe<Array<Scalars['Int']>>;\n  totalNumberOfSows?: InputMaybe<Scalars['Int']>;\n  totalNumberOfSows_gt?: InputMaybe<Scalars['Int']>;\n  totalNumberOfSows_gte?: InputMaybe<Scalars['Int']>;\n  totalNumberOfSows_in?: InputMaybe<Array<Scalars['Int']>>;\n  totalNumberOfSows_lt?: InputMaybe<Scalars['Int']>;\n  totalNumberOfSows_lte?: InputMaybe<Scalars['Int']>;\n  totalNumberOfSows_not?: InputMaybe<Scalars['Int']>;\n  totalNumberOfSows_not_in?: InputMaybe<Array<Scalars['Int']>>;\n  totalPods?: InputMaybe<Scalars['BigInt']>;\n  totalPods_gt?: InputMaybe<Scalars['BigInt']>;\n  totalPods_gte?: InputMaybe<Scalars['BigInt']>;\n  totalPods_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  totalPods_lt?: InputMaybe<Scalars['BigInt']>;\n  totalPods_lte?: InputMaybe<Scalars['BigInt']>;\n  totalPods_not?: InputMaybe<Scalars['BigInt']>;\n  totalPods_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  totalSoil?: InputMaybe<Scalars['BigInt']>;\n  totalSoil_gt?: InputMaybe<Scalars['BigInt']>;\n  totalSoil_gte?: InputMaybe<Scalars['BigInt']>;\n  totalSoil_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  totalSoil_lt?: InputMaybe<Scalars['BigInt']>;\n  totalSoil_lte?: InputMaybe<Scalars['BigInt']>;\n  totalSoil_not?: InputMaybe<Scalars['BigInt']>;\n  totalSoil_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  totalSownBeans?: InputMaybe<Scalars['BigInt']>;\n  totalSownBeans_gt?: InputMaybe<Scalars['BigInt']>;\n  totalSownBeans_gte?: InputMaybe<Scalars['BigInt']>;\n  totalSownBeans_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  totalSownBeans_lt?: InputMaybe<Scalars['BigInt']>;\n  totalSownBeans_lte?: InputMaybe<Scalars['BigInt']>;\n  totalSownBeans_not?: InputMaybe<Scalars['BigInt']>;\n  totalSownBeans_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  weather?: InputMaybe<Scalars['Int']>;\n  weather_gt?: InputMaybe<Scalars['Int']>;\n  weather_gte?: InputMaybe<Scalars['Int']>;\n  weather_in?: InputMaybe<Array<Scalars['Int']>>;\n  weather_lt?: InputMaybe<Scalars['Int']>;\n  weather_lte?: InputMaybe<Scalars['Int']>;\n  weather_not?: InputMaybe<Scalars['Int']>;\n  weather_not_in?: InputMaybe<Array<Scalars['Int']>>;\n};\n\nexport enum Field_OrderBy {\n  Beanstalk = 'beanstalk',\n  DailySnapshots = 'dailySnapshots',\n  Farmer = 'farmer',\n  HourlySnapshots = 'hourlySnapshots',\n  Id = 'id',\n  PlotIndexes = 'plotIndexes',\n  PodIndex = 'podIndex',\n  PodRate = 'podRate',\n  RealRateOfReturn = 'realRateOfReturn',\n  Season = 'season',\n  TotalHarvestablePods = 'totalHarvestablePods',\n  TotalHarvestedPods = 'totalHarvestedPods',\n  TotalNumberOfSowers = 'totalNumberOfSowers',\n  TotalNumberOfSows = 'totalNumberOfSows',\n  TotalPods = 'totalPods',\n  TotalSoil = 'totalSoil',\n  TotalSownBeans = 'totalSownBeans',\n  Weather = 'weather'\n}\n\nexport type Harvest = FieldEvent & {\n  __typename?: 'Harvest';\n  /**  Total beans harvested  */\n  beans: Scalars['BigInt'];\n  /**  Block number of this event  */\n  blockNumber: Scalars['BigInt'];\n  /**  Address harvesting beans  */\n  farmer: Scalars['String'];\n  /**  Transaction hash of the transaction that emitted this event  */\n  hash: Scalars['String'];\n  /** harvest-{ Transaction hash }-{ Log index }  */\n  id: Scalars['ID'];\n  /**  Event log index. For transactions that don't emit event, create arbitrary index starting from 0  */\n  logIndex: Scalars['Int'];\n  /**  Plots being harvested  */\n  plots: Array<Scalars['BigInt']>;\n  /**  The protocol this transaction belongs to  */\n  protocol: Beanstalk;\n  /**  Timestamp of this event  */\n  timestamp: Scalars['BigInt'];\n};\n\nexport type Harvest_Filter = {\n  /** Filter for the block changed event. */\n  _change_block?: InputMaybe<BlockChangedFilter>;\n  beans?: InputMaybe<Scalars['BigInt']>;\n  beans_gt?: InputMaybe<Scalars['BigInt']>;\n  beans_gte?: InputMaybe<Scalars['BigInt']>;\n  beans_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  beans_lt?: InputMaybe<Scalars['BigInt']>;\n  beans_lte?: InputMaybe<Scalars['BigInt']>;\n  beans_not?: InputMaybe<Scalars['BigInt']>;\n  beans_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  blockNumber?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_gt?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_gte?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  blockNumber_lt?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_lte?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_not?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  farmer?: InputMaybe<Scalars['String']>;\n  farmer_contains?: InputMaybe<Scalars['String']>;\n  farmer_contains_nocase?: InputMaybe<Scalars['String']>;\n  farmer_ends_with?: InputMaybe<Scalars['String']>;\n  farmer_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  farmer_gt?: InputMaybe<Scalars['String']>;\n  farmer_gte?: InputMaybe<Scalars['String']>;\n  farmer_in?: InputMaybe<Array<Scalars['String']>>;\n  farmer_lt?: InputMaybe<Scalars['String']>;\n  farmer_lte?: InputMaybe<Scalars['String']>;\n  farmer_not?: InputMaybe<Scalars['String']>;\n  farmer_not_contains?: InputMaybe<Scalars['String']>;\n  farmer_not_contains_nocase?: InputMaybe<Scalars['String']>;\n  farmer_not_ends_with?: InputMaybe<Scalars['String']>;\n  farmer_not_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  farmer_not_in?: InputMaybe<Array<Scalars['String']>>;\n  farmer_not_starts_with?: InputMaybe<Scalars['String']>;\n  farmer_not_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  farmer_starts_with?: InputMaybe<Scalars['String']>;\n  farmer_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  hash?: InputMaybe<Scalars['String']>;\n  hash_contains?: InputMaybe<Scalars['String']>;\n  hash_contains_nocase?: InputMaybe<Scalars['String']>;\n  hash_ends_with?: InputMaybe<Scalars['String']>;\n  hash_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  hash_gt?: InputMaybe<Scalars['String']>;\n  hash_gte?: InputMaybe<Scalars['String']>;\n  hash_in?: InputMaybe<Array<Scalars['String']>>;\n  hash_lt?: InputMaybe<Scalars['String']>;\n  hash_lte?: InputMaybe<Scalars['String']>;\n  hash_not?: InputMaybe<Scalars['String']>;\n  hash_not_contains?: InputMaybe<Scalars['String']>;\n  hash_not_contains_nocase?: InputMaybe<Scalars['String']>;\n  hash_not_ends_with?: InputMaybe<Scalars['String']>;\n  hash_not_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  hash_not_in?: InputMaybe<Array<Scalars['String']>>;\n  hash_not_starts_with?: InputMaybe<Scalars['String']>;\n  hash_not_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  hash_starts_with?: InputMaybe<Scalars['String']>;\n  hash_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  id?: InputMaybe<Scalars['ID']>;\n  id_gt?: InputMaybe<Scalars['ID']>;\n  id_gte?: InputMaybe<Scalars['ID']>;\n  id_in?: InputMaybe<Array<Scalars['ID']>>;\n  id_lt?: InputMaybe<Scalars['ID']>;\n  id_lte?: InputMaybe<Scalars['ID']>;\n  id_not?: InputMaybe<Scalars['ID']>;\n  id_not_in?: InputMaybe<Array<Scalars['ID']>>;\n  logIndex?: InputMaybe<Scalars['Int']>;\n  logIndex_gt?: InputMaybe<Scalars['Int']>;\n  logIndex_gte?: InputMaybe<Scalars['Int']>;\n  logIndex_in?: InputMaybe<Array<Scalars['Int']>>;\n  logIndex_lt?: InputMaybe<Scalars['Int']>;\n  logIndex_lte?: InputMaybe<Scalars['Int']>;\n  logIndex_not?: InputMaybe<Scalars['Int']>;\n  logIndex_not_in?: InputMaybe<Array<Scalars['Int']>>;\n  plots?: InputMaybe<Array<Scalars['BigInt']>>;\n  plots_contains?: InputMaybe<Array<Scalars['BigInt']>>;\n  plots_contains_nocase?: InputMaybe<Array<Scalars['BigInt']>>;\n  plots_not?: InputMaybe<Array<Scalars['BigInt']>>;\n  plots_not_contains?: InputMaybe<Array<Scalars['BigInt']>>;\n  plots_not_contains_nocase?: InputMaybe<Array<Scalars['BigInt']>>;\n  protocol?: InputMaybe<Scalars['String']>;\n  protocol_?: InputMaybe<Beanstalk_Filter>;\n  protocol_contains?: InputMaybe<Scalars['String']>;\n  protocol_contains_nocase?: InputMaybe<Scalars['String']>;\n  protocol_ends_with?: InputMaybe<Scalars['String']>;\n  protocol_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  protocol_gt?: InputMaybe<Scalars['String']>;\n  protocol_gte?: InputMaybe<Scalars['String']>;\n  protocol_in?: InputMaybe<Array<Scalars['String']>>;\n  protocol_lt?: InputMaybe<Scalars['String']>;\n  protocol_lte?: InputMaybe<Scalars['String']>;\n  protocol_not?: InputMaybe<Scalars['String']>;\n  protocol_not_contains?: InputMaybe<Scalars['String']>;\n  protocol_not_contains_nocase?: InputMaybe<Scalars['String']>;\n  protocol_not_ends_with?: InputMaybe<Scalars['String']>;\n  protocol_not_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  protocol_not_in?: InputMaybe<Array<Scalars['String']>>;\n  protocol_not_starts_with?: InputMaybe<Scalars['String']>;\n  protocol_not_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  protocol_starts_with?: InputMaybe<Scalars['String']>;\n  protocol_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  timestamp?: InputMaybe<Scalars['BigInt']>;\n  timestamp_gt?: InputMaybe<Scalars['BigInt']>;\n  timestamp_gte?: InputMaybe<Scalars['BigInt']>;\n  timestamp_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  timestamp_lt?: InputMaybe<Scalars['BigInt']>;\n  timestamp_lte?: InputMaybe<Scalars['BigInt']>;\n  timestamp_not?: InputMaybe<Scalars['BigInt']>;\n  timestamp_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n};\n\nexport enum Harvest_OrderBy {\n  Beans = 'beans',\n  BlockNumber = 'blockNumber',\n  Farmer = 'farmer',\n  Hash = 'hash',\n  Id = 'id',\n  LogIndex = 'logIndex',\n  Plots = 'plots',\n  Protocol = 'protocol',\n  Timestamp = 'timestamp'\n}\n\nexport type Incentive = SiloEvent & {\n  __typename?: 'Incentive';\n  /**  Amount minted as incentive */\n  amount: Scalars['BigInt'];\n  /**  Block number of this event  */\n  blockNumber: Scalars['BigInt'];\n  /**  Address incentivized  */\n  caller: Scalars['String'];\n  /**  Transaction hash of the transaction that emitted this event  */\n  hash: Scalars['String'];\n  /** incentive-{ Transaction hash }-{ Log index } */\n  id: Scalars['ID'];\n  /**  Event log index. For transactions that don't emit event, create arbitrary index starting from 0  */\n  logIndex: Scalars['Int'];\n  /**  The protocol this transaction belongs to  */\n  protocol: Beanstalk;\n  /**  Timestamp of this event  */\n  timestamp: Scalars['BigInt'];\n};\n\nexport type Incentive_Filter = {\n  /** Filter for the block changed event. */\n  _change_block?: InputMaybe<BlockChangedFilter>;\n  amount?: InputMaybe<Scalars['BigInt']>;\n  amount_gt?: InputMaybe<Scalars['BigInt']>;\n  amount_gte?: InputMaybe<Scalars['BigInt']>;\n  amount_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  amount_lt?: InputMaybe<Scalars['BigInt']>;\n  amount_lte?: InputMaybe<Scalars['BigInt']>;\n  amount_not?: InputMaybe<Scalars['BigInt']>;\n  amount_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  blockNumber?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_gt?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_gte?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  blockNumber_lt?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_lte?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_not?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  caller?: InputMaybe<Scalars['String']>;\n  caller_contains?: InputMaybe<Scalars['String']>;\n  caller_contains_nocase?: InputMaybe<Scalars['String']>;\n  caller_ends_with?: InputMaybe<Scalars['String']>;\n  caller_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  caller_gt?: InputMaybe<Scalars['String']>;\n  caller_gte?: InputMaybe<Scalars['String']>;\n  caller_in?: InputMaybe<Array<Scalars['String']>>;\n  caller_lt?: InputMaybe<Scalars['String']>;\n  caller_lte?: InputMaybe<Scalars['String']>;\n  caller_not?: InputMaybe<Scalars['String']>;\n  caller_not_contains?: InputMaybe<Scalars['String']>;\n  caller_not_contains_nocase?: InputMaybe<Scalars['String']>;\n  caller_not_ends_with?: InputMaybe<Scalars['String']>;\n  caller_not_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  caller_not_in?: InputMaybe<Array<Scalars['String']>>;\n  caller_not_starts_with?: InputMaybe<Scalars['String']>;\n  caller_not_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  caller_starts_with?: InputMaybe<Scalars['String']>;\n  caller_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  hash?: InputMaybe<Scalars['String']>;\n  hash_contains?: InputMaybe<Scalars['String']>;\n  hash_contains_nocase?: InputMaybe<Scalars['String']>;\n  hash_ends_with?: InputMaybe<Scalars['String']>;\n  hash_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  hash_gt?: InputMaybe<Scalars['String']>;\n  hash_gte?: InputMaybe<Scalars['String']>;\n  hash_in?: InputMaybe<Array<Scalars['String']>>;\n  hash_lt?: InputMaybe<Scalars['String']>;\n  hash_lte?: InputMaybe<Scalars['String']>;\n  hash_not?: InputMaybe<Scalars['String']>;\n  hash_not_contains?: InputMaybe<Scalars['String']>;\n  hash_not_contains_nocase?: InputMaybe<Scalars['String']>;\n  hash_not_ends_with?: InputMaybe<Scalars['String']>;\n  hash_not_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  hash_not_in?: InputMaybe<Array<Scalars['String']>>;\n  hash_not_starts_with?: InputMaybe<Scalars['String']>;\n  hash_not_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  hash_starts_with?: InputMaybe<Scalars['String']>;\n  hash_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  id?: InputMaybe<Scalars['ID']>;\n  id_gt?: InputMaybe<Scalars['ID']>;\n  id_gte?: InputMaybe<Scalars['ID']>;\n  id_in?: InputMaybe<Array<Scalars['ID']>>;\n  id_lt?: InputMaybe<Scalars['ID']>;\n  id_lte?: InputMaybe<Scalars['ID']>;\n  id_not?: InputMaybe<Scalars['ID']>;\n  id_not_in?: InputMaybe<Array<Scalars['ID']>>;\n  logIndex?: InputMaybe<Scalars['Int']>;\n  logIndex_gt?: InputMaybe<Scalars['Int']>;\n  logIndex_gte?: InputMaybe<Scalars['Int']>;\n  logIndex_in?: InputMaybe<Array<Scalars['Int']>>;\n  logIndex_lt?: InputMaybe<Scalars['Int']>;\n  logIndex_lte?: InputMaybe<Scalars['Int']>;\n  logIndex_not?: InputMaybe<Scalars['Int']>;\n  logIndex_not_in?: InputMaybe<Array<Scalars['Int']>>;\n  protocol?: InputMaybe<Scalars['String']>;\n  protocol_?: InputMaybe<Beanstalk_Filter>;\n  protocol_contains?: InputMaybe<Scalars['String']>;\n  protocol_contains_nocase?: InputMaybe<Scalars['String']>;\n  protocol_ends_with?: InputMaybe<Scalars['String']>;\n  protocol_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  protocol_gt?: InputMaybe<Scalars['String']>;\n  protocol_gte?: InputMaybe<Scalars['String']>;\n  protocol_in?: InputMaybe<Array<Scalars['String']>>;\n  protocol_lt?: InputMaybe<Scalars['String']>;\n  protocol_lte?: InputMaybe<Scalars['String']>;\n  protocol_not?: InputMaybe<Scalars['String']>;\n  protocol_not_contains?: InputMaybe<Scalars['String']>;\n  protocol_not_contains_nocase?: InputMaybe<Scalars['String']>;\n  protocol_not_ends_with?: InputMaybe<Scalars['String']>;\n  protocol_not_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  protocol_not_in?: InputMaybe<Array<Scalars['String']>>;\n  protocol_not_starts_with?: InputMaybe<Scalars['String']>;\n  protocol_not_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  protocol_starts_with?: InputMaybe<Scalars['String']>;\n  protocol_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  timestamp?: InputMaybe<Scalars['BigInt']>;\n  timestamp_gt?: InputMaybe<Scalars['BigInt']>;\n  timestamp_gte?: InputMaybe<Scalars['BigInt']>;\n  timestamp_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  timestamp_lt?: InputMaybe<Scalars['BigInt']>;\n  timestamp_lte?: InputMaybe<Scalars['BigInt']>;\n  timestamp_not?: InputMaybe<Scalars['BigInt']>;\n  timestamp_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n};\n\nexport enum Incentive_OrderBy {\n  Amount = 'amount',\n  BlockNumber = 'blockNumber',\n  Caller = 'caller',\n  Hash = 'hash',\n  Id = 'id',\n  LogIndex = 'logIndex',\n  Protocol = 'protocol',\n  Timestamp = 'timestamp'\n}\n\nexport enum MarketStatus {\n  Active = 'ACTIVE',\n  Cancelled = 'CANCELLED',\n  CancelledPartial = 'CANCELLED_PARTIAL',\n  Expired = 'EXPIRED',\n  Filled = 'FILLED',\n  FilledPartial = 'FILLED_PARTIAL'\n}\n\nexport type MarketplaceEvent = {\n  /**  Block number of this event  */\n  blockNumber: Scalars['BigInt'];\n  /**  Transaction hash of the transaction that emitted this event  */\n  hash: Scalars['String'];\n  /**  { Event type }-{ Transaction hash }-{ Log index }  */\n  id: Scalars['ID'];\n  /**  Event log index. For transactions that don't emit event, create arbitrary index starting from 0  */\n  logIndex: Scalars['Int'];\n  /**  The protocol this transaction belongs to  */\n  protocol: Beanstalk;\n  /**  Timestamp of this event  */\n  timestamp: Scalars['BigInt'];\n};\n\nexport type MarketplaceEvent_Filter = {\n  /** Filter for the block changed event. */\n  _change_block?: InputMaybe<BlockChangedFilter>;\n  blockNumber?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_gt?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_gte?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  blockNumber_lt?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_lte?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_not?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  hash?: InputMaybe<Scalars['String']>;\n  hash_contains?: InputMaybe<Scalars['String']>;\n  hash_contains_nocase?: InputMaybe<Scalars['String']>;\n  hash_ends_with?: InputMaybe<Scalars['String']>;\n  hash_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  hash_gt?: InputMaybe<Scalars['String']>;\n  hash_gte?: InputMaybe<Scalars['String']>;\n  hash_in?: InputMaybe<Array<Scalars['String']>>;\n  hash_lt?: InputMaybe<Scalars['String']>;\n  hash_lte?: InputMaybe<Scalars['String']>;\n  hash_not?: InputMaybe<Scalars['String']>;\n  hash_not_contains?: InputMaybe<Scalars['String']>;\n  hash_not_contains_nocase?: InputMaybe<Scalars['String']>;\n  hash_not_ends_with?: InputMaybe<Scalars['String']>;\n  hash_not_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  hash_not_in?: InputMaybe<Array<Scalars['String']>>;\n  hash_not_starts_with?: InputMaybe<Scalars['String']>;\n  hash_not_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  hash_starts_with?: InputMaybe<Scalars['String']>;\n  hash_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  id?: InputMaybe<Scalars['ID']>;\n  id_gt?: InputMaybe<Scalars['ID']>;\n  id_gte?: InputMaybe<Scalars['ID']>;\n  id_in?: InputMaybe<Array<Scalars['ID']>>;\n  id_lt?: InputMaybe<Scalars['ID']>;\n  id_lte?: InputMaybe<Scalars['ID']>;\n  id_not?: InputMaybe<Scalars['ID']>;\n  id_not_in?: InputMaybe<Array<Scalars['ID']>>;\n  logIndex?: InputMaybe<Scalars['Int']>;\n  logIndex_gt?: InputMaybe<Scalars['Int']>;\n  logIndex_gte?: InputMaybe<Scalars['Int']>;\n  logIndex_in?: InputMaybe<Array<Scalars['Int']>>;\n  logIndex_lt?: InputMaybe<Scalars['Int']>;\n  logIndex_lte?: InputMaybe<Scalars['Int']>;\n  logIndex_not?: InputMaybe<Scalars['Int']>;\n  logIndex_not_in?: InputMaybe<Array<Scalars['Int']>>;\n  protocol?: InputMaybe<Scalars['String']>;\n  protocol_?: InputMaybe<Beanstalk_Filter>;\n  protocol_contains?: InputMaybe<Scalars['String']>;\n  protocol_contains_nocase?: InputMaybe<Scalars['String']>;\n  protocol_ends_with?: InputMaybe<Scalars['String']>;\n  protocol_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  protocol_gt?: InputMaybe<Scalars['String']>;\n  protocol_gte?: InputMaybe<Scalars['String']>;\n  protocol_in?: InputMaybe<Array<Scalars['String']>>;\n  protocol_lt?: InputMaybe<Scalars['String']>;\n  protocol_lte?: InputMaybe<Scalars['String']>;\n  protocol_not?: InputMaybe<Scalars['String']>;\n  protocol_not_contains?: InputMaybe<Scalars['String']>;\n  protocol_not_contains_nocase?: InputMaybe<Scalars['String']>;\n  protocol_not_ends_with?: InputMaybe<Scalars['String']>;\n  protocol_not_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  protocol_not_in?: InputMaybe<Array<Scalars['String']>>;\n  protocol_not_starts_with?: InputMaybe<Scalars['String']>;\n  protocol_not_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  protocol_starts_with?: InputMaybe<Scalars['String']>;\n  protocol_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  timestamp?: InputMaybe<Scalars['BigInt']>;\n  timestamp_gt?: InputMaybe<Scalars['BigInt']>;\n  timestamp_gte?: InputMaybe<Scalars['BigInt']>;\n  timestamp_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  timestamp_lt?: InputMaybe<Scalars['BigInt']>;\n  timestamp_lte?: InputMaybe<Scalars['BigInt']>;\n  timestamp_not?: InputMaybe<Scalars['BigInt']>;\n  timestamp_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n};\n\nexport enum MarketplaceEvent_OrderBy {\n  BlockNumber = 'blockNumber',\n  Hash = 'hash',\n  Id = 'id',\n  LogIndex = 'logIndex',\n  Protocol = 'protocol',\n  Timestamp = 'timestamp'\n}\n\nexport type MetapoolOracle = SiloEvent & {\n  __typename?: 'MetapoolOracle';\n  /**  Cumulative balance A */\n  balanceA: Scalars['BigInt'];\n  /**  Cumulative balance B */\n  balanceB: Scalars['BigInt'];\n  /**  Block number of this event  */\n  blockNumber: Scalars['BigInt'];\n  /**  DeltaB for season */\n  deltaB: Scalars['BigInt'];\n  /**  Transaction hash of the transaction that emitted this event  */\n  hash: Scalars['String'];\n  /** metapoolOracle-{ Transaction hash }-{ Log index } */\n  id: Scalars['ID'];\n  /**  Event log index. For transactions that don't emit event, create arbitrary index starting from 0  */\n  logIndex: Scalars['Int'];\n  /**  The protocol this transaction belongs to  */\n  protocol: Beanstalk;\n  /**  Season of oracle  */\n  season: Scalars['Int'];\n  /**  Timestamp of this event  */\n  timestamp: Scalars['BigInt'];\n};\n\nexport type MetapoolOracle_Filter = {\n  /** Filter for the block changed event. */\n  _change_block?: InputMaybe<BlockChangedFilter>;\n  balanceA?: InputMaybe<Scalars['BigInt']>;\n  balanceA_gt?: InputMaybe<Scalars['BigInt']>;\n  balanceA_gte?: InputMaybe<Scalars['BigInt']>;\n  balanceA_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  balanceA_lt?: InputMaybe<Scalars['BigInt']>;\n  balanceA_lte?: InputMaybe<Scalars['BigInt']>;\n  balanceA_not?: InputMaybe<Scalars['BigInt']>;\n  balanceA_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  balanceB?: InputMaybe<Scalars['BigInt']>;\n  balanceB_gt?: InputMaybe<Scalars['BigInt']>;\n  balanceB_gte?: InputMaybe<Scalars['BigInt']>;\n  balanceB_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  balanceB_lt?: InputMaybe<Scalars['BigInt']>;\n  balanceB_lte?: InputMaybe<Scalars['BigInt']>;\n  balanceB_not?: InputMaybe<Scalars['BigInt']>;\n  balanceB_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  blockNumber?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_gt?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_gte?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  blockNumber_lt?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_lte?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_not?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  deltaB?: InputMaybe<Scalars['BigInt']>;\n  deltaB_gt?: InputMaybe<Scalars['BigInt']>;\n  deltaB_gte?: InputMaybe<Scalars['BigInt']>;\n  deltaB_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  deltaB_lt?: InputMaybe<Scalars['BigInt']>;\n  deltaB_lte?: InputMaybe<Scalars['BigInt']>;\n  deltaB_not?: InputMaybe<Scalars['BigInt']>;\n  deltaB_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  hash?: InputMaybe<Scalars['String']>;\n  hash_contains?: InputMaybe<Scalars['String']>;\n  hash_contains_nocase?: InputMaybe<Scalars['String']>;\n  hash_ends_with?: InputMaybe<Scalars['String']>;\n  hash_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  hash_gt?: InputMaybe<Scalars['String']>;\n  hash_gte?: InputMaybe<Scalars['String']>;\n  hash_in?: InputMaybe<Array<Scalars['String']>>;\n  hash_lt?: InputMaybe<Scalars['String']>;\n  hash_lte?: InputMaybe<Scalars['String']>;\n  hash_not?: InputMaybe<Scalars['String']>;\n  hash_not_contains?: InputMaybe<Scalars['String']>;\n  hash_not_contains_nocase?: InputMaybe<Scalars['String']>;\n  hash_not_ends_with?: InputMaybe<Scalars['String']>;\n  hash_not_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  hash_not_in?: InputMaybe<Array<Scalars['String']>>;\n  hash_not_starts_with?: InputMaybe<Scalars['String']>;\n  hash_not_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  hash_starts_with?: InputMaybe<Scalars['String']>;\n  hash_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  id?: InputMaybe<Scalars['ID']>;\n  id_gt?: InputMaybe<Scalars['ID']>;\n  id_gte?: InputMaybe<Scalars['ID']>;\n  id_in?: InputMaybe<Array<Scalars['ID']>>;\n  id_lt?: InputMaybe<Scalars['ID']>;\n  id_lte?: InputMaybe<Scalars['ID']>;\n  id_not?: InputMaybe<Scalars['ID']>;\n  id_not_in?: InputMaybe<Array<Scalars['ID']>>;\n  logIndex?: InputMaybe<Scalars['Int']>;\n  logIndex_gt?: InputMaybe<Scalars['Int']>;\n  logIndex_gte?: InputMaybe<Scalars['Int']>;\n  logIndex_in?: InputMaybe<Array<Scalars['Int']>>;\n  logIndex_lt?: InputMaybe<Scalars['Int']>;\n  logIndex_lte?: InputMaybe<Scalars['Int']>;\n  logIndex_not?: InputMaybe<Scalars['Int']>;\n  logIndex_not_in?: InputMaybe<Array<Scalars['Int']>>;\n  protocol?: InputMaybe<Scalars['String']>;\n  protocol_?: InputMaybe<Beanstalk_Filter>;\n  protocol_contains?: InputMaybe<Scalars['String']>;\n  protocol_contains_nocase?: InputMaybe<Scalars['String']>;\n  protocol_ends_with?: InputMaybe<Scalars['String']>;\n  protocol_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  protocol_gt?: InputMaybe<Scalars['String']>;\n  protocol_gte?: InputMaybe<Scalars['String']>;\n  protocol_in?: InputMaybe<Array<Scalars['String']>>;\n  protocol_lt?: InputMaybe<Scalars['String']>;\n  protocol_lte?: InputMaybe<Scalars['String']>;\n  protocol_not?: InputMaybe<Scalars['String']>;\n  protocol_not_contains?: InputMaybe<Scalars['String']>;\n  protocol_not_contains_nocase?: InputMaybe<Scalars['String']>;\n  protocol_not_ends_with?: InputMaybe<Scalars['String']>;\n  protocol_not_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  protocol_not_in?: InputMaybe<Array<Scalars['String']>>;\n  protocol_not_starts_with?: InputMaybe<Scalars['String']>;\n  protocol_not_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  protocol_starts_with?: InputMaybe<Scalars['String']>;\n  protocol_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  season?: InputMaybe<Scalars['Int']>;\n  season_gt?: InputMaybe<Scalars['Int']>;\n  season_gte?: InputMaybe<Scalars['Int']>;\n  season_in?: InputMaybe<Array<Scalars['Int']>>;\n  season_lt?: InputMaybe<Scalars['Int']>;\n  season_lte?: InputMaybe<Scalars['Int']>;\n  season_not?: InputMaybe<Scalars['Int']>;\n  season_not_in?: InputMaybe<Array<Scalars['Int']>>;\n  timestamp?: InputMaybe<Scalars['BigInt']>;\n  timestamp_gt?: InputMaybe<Scalars['BigInt']>;\n  timestamp_gte?: InputMaybe<Scalars['BigInt']>;\n  timestamp_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  timestamp_lt?: InputMaybe<Scalars['BigInt']>;\n  timestamp_lte?: InputMaybe<Scalars['BigInt']>;\n  timestamp_not?: InputMaybe<Scalars['BigInt']>;\n  timestamp_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n};\n\nexport enum MetapoolOracle_OrderBy {\n  BalanceA = 'balanceA',\n  BalanceB = 'balanceB',\n  BlockNumber = 'blockNumber',\n  DeltaB = 'deltaB',\n  Hash = 'hash',\n  Id = 'id',\n  LogIndex = 'logIndex',\n  Protocol = 'protocol',\n  Season = 'season',\n  Timestamp = 'timestamp'\n}\n\nexport enum Network {\n  ArbitrumOne = 'ARBITRUM_ONE',\n  ArweaveMainnet = 'ARWEAVE_MAINNET',\n  Aurora = 'AURORA',\n  Avalanche = 'AVALANCHE',\n  Boba = 'BOBA',\n  Bsc = 'BSC',\n  Celo = 'CELO',\n  Cosmos = 'COSMOS',\n  Cronos = 'CRONOS',\n  Fantom = 'FANTOM',\n  Fuse = 'FUSE',\n  Harmony = 'HARMONY',\n  Juno = 'JUNO',\n  Mainnet = 'MAINNET',\n  Matic = 'MATIC',\n  Moonbeam = 'MOONBEAM',\n  Moonriver = 'MOONRIVER',\n  NearMainnet = 'NEAR_MAINNET',\n  Optimism = 'OPTIMISM',\n  Osmosis = 'OSMOSIS',\n  Xdai = 'XDAI'\n}\n\n/** Defines the order direction, either ascending or descending */\nexport enum OrderDirection {\n  Asc = 'asc',\n  Desc = 'desc'\n}\n\nexport type Plot = {\n  __typename?: 'Plot';\n  beans: Scalars['BigInt'];\n  createdAt: Scalars['BigInt'];\n  creationHash: Scalars['String'];\n  farmer: Farmer;\n  field: Field;\n  fullyHarvested: Scalars['Boolean'];\n  harvestablePods: Scalars['BigInt'];\n  harvestedPods: Scalars['BigInt'];\n  id: Scalars['ID'];\n  index: Scalars['BigInt'];\n  listing?: Maybe<PodListing>;\n  pods: Scalars['BigInt'];\n  season: Scalars['Int'];\n  /**  Event that created the plot  */\n  source: Scalars['String'];\n  sownPods: Scalars['BigInt'];\n  updatedAt: Scalars['BigInt'];\n  weather: Scalars['Int'];\n};\n\nexport type Plot_Filter = {\n  /** Filter for the block changed event. */\n  _change_block?: InputMaybe<BlockChangedFilter>;\n  beans?: InputMaybe<Scalars['BigInt']>;\n  beans_gt?: InputMaybe<Scalars['BigInt']>;\n  beans_gte?: InputMaybe<Scalars['BigInt']>;\n  beans_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  beans_lt?: InputMaybe<Scalars['BigInt']>;\n  beans_lte?: InputMaybe<Scalars['BigInt']>;\n  beans_not?: InputMaybe<Scalars['BigInt']>;\n  beans_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  createdAt?: InputMaybe<Scalars['BigInt']>;\n  createdAt_gt?: InputMaybe<Scalars['BigInt']>;\n  createdAt_gte?: InputMaybe<Scalars['BigInt']>;\n  createdAt_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  createdAt_lt?: InputMaybe<Scalars['BigInt']>;\n  createdAt_lte?: InputMaybe<Scalars['BigInt']>;\n  createdAt_not?: InputMaybe<Scalars['BigInt']>;\n  createdAt_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  creationHash?: InputMaybe<Scalars['String']>;\n  creationHash_contains?: InputMaybe<Scalars['String']>;\n  creationHash_contains_nocase?: InputMaybe<Scalars['String']>;\n  creationHash_ends_with?: InputMaybe<Scalars['String']>;\n  creationHash_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  creationHash_gt?: InputMaybe<Scalars['String']>;\n  creationHash_gte?: InputMaybe<Scalars['String']>;\n  creationHash_in?: InputMaybe<Array<Scalars['String']>>;\n  creationHash_lt?: InputMaybe<Scalars['String']>;\n  creationHash_lte?: InputMaybe<Scalars['String']>;\n  creationHash_not?: InputMaybe<Scalars['String']>;\n  creationHash_not_contains?: InputMaybe<Scalars['String']>;\n  creationHash_not_contains_nocase?: InputMaybe<Scalars['String']>;\n  creationHash_not_ends_with?: InputMaybe<Scalars['String']>;\n  creationHash_not_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  creationHash_not_in?: InputMaybe<Array<Scalars['String']>>;\n  creationHash_not_starts_with?: InputMaybe<Scalars['String']>;\n  creationHash_not_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  creationHash_starts_with?: InputMaybe<Scalars['String']>;\n  creationHash_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  farmer?: InputMaybe<Scalars['String']>;\n  farmer_?: InputMaybe<Farmer_Filter>;\n  farmer_contains?: InputMaybe<Scalars['String']>;\n  farmer_contains_nocase?: InputMaybe<Scalars['String']>;\n  farmer_ends_with?: InputMaybe<Scalars['String']>;\n  farmer_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  farmer_gt?: InputMaybe<Scalars['String']>;\n  farmer_gte?: InputMaybe<Scalars['String']>;\n  farmer_in?: InputMaybe<Array<Scalars['String']>>;\n  farmer_lt?: InputMaybe<Scalars['String']>;\n  farmer_lte?: InputMaybe<Scalars['String']>;\n  farmer_not?: InputMaybe<Scalars['String']>;\n  farmer_not_contains?: InputMaybe<Scalars['String']>;\n  farmer_not_contains_nocase?: InputMaybe<Scalars['String']>;\n  farmer_not_ends_with?: InputMaybe<Scalars['String']>;\n  farmer_not_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  farmer_not_in?: InputMaybe<Array<Scalars['String']>>;\n  farmer_not_starts_with?: InputMaybe<Scalars['String']>;\n  farmer_not_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  farmer_starts_with?: InputMaybe<Scalars['String']>;\n  farmer_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  field?: InputMaybe<Scalars['String']>;\n  field_?: InputMaybe<Field_Filter>;\n  field_contains?: InputMaybe<Scalars['String']>;\n  field_contains_nocase?: InputMaybe<Scalars['String']>;\n  field_ends_with?: InputMaybe<Scalars['String']>;\n  field_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  field_gt?: InputMaybe<Scalars['String']>;\n  field_gte?: InputMaybe<Scalars['String']>;\n  field_in?: InputMaybe<Array<Scalars['String']>>;\n  field_lt?: InputMaybe<Scalars['String']>;\n  field_lte?: InputMaybe<Scalars['String']>;\n  field_not?: InputMaybe<Scalars['String']>;\n  field_not_contains?: InputMaybe<Scalars['String']>;\n  field_not_contains_nocase?: InputMaybe<Scalars['String']>;\n  field_not_ends_with?: InputMaybe<Scalars['String']>;\n  field_not_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  field_not_in?: InputMaybe<Array<Scalars['String']>>;\n  field_not_starts_with?: InputMaybe<Scalars['String']>;\n  field_not_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  field_starts_with?: InputMaybe<Scalars['String']>;\n  field_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  fullyHarvested?: InputMaybe<Scalars['Boolean']>;\n  fullyHarvested_in?: InputMaybe<Array<Scalars['Boolean']>>;\n  fullyHarvested_not?: InputMaybe<Scalars['Boolean']>;\n  fullyHarvested_not_in?: InputMaybe<Array<Scalars['Boolean']>>;\n  harvestablePods?: InputMaybe<Scalars['BigInt']>;\n  harvestablePods_gt?: InputMaybe<Scalars['BigInt']>;\n  harvestablePods_gte?: InputMaybe<Scalars['BigInt']>;\n  harvestablePods_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  harvestablePods_lt?: InputMaybe<Scalars['BigInt']>;\n  harvestablePods_lte?: InputMaybe<Scalars['BigInt']>;\n  harvestablePods_not?: InputMaybe<Scalars['BigInt']>;\n  harvestablePods_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  harvestedPods?: InputMaybe<Scalars['BigInt']>;\n  harvestedPods_gt?: InputMaybe<Scalars['BigInt']>;\n  harvestedPods_gte?: InputMaybe<Scalars['BigInt']>;\n  harvestedPods_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  harvestedPods_lt?: InputMaybe<Scalars['BigInt']>;\n  harvestedPods_lte?: InputMaybe<Scalars['BigInt']>;\n  harvestedPods_not?: InputMaybe<Scalars['BigInt']>;\n  harvestedPods_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  id?: InputMaybe<Scalars['ID']>;\n  id_gt?: InputMaybe<Scalars['ID']>;\n  id_gte?: InputMaybe<Scalars['ID']>;\n  id_in?: InputMaybe<Array<Scalars['ID']>>;\n  id_lt?: InputMaybe<Scalars['ID']>;\n  id_lte?: InputMaybe<Scalars['ID']>;\n  id_not?: InputMaybe<Scalars['ID']>;\n  id_not_in?: InputMaybe<Array<Scalars['ID']>>;\n  index?: InputMaybe<Scalars['BigInt']>;\n  index_gt?: InputMaybe<Scalars['BigInt']>;\n  index_gte?: InputMaybe<Scalars['BigInt']>;\n  index_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  index_lt?: InputMaybe<Scalars['BigInt']>;\n  index_lte?: InputMaybe<Scalars['BigInt']>;\n  index_not?: InputMaybe<Scalars['BigInt']>;\n  index_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  listing?: InputMaybe<Scalars['String']>;\n  listing_?: InputMaybe<PodListing_Filter>;\n  listing_contains?: InputMaybe<Scalars['String']>;\n  listing_contains_nocase?: InputMaybe<Scalars['String']>;\n  listing_ends_with?: InputMaybe<Scalars['String']>;\n  listing_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  listing_gt?: InputMaybe<Scalars['String']>;\n  listing_gte?: InputMaybe<Scalars['String']>;\n  listing_in?: InputMaybe<Array<Scalars['String']>>;\n  listing_lt?: InputMaybe<Scalars['String']>;\n  listing_lte?: InputMaybe<Scalars['String']>;\n  listing_not?: InputMaybe<Scalars['String']>;\n  listing_not_contains?: InputMaybe<Scalars['String']>;\n  listing_not_contains_nocase?: InputMaybe<Scalars['String']>;\n  listing_not_ends_with?: InputMaybe<Scalars['String']>;\n  listing_not_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  listing_not_in?: InputMaybe<Array<Scalars['String']>>;\n  listing_not_starts_with?: InputMaybe<Scalars['String']>;\n  listing_not_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  listing_starts_with?: InputMaybe<Scalars['String']>;\n  listing_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  pods?: InputMaybe<Scalars['BigInt']>;\n  pods_gt?: InputMaybe<Scalars['BigInt']>;\n  pods_gte?: InputMaybe<Scalars['BigInt']>;\n  pods_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  pods_lt?: InputMaybe<Scalars['BigInt']>;\n  pods_lte?: InputMaybe<Scalars['BigInt']>;\n  pods_not?: InputMaybe<Scalars['BigInt']>;\n  pods_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  season?: InputMaybe<Scalars['Int']>;\n  season_gt?: InputMaybe<Scalars['Int']>;\n  season_gte?: InputMaybe<Scalars['Int']>;\n  season_in?: InputMaybe<Array<Scalars['Int']>>;\n  season_lt?: InputMaybe<Scalars['Int']>;\n  season_lte?: InputMaybe<Scalars['Int']>;\n  season_not?: InputMaybe<Scalars['Int']>;\n  season_not_in?: InputMaybe<Array<Scalars['Int']>>;\n  source?: InputMaybe<Scalars['String']>;\n  source_contains?: InputMaybe<Scalars['String']>;\n  source_contains_nocase?: InputMaybe<Scalars['String']>;\n  source_ends_with?: InputMaybe<Scalars['String']>;\n  source_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  source_gt?: InputMaybe<Scalars['String']>;\n  source_gte?: InputMaybe<Scalars['String']>;\n  source_in?: InputMaybe<Array<Scalars['String']>>;\n  source_lt?: InputMaybe<Scalars['String']>;\n  source_lte?: InputMaybe<Scalars['String']>;\n  source_not?: InputMaybe<Scalars['String']>;\n  source_not_contains?: InputMaybe<Scalars['String']>;\n  source_not_contains_nocase?: InputMaybe<Scalars['String']>;\n  source_not_ends_with?: InputMaybe<Scalars['String']>;\n  source_not_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  source_not_in?: InputMaybe<Array<Scalars['String']>>;\n  source_not_starts_with?: InputMaybe<Scalars['String']>;\n  source_not_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  source_starts_with?: InputMaybe<Scalars['String']>;\n  source_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  sownPods?: InputMaybe<Scalars['BigInt']>;\n  sownPods_gt?: InputMaybe<Scalars['BigInt']>;\n  sownPods_gte?: InputMaybe<Scalars['BigInt']>;\n  sownPods_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  sownPods_lt?: InputMaybe<Scalars['BigInt']>;\n  sownPods_lte?: InputMaybe<Scalars['BigInt']>;\n  sownPods_not?: InputMaybe<Scalars['BigInt']>;\n  sownPods_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  updatedAt?: InputMaybe<Scalars['BigInt']>;\n  updatedAt_gt?: InputMaybe<Scalars['BigInt']>;\n  updatedAt_gte?: InputMaybe<Scalars['BigInt']>;\n  updatedAt_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  updatedAt_lt?: InputMaybe<Scalars['BigInt']>;\n  updatedAt_lte?: InputMaybe<Scalars['BigInt']>;\n  updatedAt_not?: InputMaybe<Scalars['BigInt']>;\n  updatedAt_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  weather?: InputMaybe<Scalars['Int']>;\n  weather_gt?: InputMaybe<Scalars['Int']>;\n  weather_gte?: InputMaybe<Scalars['Int']>;\n  weather_in?: InputMaybe<Array<Scalars['Int']>>;\n  weather_lt?: InputMaybe<Scalars['Int']>;\n  weather_lte?: InputMaybe<Scalars['Int']>;\n  weather_not?: InputMaybe<Scalars['Int']>;\n  weather_not_in?: InputMaybe<Array<Scalars['Int']>>;\n};\n\nexport enum Plot_OrderBy {\n  Beans = 'beans',\n  CreatedAt = 'createdAt',\n  CreationHash = 'creationHash',\n  Farmer = 'farmer',\n  Field = 'field',\n  FullyHarvested = 'fullyHarvested',\n  HarvestablePods = 'harvestablePods',\n  HarvestedPods = 'harvestedPods',\n  Id = 'id',\n  Index = 'index',\n  Listing = 'listing',\n  Pods = 'pods',\n  Season = 'season',\n  Source = 'source',\n  SownPods = 'sownPods',\n  UpdatedAt = 'updatedAt',\n  Weather = 'weather'\n}\n\nexport type PodFill = {\n  __typename?: 'PodFill';\n  amount: Scalars['BigInt'];\n  createdAt: Scalars['BigInt'];\n  from: Scalars['String'];\n  id: Scalars['ID'];\n  index: Scalars['BigInt'];\n  listing?: Maybe<PodListing>;\n  order?: Maybe<PodOrder>;\n  podMarketplace: PodMarketplace;\n  start: Scalars['BigInt'];\n  to: Scalars['String'];\n};\n\nexport type PodFill_Filter = {\n  /** Filter for the block changed event. */\n  _change_block?: InputMaybe<BlockChangedFilter>;\n  amount?: InputMaybe<Scalars['BigInt']>;\n  amount_gt?: InputMaybe<Scalars['BigInt']>;\n  amount_gte?: InputMaybe<Scalars['BigInt']>;\n  amount_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  amount_lt?: InputMaybe<Scalars['BigInt']>;\n  amount_lte?: InputMaybe<Scalars['BigInt']>;\n  amount_not?: InputMaybe<Scalars['BigInt']>;\n  amount_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  createdAt?: InputMaybe<Scalars['BigInt']>;\n  createdAt_gt?: InputMaybe<Scalars['BigInt']>;\n  createdAt_gte?: InputMaybe<Scalars['BigInt']>;\n  createdAt_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  createdAt_lt?: InputMaybe<Scalars['BigInt']>;\n  createdAt_lte?: InputMaybe<Scalars['BigInt']>;\n  createdAt_not?: InputMaybe<Scalars['BigInt']>;\n  createdAt_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  from?: InputMaybe<Scalars['String']>;\n  from_contains?: InputMaybe<Scalars['String']>;\n  from_contains_nocase?: InputMaybe<Scalars['String']>;\n  from_ends_with?: InputMaybe<Scalars['String']>;\n  from_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  from_gt?: InputMaybe<Scalars['String']>;\n  from_gte?: InputMaybe<Scalars['String']>;\n  from_in?: InputMaybe<Array<Scalars['String']>>;\n  from_lt?: InputMaybe<Scalars['String']>;\n  from_lte?: InputMaybe<Scalars['String']>;\n  from_not?: InputMaybe<Scalars['String']>;\n  from_not_contains?: InputMaybe<Scalars['String']>;\n  from_not_contains_nocase?: InputMaybe<Scalars['String']>;\n  from_not_ends_with?: InputMaybe<Scalars['String']>;\n  from_not_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  from_not_in?: InputMaybe<Array<Scalars['String']>>;\n  from_not_starts_with?: InputMaybe<Scalars['String']>;\n  from_not_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  from_starts_with?: InputMaybe<Scalars['String']>;\n  from_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  id?: InputMaybe<Scalars['ID']>;\n  id_gt?: InputMaybe<Scalars['ID']>;\n  id_gte?: InputMaybe<Scalars['ID']>;\n  id_in?: InputMaybe<Array<Scalars['ID']>>;\n  id_lt?: InputMaybe<Scalars['ID']>;\n  id_lte?: InputMaybe<Scalars['ID']>;\n  id_not?: InputMaybe<Scalars['ID']>;\n  id_not_in?: InputMaybe<Array<Scalars['ID']>>;\n  index?: InputMaybe<Scalars['BigInt']>;\n  index_gt?: InputMaybe<Scalars['BigInt']>;\n  index_gte?: InputMaybe<Scalars['BigInt']>;\n  index_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  index_lt?: InputMaybe<Scalars['BigInt']>;\n  index_lte?: InputMaybe<Scalars['BigInt']>;\n  index_not?: InputMaybe<Scalars['BigInt']>;\n  index_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  listing?: InputMaybe<Scalars['String']>;\n  listing_?: InputMaybe<PodListing_Filter>;\n  listing_contains?: InputMaybe<Scalars['String']>;\n  listing_contains_nocase?: InputMaybe<Scalars['String']>;\n  listing_ends_with?: InputMaybe<Scalars['String']>;\n  listing_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  listing_gt?: InputMaybe<Scalars['String']>;\n  listing_gte?: InputMaybe<Scalars['String']>;\n  listing_in?: InputMaybe<Array<Scalars['String']>>;\n  listing_lt?: InputMaybe<Scalars['String']>;\n  listing_lte?: InputMaybe<Scalars['String']>;\n  listing_not?: InputMaybe<Scalars['String']>;\n  listing_not_contains?: InputMaybe<Scalars['String']>;\n  listing_not_contains_nocase?: InputMaybe<Scalars['String']>;\n  listing_not_ends_with?: InputMaybe<Scalars['String']>;\n  listing_not_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  listing_not_in?: InputMaybe<Array<Scalars['String']>>;\n  listing_not_starts_with?: InputMaybe<Scalars['String']>;\n  listing_not_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  listing_starts_with?: InputMaybe<Scalars['String']>;\n  listing_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  order?: InputMaybe<Scalars['String']>;\n  order_?: InputMaybe<PodOrder_Filter>;\n  order_contains?: InputMaybe<Scalars['String']>;\n  order_contains_nocase?: InputMaybe<Scalars['String']>;\n  order_ends_with?: InputMaybe<Scalars['String']>;\n  order_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  order_gt?: InputMaybe<Scalars['String']>;\n  order_gte?: InputMaybe<Scalars['String']>;\n  order_in?: InputMaybe<Array<Scalars['String']>>;\n  order_lt?: InputMaybe<Scalars['String']>;\n  order_lte?: InputMaybe<Scalars['String']>;\n  order_not?: InputMaybe<Scalars['String']>;\n  order_not_contains?: InputMaybe<Scalars['String']>;\n  order_not_contains_nocase?: InputMaybe<Scalars['String']>;\n  order_not_ends_with?: InputMaybe<Scalars['String']>;\n  order_not_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  order_not_in?: InputMaybe<Array<Scalars['String']>>;\n  order_not_starts_with?: InputMaybe<Scalars['String']>;\n  order_not_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  order_starts_with?: InputMaybe<Scalars['String']>;\n  order_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  podMarketplace?: InputMaybe<Scalars['String']>;\n  podMarketplace_?: InputMaybe<PodMarketplace_Filter>;\n  podMarketplace_contains?: InputMaybe<Scalars['String']>;\n  podMarketplace_contains_nocase?: InputMaybe<Scalars['String']>;\n  podMarketplace_ends_with?: InputMaybe<Scalars['String']>;\n  podMarketplace_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  podMarketplace_gt?: InputMaybe<Scalars['String']>;\n  podMarketplace_gte?: InputMaybe<Scalars['String']>;\n  podMarketplace_in?: InputMaybe<Array<Scalars['String']>>;\n  podMarketplace_lt?: InputMaybe<Scalars['String']>;\n  podMarketplace_lte?: InputMaybe<Scalars['String']>;\n  podMarketplace_not?: InputMaybe<Scalars['String']>;\n  podMarketplace_not_contains?: InputMaybe<Scalars['String']>;\n  podMarketplace_not_contains_nocase?: InputMaybe<Scalars['String']>;\n  podMarketplace_not_ends_with?: InputMaybe<Scalars['String']>;\n  podMarketplace_not_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  podMarketplace_not_in?: InputMaybe<Array<Scalars['String']>>;\n  podMarketplace_not_starts_with?: InputMaybe<Scalars['String']>;\n  podMarketplace_not_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  podMarketplace_starts_with?: InputMaybe<Scalars['String']>;\n  podMarketplace_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  start?: InputMaybe<Scalars['BigInt']>;\n  start_gt?: InputMaybe<Scalars['BigInt']>;\n  start_gte?: InputMaybe<Scalars['BigInt']>;\n  start_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  start_lt?: InputMaybe<Scalars['BigInt']>;\n  start_lte?: InputMaybe<Scalars['BigInt']>;\n  start_not?: InputMaybe<Scalars['BigInt']>;\n  start_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  to?: InputMaybe<Scalars['String']>;\n  to_contains?: InputMaybe<Scalars['String']>;\n  to_contains_nocase?: InputMaybe<Scalars['String']>;\n  to_ends_with?: InputMaybe<Scalars['String']>;\n  to_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  to_gt?: InputMaybe<Scalars['String']>;\n  to_gte?: InputMaybe<Scalars['String']>;\n  to_in?: InputMaybe<Array<Scalars['String']>>;\n  to_lt?: InputMaybe<Scalars['String']>;\n  to_lte?: InputMaybe<Scalars['String']>;\n  to_not?: InputMaybe<Scalars['String']>;\n  to_not_contains?: InputMaybe<Scalars['String']>;\n  to_not_contains_nocase?: InputMaybe<Scalars['String']>;\n  to_not_ends_with?: InputMaybe<Scalars['String']>;\n  to_not_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  to_not_in?: InputMaybe<Array<Scalars['String']>>;\n  to_not_starts_with?: InputMaybe<Scalars['String']>;\n  to_not_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  to_starts_with?: InputMaybe<Scalars['String']>;\n  to_starts_with_nocase?: InputMaybe<Scalars['String']>;\n};\n\nexport enum PodFill_OrderBy {\n  Amount = 'amount',\n  CreatedAt = 'createdAt',\n  From = 'from',\n  Id = 'id',\n  Index = 'index',\n  Listing = 'listing',\n  Order = 'order',\n  PodMarketplace = 'podMarketplace',\n  Start = 'start',\n  To = 'to'\n}\n\nexport type PodListing = {\n  __typename?: 'PodListing';\n  amount: Scalars['BigInt'];\n  cancelledAmount: Scalars['BigInt'];\n  createdAt: Scalars['BigInt'];\n  farmer: Farmer;\n  fill?: Maybe<PodFill>;\n  filledAmount: Scalars['BigInt'];\n  /**  Historical ID for joins */\n  historyID: Scalars['String'];\n  id: Scalars['ID'];\n  index: Scalars['BigInt'];\n  maxHarvestableIndex: Scalars['BigInt'];\n  mode: Scalars['Int'];\n  originalIndex: Scalars['BigInt'];\n  plot: Plot;\n  pricePerPod: Scalars['Int'];\n  remainingAmount: Scalars['BigInt'];\n  start: Scalars['BigInt'];\n  status: MarketStatus;\n  totalAmount: Scalars['BigInt'];\n  totalFilled: Scalars['BigInt'];\n  updatedAt: Scalars['BigInt'];\n};\n\nexport type PodListingCancelled = MarketplaceEvent & {\n  __typename?: 'PodListingCancelled';\n  /**  Account cancelling listing */\n  account: Scalars['String'];\n  /**  Block number of this event  */\n  blockNumber: Scalars['BigInt'];\n  /**  Transaction hash of the transaction that emitted this event  */\n  hash: Scalars['String'];\n  /**  Historical ID for joins */\n  historyID: Scalars['String'];\n  /** seedChange-{ Transaction hash }-{ Log index } */\n  id: Scalars['ID'];\n  /**  Index of plot listing being cancelled */\n  index: Scalars['BigInt'];\n  /**  Event log index. For transactions that don't emit event, create arbitrary index starting from 0  */\n  logIndex: Scalars['Int'];\n  /**  The protocol this transaction belongs to  */\n  protocol: Beanstalk;\n  /**  Timestamp of this event  */\n  timestamp: Scalars['BigInt'];\n};\n\nexport type PodListingCancelled_Filter = {\n  /** Filter for the block changed event. */\n  _change_block?: InputMaybe<BlockChangedFilter>;\n  account?: InputMaybe<Scalars['String']>;\n  account_contains?: InputMaybe<Scalars['String']>;\n  account_contains_nocase?: InputMaybe<Scalars['String']>;\n  account_ends_with?: InputMaybe<Scalars['String']>;\n  account_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  account_gt?: InputMaybe<Scalars['String']>;\n  account_gte?: InputMaybe<Scalars['String']>;\n  account_in?: InputMaybe<Array<Scalars['String']>>;\n  account_lt?: InputMaybe<Scalars['String']>;\n  account_lte?: InputMaybe<Scalars['String']>;\n  account_not?: InputMaybe<Scalars['String']>;\n  account_not_contains?: InputMaybe<Scalars['String']>;\n  account_not_contains_nocase?: InputMaybe<Scalars['String']>;\n  account_not_ends_with?: InputMaybe<Scalars['String']>;\n  account_not_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  account_not_in?: InputMaybe<Array<Scalars['String']>>;\n  account_not_starts_with?: InputMaybe<Scalars['String']>;\n  account_not_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  account_starts_with?: InputMaybe<Scalars['String']>;\n  account_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  blockNumber?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_gt?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_gte?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  blockNumber_lt?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_lte?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_not?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  hash?: InputMaybe<Scalars['String']>;\n  hash_contains?: InputMaybe<Scalars['String']>;\n  hash_contains_nocase?: InputMaybe<Scalars['String']>;\n  hash_ends_with?: InputMaybe<Scalars['String']>;\n  hash_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  hash_gt?: InputMaybe<Scalars['String']>;\n  hash_gte?: InputMaybe<Scalars['String']>;\n  hash_in?: InputMaybe<Array<Scalars['String']>>;\n  hash_lt?: InputMaybe<Scalars['String']>;\n  hash_lte?: InputMaybe<Scalars['String']>;\n  hash_not?: InputMaybe<Scalars['String']>;\n  hash_not_contains?: InputMaybe<Scalars['String']>;\n  hash_not_contains_nocase?: InputMaybe<Scalars['String']>;\n  hash_not_ends_with?: InputMaybe<Scalars['String']>;\n  hash_not_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  hash_not_in?: InputMaybe<Array<Scalars['String']>>;\n  hash_not_starts_with?: InputMaybe<Scalars['String']>;\n  hash_not_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  hash_starts_with?: InputMaybe<Scalars['String']>;\n  hash_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  historyID?: InputMaybe<Scalars['String']>;\n  historyID_contains?: InputMaybe<Scalars['String']>;\n  historyID_contains_nocase?: InputMaybe<Scalars['String']>;\n  historyID_ends_with?: InputMaybe<Scalars['String']>;\n  historyID_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  historyID_gt?: InputMaybe<Scalars['String']>;\n  historyID_gte?: InputMaybe<Scalars['String']>;\n  historyID_in?: InputMaybe<Array<Scalars['String']>>;\n  historyID_lt?: InputMaybe<Scalars['String']>;\n  historyID_lte?: InputMaybe<Scalars['String']>;\n  historyID_not?: InputMaybe<Scalars['String']>;\n  historyID_not_contains?: InputMaybe<Scalars['String']>;\n  historyID_not_contains_nocase?: InputMaybe<Scalars['String']>;\n  historyID_not_ends_with?: InputMaybe<Scalars['String']>;\n  historyID_not_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  historyID_not_in?: InputMaybe<Array<Scalars['String']>>;\n  historyID_not_starts_with?: InputMaybe<Scalars['String']>;\n  historyID_not_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  historyID_starts_with?: InputMaybe<Scalars['String']>;\n  historyID_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  id?: InputMaybe<Scalars['ID']>;\n  id_gt?: InputMaybe<Scalars['ID']>;\n  id_gte?: InputMaybe<Scalars['ID']>;\n  id_in?: InputMaybe<Array<Scalars['ID']>>;\n  id_lt?: InputMaybe<Scalars['ID']>;\n  id_lte?: InputMaybe<Scalars['ID']>;\n  id_not?: InputMaybe<Scalars['ID']>;\n  id_not_in?: InputMaybe<Array<Scalars['ID']>>;\n  index?: InputMaybe<Scalars['BigInt']>;\n  index_gt?: InputMaybe<Scalars['BigInt']>;\n  index_gte?: InputMaybe<Scalars['BigInt']>;\n  index_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  index_lt?: InputMaybe<Scalars['BigInt']>;\n  index_lte?: InputMaybe<Scalars['BigInt']>;\n  index_not?: InputMaybe<Scalars['BigInt']>;\n  index_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  logIndex?: InputMaybe<Scalars['Int']>;\n  logIndex_gt?: InputMaybe<Scalars['Int']>;\n  logIndex_gte?: InputMaybe<Scalars['Int']>;\n  logIndex_in?: InputMaybe<Array<Scalars['Int']>>;\n  logIndex_lt?: InputMaybe<Scalars['Int']>;\n  logIndex_lte?: InputMaybe<Scalars['Int']>;\n  logIndex_not?: InputMaybe<Scalars['Int']>;\n  logIndex_not_in?: InputMaybe<Array<Scalars['Int']>>;\n  protocol?: InputMaybe<Scalars['String']>;\n  protocol_?: InputMaybe<Beanstalk_Filter>;\n  protocol_contains?: InputMaybe<Scalars['String']>;\n  protocol_contains_nocase?: InputMaybe<Scalars['String']>;\n  protocol_ends_with?: InputMaybe<Scalars['String']>;\n  protocol_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  protocol_gt?: InputMaybe<Scalars['String']>;\n  protocol_gte?: InputMaybe<Scalars['String']>;\n  protocol_in?: InputMaybe<Array<Scalars['String']>>;\n  protocol_lt?: InputMaybe<Scalars['String']>;\n  protocol_lte?: InputMaybe<Scalars['String']>;\n  protocol_not?: InputMaybe<Scalars['String']>;\n  protocol_not_contains?: InputMaybe<Scalars['String']>;\n  protocol_not_contains_nocase?: InputMaybe<Scalars['String']>;\n  protocol_not_ends_with?: InputMaybe<Scalars['String']>;\n  protocol_not_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  protocol_not_in?: InputMaybe<Array<Scalars['String']>>;\n  protocol_not_starts_with?: InputMaybe<Scalars['String']>;\n  protocol_not_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  protocol_starts_with?: InputMaybe<Scalars['String']>;\n  protocol_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  timestamp?: InputMaybe<Scalars['BigInt']>;\n  timestamp_gt?: InputMaybe<Scalars['BigInt']>;\n  timestamp_gte?: InputMaybe<Scalars['BigInt']>;\n  timestamp_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  timestamp_lt?: InputMaybe<Scalars['BigInt']>;\n  timestamp_lte?: InputMaybe<Scalars['BigInt']>;\n  timestamp_not?: InputMaybe<Scalars['BigInt']>;\n  timestamp_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n};\n\nexport enum PodListingCancelled_OrderBy {\n  Account = 'account',\n  BlockNumber = 'blockNumber',\n  Hash = 'hash',\n  HistoryId = 'historyID',\n  Id = 'id',\n  Index = 'index',\n  LogIndex = 'logIndex',\n  Protocol = 'protocol',\n  Timestamp = 'timestamp'\n}\n\nexport type PodListingCreated = MarketplaceEvent & {\n  __typename?: 'PodListingCreated';\n  /**  Account creating the listing */\n  account: Scalars['String'];\n  /** Amount of pods listed */\n  amount: Scalars['BigInt'];\n  /**  Block number of this event  */\n  blockNumber: Scalars['BigInt'];\n  /**  Transaction hash of the transaction that emitted this event  */\n  hash: Scalars['String'];\n  /**  Historical ID for joins */\n  historyID: Scalars['String'];\n  /** podListingCreated-{ Transaction hash }-{ Log index } */\n  id: Scalars['ID'];\n  /**  Index of the plot listed */\n  index: Scalars['BigInt'];\n  /**  Event log index. For transactions that don't emit event, create arbitrary index starting from 0  */\n  logIndex: Scalars['Int'];\n  /** Max index for listing */\n  maxHarvestableIndex: Scalars['BigInt'];\n  /** Claim to location */\n  mode: Scalars['Int'];\n  /** Price per pod */\n  pricePerPod: Scalars['Int'];\n  /**  The protocol this transaction belongs to  */\n  protocol: Beanstalk;\n  /**  Start value of the plot listed  */\n  start: Scalars['BigInt'];\n  /**  Timestamp of this event  */\n  timestamp: Scalars['BigInt'];\n};\n\nexport type PodListingCreated_Filter = {\n  /** Filter for the block changed event. */\n  _change_block?: InputMaybe<BlockChangedFilter>;\n  account?: InputMaybe<Scalars['String']>;\n  account_contains?: InputMaybe<Scalars['String']>;\n  account_contains_nocase?: InputMaybe<Scalars['String']>;\n  account_ends_with?: InputMaybe<Scalars['String']>;\n  account_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  account_gt?: InputMaybe<Scalars['String']>;\n  account_gte?: InputMaybe<Scalars['String']>;\n  account_in?: InputMaybe<Array<Scalars['String']>>;\n  account_lt?: InputMaybe<Scalars['String']>;\n  account_lte?: InputMaybe<Scalars['String']>;\n  account_not?: InputMaybe<Scalars['String']>;\n  account_not_contains?: InputMaybe<Scalars['String']>;\n  account_not_contains_nocase?: InputMaybe<Scalars['String']>;\n  account_not_ends_with?: InputMaybe<Scalars['String']>;\n  account_not_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  account_not_in?: InputMaybe<Array<Scalars['String']>>;\n  account_not_starts_with?: InputMaybe<Scalars['String']>;\n  account_not_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  account_starts_with?: InputMaybe<Scalars['String']>;\n  account_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  amount?: InputMaybe<Scalars['BigInt']>;\n  amount_gt?: InputMaybe<Scalars['BigInt']>;\n  amount_gte?: InputMaybe<Scalars['BigInt']>;\n  amount_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  amount_lt?: InputMaybe<Scalars['BigInt']>;\n  amount_lte?: InputMaybe<Scalars['BigInt']>;\n  amount_not?: InputMaybe<Scalars['BigInt']>;\n  amount_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  blockNumber?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_gt?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_gte?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  blockNumber_lt?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_lte?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_not?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  hash?: InputMaybe<Scalars['String']>;\n  hash_contains?: InputMaybe<Scalars['String']>;\n  hash_contains_nocase?: InputMaybe<Scalars['String']>;\n  hash_ends_with?: InputMaybe<Scalars['String']>;\n  hash_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  hash_gt?: InputMaybe<Scalars['String']>;\n  hash_gte?: InputMaybe<Scalars['String']>;\n  hash_in?: InputMaybe<Array<Scalars['String']>>;\n  hash_lt?: InputMaybe<Scalars['String']>;\n  hash_lte?: InputMaybe<Scalars['String']>;\n  hash_not?: InputMaybe<Scalars['String']>;\n  hash_not_contains?: InputMaybe<Scalars['String']>;\n  hash_not_contains_nocase?: InputMaybe<Scalars['String']>;\n  hash_not_ends_with?: InputMaybe<Scalars['String']>;\n  hash_not_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  hash_not_in?: InputMaybe<Array<Scalars['String']>>;\n  hash_not_starts_with?: InputMaybe<Scalars['String']>;\n  hash_not_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  hash_starts_with?: InputMaybe<Scalars['String']>;\n  hash_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  historyID?: InputMaybe<Scalars['String']>;\n  historyID_contains?: InputMaybe<Scalars['String']>;\n  historyID_contains_nocase?: InputMaybe<Scalars['String']>;\n  historyID_ends_with?: InputMaybe<Scalars['String']>;\n  historyID_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  historyID_gt?: InputMaybe<Scalars['String']>;\n  historyID_gte?: InputMaybe<Scalars['String']>;\n  historyID_in?: InputMaybe<Array<Scalars['String']>>;\n  historyID_lt?: InputMaybe<Scalars['String']>;\n  historyID_lte?: InputMaybe<Scalars['String']>;\n  historyID_not?: InputMaybe<Scalars['String']>;\n  historyID_not_contains?: InputMaybe<Scalars['String']>;\n  historyID_not_contains_nocase?: InputMaybe<Scalars['String']>;\n  historyID_not_ends_with?: InputMaybe<Scalars['String']>;\n  historyID_not_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  historyID_not_in?: InputMaybe<Array<Scalars['String']>>;\n  historyID_not_starts_with?: InputMaybe<Scalars['String']>;\n  historyID_not_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  historyID_starts_with?: InputMaybe<Scalars['String']>;\n  historyID_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  id?: InputMaybe<Scalars['ID']>;\n  id_gt?: InputMaybe<Scalars['ID']>;\n  id_gte?: InputMaybe<Scalars['ID']>;\n  id_in?: InputMaybe<Array<Scalars['ID']>>;\n  id_lt?: InputMaybe<Scalars['ID']>;\n  id_lte?: InputMaybe<Scalars['ID']>;\n  id_not?: InputMaybe<Scalars['ID']>;\n  id_not_in?: InputMaybe<Array<Scalars['ID']>>;\n  index?: InputMaybe<Scalars['BigInt']>;\n  index_gt?: InputMaybe<Scalars['BigInt']>;\n  index_gte?: InputMaybe<Scalars['BigInt']>;\n  index_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  index_lt?: InputMaybe<Scalars['BigInt']>;\n  index_lte?: InputMaybe<Scalars['BigInt']>;\n  index_not?: InputMaybe<Scalars['BigInt']>;\n  index_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  logIndex?: InputMaybe<Scalars['Int']>;\n  logIndex_gt?: InputMaybe<Scalars['Int']>;\n  logIndex_gte?: InputMaybe<Scalars['Int']>;\n  logIndex_in?: InputMaybe<Array<Scalars['Int']>>;\n  logIndex_lt?: InputMaybe<Scalars['Int']>;\n  logIndex_lte?: InputMaybe<Scalars['Int']>;\n  logIndex_not?: InputMaybe<Scalars['Int']>;\n  logIndex_not_in?: InputMaybe<Array<Scalars['Int']>>;\n  maxHarvestableIndex?: InputMaybe<Scalars['BigInt']>;\n  maxHarvestableIndex_gt?: InputMaybe<Scalars['BigInt']>;\n  maxHarvestableIndex_gte?: InputMaybe<Scalars['BigInt']>;\n  maxHarvestableIndex_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  maxHarvestableIndex_lt?: InputMaybe<Scalars['BigInt']>;\n  maxHarvestableIndex_lte?: InputMaybe<Scalars['BigInt']>;\n  maxHarvestableIndex_not?: InputMaybe<Scalars['BigInt']>;\n  maxHarvestableIndex_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  mode?: InputMaybe<Scalars['Int']>;\n  mode_gt?: InputMaybe<Scalars['Int']>;\n  mode_gte?: InputMaybe<Scalars['Int']>;\n  mode_in?: InputMaybe<Array<Scalars['Int']>>;\n  mode_lt?: InputMaybe<Scalars['Int']>;\n  mode_lte?: InputMaybe<Scalars['Int']>;\n  mode_not?: InputMaybe<Scalars['Int']>;\n  mode_not_in?: InputMaybe<Array<Scalars['Int']>>;\n  pricePerPod?: InputMaybe<Scalars['Int']>;\n  pricePerPod_gt?: InputMaybe<Scalars['Int']>;\n  pricePerPod_gte?: InputMaybe<Scalars['Int']>;\n  pricePerPod_in?: InputMaybe<Array<Scalars['Int']>>;\n  pricePerPod_lt?: InputMaybe<Scalars['Int']>;\n  pricePerPod_lte?: InputMaybe<Scalars['Int']>;\n  pricePerPod_not?: InputMaybe<Scalars['Int']>;\n  pricePerPod_not_in?: InputMaybe<Array<Scalars['Int']>>;\n  protocol?: InputMaybe<Scalars['String']>;\n  protocol_?: InputMaybe<Beanstalk_Filter>;\n  protocol_contains?: InputMaybe<Scalars['String']>;\n  protocol_contains_nocase?: InputMaybe<Scalars['String']>;\n  protocol_ends_with?: InputMaybe<Scalars['String']>;\n  protocol_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  protocol_gt?: InputMaybe<Scalars['String']>;\n  protocol_gte?: InputMaybe<Scalars['String']>;\n  protocol_in?: InputMaybe<Array<Scalars['String']>>;\n  protocol_lt?: InputMaybe<Scalars['String']>;\n  protocol_lte?: InputMaybe<Scalars['String']>;\n  protocol_not?: InputMaybe<Scalars['String']>;\n  protocol_not_contains?: InputMaybe<Scalars['String']>;\n  protocol_not_contains_nocase?: InputMaybe<Scalars['String']>;\n  protocol_not_ends_with?: InputMaybe<Scalars['String']>;\n  protocol_not_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  protocol_not_in?: InputMaybe<Array<Scalars['String']>>;\n  protocol_not_starts_with?: InputMaybe<Scalars['String']>;\n  protocol_not_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  protocol_starts_with?: InputMaybe<Scalars['String']>;\n  protocol_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  start?: InputMaybe<Scalars['BigInt']>;\n  start_gt?: InputMaybe<Scalars['BigInt']>;\n  start_gte?: InputMaybe<Scalars['BigInt']>;\n  start_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  start_lt?: InputMaybe<Scalars['BigInt']>;\n  start_lte?: InputMaybe<Scalars['BigInt']>;\n  start_not?: InputMaybe<Scalars['BigInt']>;\n  start_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  timestamp?: InputMaybe<Scalars['BigInt']>;\n  timestamp_gt?: InputMaybe<Scalars['BigInt']>;\n  timestamp_gte?: InputMaybe<Scalars['BigInt']>;\n  timestamp_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  timestamp_lt?: InputMaybe<Scalars['BigInt']>;\n  timestamp_lte?: InputMaybe<Scalars['BigInt']>;\n  timestamp_not?: InputMaybe<Scalars['BigInt']>;\n  timestamp_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n};\n\nexport enum PodListingCreated_OrderBy {\n  Account = 'account',\n  Amount = 'amount',\n  BlockNumber = 'blockNumber',\n  Hash = 'hash',\n  HistoryId = 'historyID',\n  Id = 'id',\n  Index = 'index',\n  LogIndex = 'logIndex',\n  MaxHarvestableIndex = 'maxHarvestableIndex',\n  Mode = 'mode',\n  PricePerPod = 'pricePerPod',\n  Protocol = 'protocol',\n  Start = 'start',\n  Timestamp = 'timestamp'\n}\n\nexport type PodListingFilled = MarketplaceEvent & {\n  __typename?: 'PodListingFilled';\n  /** Number of pods transferred */\n  amount: Scalars['BigInt'];\n  /**  Block number of this event  */\n  blockNumber: Scalars['BigInt'];\n  /** Account selling pods */\n  from: Scalars['String'];\n  /**  Transaction hash of the transaction that emitted this event  */\n  hash: Scalars['String'];\n  /**  Historical ID for joins */\n  historyID: Scalars['String'];\n  /** podListingFilled-{ Transaction hash }-{ Log index } */\n  id: Scalars['ID'];\n  /** Index of the plot transferred */\n  index: Scalars['BigInt'];\n  /**  Event log index. For transactions that don't emit event, create arbitrary index starting from 0  */\n  logIndex: Scalars['Int'];\n  /**  The protocol this transaction belongs to  */\n  protocol: Beanstalk;\n  /** Start of the plot transferred */\n  start: Scalars['BigInt'];\n  /**  Timestamp of this event  */\n  timestamp: Scalars['BigInt'];\n  /** Account buying pods */\n  to: Scalars['String'];\n};\n\nexport type PodListingFilled_Filter = {\n  /** Filter for the block changed event. */\n  _change_block?: InputMaybe<BlockChangedFilter>;\n  amount?: InputMaybe<Scalars['BigInt']>;\n  amount_gt?: InputMaybe<Scalars['BigInt']>;\n  amount_gte?: InputMaybe<Scalars['BigInt']>;\n  amount_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  amount_lt?: InputMaybe<Scalars['BigInt']>;\n  amount_lte?: InputMaybe<Scalars['BigInt']>;\n  amount_not?: InputMaybe<Scalars['BigInt']>;\n  amount_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  blockNumber?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_gt?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_gte?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  blockNumber_lt?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_lte?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_not?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  from?: InputMaybe<Scalars['String']>;\n  from_contains?: InputMaybe<Scalars['String']>;\n  from_contains_nocase?: InputMaybe<Scalars['String']>;\n  from_ends_with?: InputMaybe<Scalars['String']>;\n  from_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  from_gt?: InputMaybe<Scalars['String']>;\n  from_gte?: InputMaybe<Scalars['String']>;\n  from_in?: InputMaybe<Array<Scalars['String']>>;\n  from_lt?: InputMaybe<Scalars['String']>;\n  from_lte?: InputMaybe<Scalars['String']>;\n  from_not?: InputMaybe<Scalars['String']>;\n  from_not_contains?: InputMaybe<Scalars['String']>;\n  from_not_contains_nocase?: InputMaybe<Scalars['String']>;\n  from_not_ends_with?: InputMaybe<Scalars['String']>;\n  from_not_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  from_not_in?: InputMaybe<Array<Scalars['String']>>;\n  from_not_starts_with?: InputMaybe<Scalars['String']>;\n  from_not_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  from_starts_with?: InputMaybe<Scalars['String']>;\n  from_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  hash?: InputMaybe<Scalars['String']>;\n  hash_contains?: InputMaybe<Scalars['String']>;\n  hash_contains_nocase?: InputMaybe<Scalars['String']>;\n  hash_ends_with?: InputMaybe<Scalars['String']>;\n  hash_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  hash_gt?: InputMaybe<Scalars['String']>;\n  hash_gte?: InputMaybe<Scalars['String']>;\n  hash_in?: InputMaybe<Array<Scalars['String']>>;\n  hash_lt?: InputMaybe<Scalars['String']>;\n  hash_lte?: InputMaybe<Scalars['String']>;\n  hash_not?: InputMaybe<Scalars['String']>;\n  hash_not_contains?: InputMaybe<Scalars['String']>;\n  hash_not_contains_nocase?: InputMaybe<Scalars['String']>;\n  hash_not_ends_with?: InputMaybe<Scalars['String']>;\n  hash_not_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  hash_not_in?: InputMaybe<Array<Scalars['String']>>;\n  hash_not_starts_with?: InputMaybe<Scalars['String']>;\n  hash_not_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  hash_starts_with?: InputMaybe<Scalars['String']>;\n  hash_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  historyID?: InputMaybe<Scalars['String']>;\n  historyID_contains?: InputMaybe<Scalars['String']>;\n  historyID_contains_nocase?: InputMaybe<Scalars['String']>;\n  historyID_ends_with?: InputMaybe<Scalars['String']>;\n  historyID_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  historyID_gt?: InputMaybe<Scalars['String']>;\n  historyID_gte?: InputMaybe<Scalars['String']>;\n  historyID_in?: InputMaybe<Array<Scalars['String']>>;\n  historyID_lt?: InputMaybe<Scalars['String']>;\n  historyID_lte?: InputMaybe<Scalars['String']>;\n  historyID_not?: InputMaybe<Scalars['String']>;\n  historyID_not_contains?: InputMaybe<Scalars['String']>;\n  historyID_not_contains_nocase?: InputMaybe<Scalars['String']>;\n  historyID_not_ends_with?: InputMaybe<Scalars['String']>;\n  historyID_not_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  historyID_not_in?: InputMaybe<Array<Scalars['String']>>;\n  historyID_not_starts_with?: InputMaybe<Scalars['String']>;\n  historyID_not_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  historyID_starts_with?: InputMaybe<Scalars['String']>;\n  historyID_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  id?: InputMaybe<Scalars['ID']>;\n  id_gt?: InputMaybe<Scalars['ID']>;\n  id_gte?: InputMaybe<Scalars['ID']>;\n  id_in?: InputMaybe<Array<Scalars['ID']>>;\n  id_lt?: InputMaybe<Scalars['ID']>;\n  id_lte?: InputMaybe<Scalars['ID']>;\n  id_not?: InputMaybe<Scalars['ID']>;\n  id_not_in?: InputMaybe<Array<Scalars['ID']>>;\n  index?: InputMaybe<Scalars['BigInt']>;\n  index_gt?: InputMaybe<Scalars['BigInt']>;\n  index_gte?: InputMaybe<Scalars['BigInt']>;\n  index_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  index_lt?: InputMaybe<Scalars['BigInt']>;\n  index_lte?: InputMaybe<Scalars['BigInt']>;\n  index_not?: InputMaybe<Scalars['BigInt']>;\n  index_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  logIndex?: InputMaybe<Scalars['Int']>;\n  logIndex_gt?: InputMaybe<Scalars['Int']>;\n  logIndex_gte?: InputMaybe<Scalars['Int']>;\n  logIndex_in?: InputMaybe<Array<Scalars['Int']>>;\n  logIndex_lt?: InputMaybe<Scalars['Int']>;\n  logIndex_lte?: InputMaybe<Scalars['Int']>;\n  logIndex_not?: InputMaybe<Scalars['Int']>;\n  logIndex_not_in?: InputMaybe<Array<Scalars['Int']>>;\n  protocol?: InputMaybe<Scalars['String']>;\n  protocol_?: InputMaybe<Beanstalk_Filter>;\n  protocol_contains?: InputMaybe<Scalars['String']>;\n  protocol_contains_nocase?: InputMaybe<Scalars['String']>;\n  protocol_ends_with?: InputMaybe<Scalars['String']>;\n  protocol_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  protocol_gt?: InputMaybe<Scalars['String']>;\n  protocol_gte?: InputMaybe<Scalars['String']>;\n  protocol_in?: InputMaybe<Array<Scalars['String']>>;\n  protocol_lt?: InputMaybe<Scalars['String']>;\n  protocol_lte?: InputMaybe<Scalars['String']>;\n  protocol_not?: InputMaybe<Scalars['String']>;\n  protocol_not_contains?: InputMaybe<Scalars['String']>;\n  protocol_not_contains_nocase?: InputMaybe<Scalars['String']>;\n  protocol_not_ends_with?: InputMaybe<Scalars['String']>;\n  protocol_not_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  protocol_not_in?: InputMaybe<Array<Scalars['String']>>;\n  protocol_not_starts_with?: InputMaybe<Scalars['String']>;\n  protocol_not_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  protocol_starts_with?: InputMaybe<Scalars['String']>;\n  protocol_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  start?: InputMaybe<Scalars['BigInt']>;\n  start_gt?: InputMaybe<Scalars['BigInt']>;\n  start_gte?: InputMaybe<Scalars['BigInt']>;\n  start_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  start_lt?: InputMaybe<Scalars['BigInt']>;\n  start_lte?: InputMaybe<Scalars['BigInt']>;\n  start_not?: InputMaybe<Scalars['BigInt']>;\n  start_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  timestamp?: InputMaybe<Scalars['BigInt']>;\n  timestamp_gt?: InputMaybe<Scalars['BigInt']>;\n  timestamp_gte?: InputMaybe<Scalars['BigInt']>;\n  timestamp_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  timestamp_lt?: InputMaybe<Scalars['BigInt']>;\n  timestamp_lte?: InputMaybe<Scalars['BigInt']>;\n  timestamp_not?: InputMaybe<Scalars['BigInt']>;\n  timestamp_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  to?: InputMaybe<Scalars['String']>;\n  to_contains?: InputMaybe<Scalars['String']>;\n  to_contains_nocase?: InputMaybe<Scalars['String']>;\n  to_ends_with?: InputMaybe<Scalars['String']>;\n  to_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  to_gt?: InputMaybe<Scalars['String']>;\n  to_gte?: InputMaybe<Scalars['String']>;\n  to_in?: InputMaybe<Array<Scalars['String']>>;\n  to_lt?: InputMaybe<Scalars['String']>;\n  to_lte?: InputMaybe<Scalars['String']>;\n  to_not?: InputMaybe<Scalars['String']>;\n  to_not_contains?: InputMaybe<Scalars['String']>;\n  to_not_contains_nocase?: InputMaybe<Scalars['String']>;\n  to_not_ends_with?: InputMaybe<Scalars['String']>;\n  to_not_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  to_not_in?: InputMaybe<Array<Scalars['String']>>;\n  to_not_starts_with?: InputMaybe<Scalars['String']>;\n  to_not_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  to_starts_with?: InputMaybe<Scalars['String']>;\n  to_starts_with_nocase?: InputMaybe<Scalars['String']>;\n};\n\nexport enum PodListingFilled_OrderBy {\n  Amount = 'amount',\n  BlockNumber = 'blockNumber',\n  From = 'from',\n  Hash = 'hash',\n  HistoryId = 'historyID',\n  Id = 'id',\n  Index = 'index',\n  LogIndex = 'logIndex',\n  Protocol = 'protocol',\n  Start = 'start',\n  Timestamp = 'timestamp',\n  To = 'to'\n}\n\nexport type PodListing_Filter = {\n  /** Filter for the block changed event. */\n  _change_block?: InputMaybe<BlockChangedFilter>;\n  amount?: InputMaybe<Scalars['BigInt']>;\n  amount_gt?: InputMaybe<Scalars['BigInt']>;\n  amount_gte?: InputMaybe<Scalars['BigInt']>;\n  amount_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  amount_lt?: InputMaybe<Scalars['BigInt']>;\n  amount_lte?: InputMaybe<Scalars['BigInt']>;\n  amount_not?: InputMaybe<Scalars['BigInt']>;\n  amount_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  cancelledAmount?: InputMaybe<Scalars['BigInt']>;\n  cancelledAmount_gt?: InputMaybe<Scalars['BigInt']>;\n  cancelledAmount_gte?: InputMaybe<Scalars['BigInt']>;\n  cancelledAmount_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  cancelledAmount_lt?: InputMaybe<Scalars['BigInt']>;\n  cancelledAmount_lte?: InputMaybe<Scalars['BigInt']>;\n  cancelledAmount_not?: InputMaybe<Scalars['BigInt']>;\n  cancelledAmount_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  createdAt?: InputMaybe<Scalars['BigInt']>;\n  createdAt_gt?: InputMaybe<Scalars['BigInt']>;\n  createdAt_gte?: InputMaybe<Scalars['BigInt']>;\n  createdAt_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  createdAt_lt?: InputMaybe<Scalars['BigInt']>;\n  createdAt_lte?: InputMaybe<Scalars['BigInt']>;\n  createdAt_not?: InputMaybe<Scalars['BigInt']>;\n  createdAt_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  farmer?: InputMaybe<Scalars['String']>;\n  farmer_?: InputMaybe<Farmer_Filter>;\n  farmer_contains?: InputMaybe<Scalars['String']>;\n  farmer_contains_nocase?: InputMaybe<Scalars['String']>;\n  farmer_ends_with?: InputMaybe<Scalars['String']>;\n  farmer_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  farmer_gt?: InputMaybe<Scalars['String']>;\n  farmer_gte?: InputMaybe<Scalars['String']>;\n  farmer_in?: InputMaybe<Array<Scalars['String']>>;\n  farmer_lt?: InputMaybe<Scalars['String']>;\n  farmer_lte?: InputMaybe<Scalars['String']>;\n  farmer_not?: InputMaybe<Scalars['String']>;\n  farmer_not_contains?: InputMaybe<Scalars['String']>;\n  farmer_not_contains_nocase?: InputMaybe<Scalars['String']>;\n  farmer_not_ends_with?: InputMaybe<Scalars['String']>;\n  farmer_not_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  farmer_not_in?: InputMaybe<Array<Scalars['String']>>;\n  farmer_not_starts_with?: InputMaybe<Scalars['String']>;\n  farmer_not_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  farmer_starts_with?: InputMaybe<Scalars['String']>;\n  farmer_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  fill?: InputMaybe<Scalars['String']>;\n  fill_?: InputMaybe<PodFill_Filter>;\n  fill_contains?: InputMaybe<Scalars['String']>;\n  fill_contains_nocase?: InputMaybe<Scalars['String']>;\n  fill_ends_with?: InputMaybe<Scalars['String']>;\n  fill_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  fill_gt?: InputMaybe<Scalars['String']>;\n  fill_gte?: InputMaybe<Scalars['String']>;\n  fill_in?: InputMaybe<Array<Scalars['String']>>;\n  fill_lt?: InputMaybe<Scalars['String']>;\n  fill_lte?: InputMaybe<Scalars['String']>;\n  fill_not?: InputMaybe<Scalars['String']>;\n  fill_not_contains?: InputMaybe<Scalars['String']>;\n  fill_not_contains_nocase?: InputMaybe<Scalars['String']>;\n  fill_not_ends_with?: InputMaybe<Scalars['String']>;\n  fill_not_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  fill_not_in?: InputMaybe<Array<Scalars['String']>>;\n  fill_not_starts_with?: InputMaybe<Scalars['String']>;\n  fill_not_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  fill_starts_with?: InputMaybe<Scalars['String']>;\n  fill_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  filledAmount?: InputMaybe<Scalars['BigInt']>;\n  filledAmount_gt?: InputMaybe<Scalars['BigInt']>;\n  filledAmount_gte?: InputMaybe<Scalars['BigInt']>;\n  filledAmount_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  filledAmount_lt?: InputMaybe<Scalars['BigInt']>;\n  filledAmount_lte?: InputMaybe<Scalars['BigInt']>;\n  filledAmount_not?: InputMaybe<Scalars['BigInt']>;\n  filledAmount_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  historyID?: InputMaybe<Scalars['String']>;\n  historyID_contains?: InputMaybe<Scalars['String']>;\n  historyID_contains_nocase?: InputMaybe<Scalars['String']>;\n  historyID_ends_with?: InputMaybe<Scalars['String']>;\n  historyID_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  historyID_gt?: InputMaybe<Scalars['String']>;\n  historyID_gte?: InputMaybe<Scalars['String']>;\n  historyID_in?: InputMaybe<Array<Scalars['String']>>;\n  historyID_lt?: InputMaybe<Scalars['String']>;\n  historyID_lte?: InputMaybe<Scalars['String']>;\n  historyID_not?: InputMaybe<Scalars['String']>;\n  historyID_not_contains?: InputMaybe<Scalars['String']>;\n  historyID_not_contains_nocase?: InputMaybe<Scalars['String']>;\n  historyID_not_ends_with?: InputMaybe<Scalars['String']>;\n  historyID_not_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  historyID_not_in?: InputMaybe<Array<Scalars['String']>>;\n  historyID_not_starts_with?: InputMaybe<Scalars['String']>;\n  historyID_not_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  historyID_starts_with?: InputMaybe<Scalars['String']>;\n  historyID_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  id?: InputMaybe<Scalars['ID']>;\n  id_gt?: InputMaybe<Scalars['ID']>;\n  id_gte?: InputMaybe<Scalars['ID']>;\n  id_in?: InputMaybe<Array<Scalars['ID']>>;\n  id_lt?: InputMaybe<Scalars['ID']>;\n  id_lte?: InputMaybe<Scalars['ID']>;\n  id_not?: InputMaybe<Scalars['ID']>;\n  id_not_in?: InputMaybe<Array<Scalars['ID']>>;\n  index?: InputMaybe<Scalars['BigInt']>;\n  index_gt?: InputMaybe<Scalars['BigInt']>;\n  index_gte?: InputMaybe<Scalars['BigInt']>;\n  index_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  index_lt?: InputMaybe<Scalars['BigInt']>;\n  index_lte?: InputMaybe<Scalars['BigInt']>;\n  index_not?: InputMaybe<Scalars['BigInt']>;\n  index_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  maxHarvestableIndex?: InputMaybe<Scalars['BigInt']>;\n  maxHarvestableIndex_gt?: InputMaybe<Scalars['BigInt']>;\n  maxHarvestableIndex_gte?: InputMaybe<Scalars['BigInt']>;\n  maxHarvestableIndex_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  maxHarvestableIndex_lt?: InputMaybe<Scalars['BigInt']>;\n  maxHarvestableIndex_lte?: InputMaybe<Scalars['BigInt']>;\n  maxHarvestableIndex_not?: InputMaybe<Scalars['BigInt']>;\n  maxHarvestableIndex_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  mode?: InputMaybe<Scalars['Int']>;\n  mode_gt?: InputMaybe<Scalars['Int']>;\n  mode_gte?: InputMaybe<Scalars['Int']>;\n  mode_in?: InputMaybe<Array<Scalars['Int']>>;\n  mode_lt?: InputMaybe<Scalars['Int']>;\n  mode_lte?: InputMaybe<Scalars['Int']>;\n  mode_not?: InputMaybe<Scalars['Int']>;\n  mode_not_in?: InputMaybe<Array<Scalars['Int']>>;\n  originalIndex?: InputMaybe<Scalars['BigInt']>;\n  originalIndex_gt?: InputMaybe<Scalars['BigInt']>;\n  originalIndex_gte?: InputMaybe<Scalars['BigInt']>;\n  originalIndex_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  originalIndex_lt?: InputMaybe<Scalars['BigInt']>;\n  originalIndex_lte?: InputMaybe<Scalars['BigInt']>;\n  originalIndex_not?: InputMaybe<Scalars['BigInt']>;\n  originalIndex_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  plot?: InputMaybe<Scalars['String']>;\n  plot_?: InputMaybe<Plot_Filter>;\n  plot_contains?: InputMaybe<Scalars['String']>;\n  plot_contains_nocase?: InputMaybe<Scalars['String']>;\n  plot_ends_with?: InputMaybe<Scalars['String']>;\n  plot_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  plot_gt?: InputMaybe<Scalars['String']>;\n  plot_gte?: InputMaybe<Scalars['String']>;\n  plot_in?: InputMaybe<Array<Scalars['String']>>;\n  plot_lt?: InputMaybe<Scalars['String']>;\n  plot_lte?: InputMaybe<Scalars['String']>;\n  plot_not?: InputMaybe<Scalars['String']>;\n  plot_not_contains?: InputMaybe<Scalars['String']>;\n  plot_not_contains_nocase?: InputMaybe<Scalars['String']>;\n  plot_not_ends_with?: InputMaybe<Scalars['String']>;\n  plot_not_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  plot_not_in?: InputMaybe<Array<Scalars['String']>>;\n  plot_not_starts_with?: InputMaybe<Scalars['String']>;\n  plot_not_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  plot_starts_with?: InputMaybe<Scalars['String']>;\n  plot_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  pricePerPod?: InputMaybe<Scalars['Int']>;\n  pricePerPod_gt?: InputMaybe<Scalars['Int']>;\n  pricePerPod_gte?: InputMaybe<Scalars['Int']>;\n  pricePerPod_in?: InputMaybe<Array<Scalars['Int']>>;\n  pricePerPod_lt?: InputMaybe<Scalars['Int']>;\n  pricePerPod_lte?: InputMaybe<Scalars['Int']>;\n  pricePerPod_not?: InputMaybe<Scalars['Int']>;\n  pricePerPod_not_in?: InputMaybe<Array<Scalars['Int']>>;\n  remainingAmount?: InputMaybe<Scalars['BigInt']>;\n  remainingAmount_gt?: InputMaybe<Scalars['BigInt']>;\n  remainingAmount_gte?: InputMaybe<Scalars['BigInt']>;\n  remainingAmount_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  remainingAmount_lt?: InputMaybe<Scalars['BigInt']>;\n  remainingAmount_lte?: InputMaybe<Scalars['BigInt']>;\n  remainingAmount_not?: InputMaybe<Scalars['BigInt']>;\n  remainingAmount_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  start?: InputMaybe<Scalars['BigInt']>;\n  start_gt?: InputMaybe<Scalars['BigInt']>;\n  start_gte?: InputMaybe<Scalars['BigInt']>;\n  start_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  start_lt?: InputMaybe<Scalars['BigInt']>;\n  start_lte?: InputMaybe<Scalars['BigInt']>;\n  start_not?: InputMaybe<Scalars['BigInt']>;\n  start_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  status?: InputMaybe<MarketStatus>;\n  status_in?: InputMaybe<Array<MarketStatus>>;\n  status_not?: InputMaybe<MarketStatus>;\n  status_not_in?: InputMaybe<Array<MarketStatus>>;\n  totalAmount?: InputMaybe<Scalars['BigInt']>;\n  totalAmount_gt?: InputMaybe<Scalars['BigInt']>;\n  totalAmount_gte?: InputMaybe<Scalars['BigInt']>;\n  totalAmount_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  totalAmount_lt?: InputMaybe<Scalars['BigInt']>;\n  totalAmount_lte?: InputMaybe<Scalars['BigInt']>;\n  totalAmount_not?: InputMaybe<Scalars['BigInt']>;\n  totalAmount_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  totalFilled?: InputMaybe<Scalars['BigInt']>;\n  totalFilled_gt?: InputMaybe<Scalars['BigInt']>;\n  totalFilled_gte?: InputMaybe<Scalars['BigInt']>;\n  totalFilled_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  totalFilled_lt?: InputMaybe<Scalars['BigInt']>;\n  totalFilled_lte?: InputMaybe<Scalars['BigInt']>;\n  totalFilled_not?: InputMaybe<Scalars['BigInt']>;\n  totalFilled_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  updatedAt?: InputMaybe<Scalars['BigInt']>;\n  updatedAt_gt?: InputMaybe<Scalars['BigInt']>;\n  updatedAt_gte?: InputMaybe<Scalars['BigInt']>;\n  updatedAt_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  updatedAt_lt?: InputMaybe<Scalars['BigInt']>;\n  updatedAt_lte?: InputMaybe<Scalars['BigInt']>;\n  updatedAt_not?: InputMaybe<Scalars['BigInt']>;\n  updatedAt_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n};\n\nexport enum PodListing_OrderBy {\n  Amount = 'amount',\n  CancelledAmount = 'cancelledAmount',\n  CreatedAt = 'createdAt',\n  Farmer = 'farmer',\n  Fill = 'fill',\n  FilledAmount = 'filledAmount',\n  HistoryId = 'historyID',\n  Id = 'id',\n  Index = 'index',\n  MaxHarvestableIndex = 'maxHarvestableIndex',\n  Mode = 'mode',\n  OriginalIndex = 'originalIndex',\n  Plot = 'plot',\n  PricePerPod = 'pricePerPod',\n  RemainingAmount = 'remainingAmount',\n  Start = 'start',\n  Status = 'status',\n  TotalAmount = 'totalAmount',\n  TotalFilled = 'totalFilled',\n  UpdatedAt = 'updatedAt'\n}\n\nexport type PodMarketplace = {\n  __typename?: 'PodMarketplace';\n  dailySnapshots: Array<PodMarketplaceDailySnapshot>;\n  fills: Array<PodFill>;\n  hourlySnapshots: Array<PodMarketplaceHourlySnapshot>;\n  /**  Contract address of beanstalk or farmer  */\n  id: Scalars['ID'];\n  listingIndexes: Array<Scalars['BigInt']>;\n  orders: Array<PodOrder>;\n  season: Scalars['Int'];\n  totalBeanVolume: Scalars['BigInt'];\n  totalOrdersCancelled: Scalars['BigInt'];\n  totalOrdersCreated: Scalars['BigInt'];\n  totalOrdersFilled: Scalars['BigInt'];\n  totalPodVolume: Scalars['BigInt'];\n  totalPodsAvailable: Scalars['BigInt'];\n  totalPodsCancelled: Scalars['BigInt'];\n  totalPodsExpired: Scalars['BigInt'];\n  totalPodsFilled: Scalars['BigInt'];\n  totalPodsListed: Scalars['BigInt'];\n};\n\n\nexport type PodMarketplaceDailySnapshotsArgs = {\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<PodMarketplaceDailySnapshot_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  where?: InputMaybe<PodMarketplaceDailySnapshot_Filter>;\n};\n\n\nexport type PodMarketplaceFillsArgs = {\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<PodFill_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  where?: InputMaybe<PodFill_Filter>;\n};\n\n\nexport type PodMarketplaceHourlySnapshotsArgs = {\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<PodMarketplaceHourlySnapshot_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  where?: InputMaybe<PodMarketplaceHourlySnapshot_Filter>;\n};\n\n\nexport type PodMarketplaceOrdersArgs = {\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<PodOrder_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  where?: InputMaybe<PodOrder_Filter>;\n};\n\nexport type PodMarketplaceDailySnapshot = {\n  __typename?: 'PodMarketplaceDailySnapshot';\n  blockNumber: Scalars['BigInt'];\n  id: Scalars['ID'];\n  newBeanVolume: Scalars['BigInt'];\n  newOrdersCancelled: Scalars['BigInt'];\n  newOrdersCreated: Scalars['BigInt'];\n  newOrdersFilled: Scalars['BigInt'];\n  newPodVolume: Scalars['BigInt'];\n  newPodsAvailable: Scalars['BigInt'];\n  newPodsCancelled: Scalars['BigInt'];\n  newPodsExpired: Scalars['BigInt'];\n  newPodsFilled: Scalars['BigInt'];\n  newPodsListed: Scalars['BigInt'];\n  podMarketplace: PodMarketplace;\n  season: Scalars['Int'];\n  timestamp: Scalars['BigInt'];\n  totalBeanVolume: Scalars['BigInt'];\n  totalOrdersCancelled: Scalars['BigInt'];\n  totalOrdersCreated: Scalars['BigInt'];\n  totalOrdersFilled: Scalars['BigInt'];\n  totalPodVolume: Scalars['BigInt'];\n  totalPodsAvailable: Scalars['BigInt'];\n  totalPodsCancelled: Scalars['BigInt'];\n  totalPodsExpired: Scalars['BigInt'];\n  totalPodsFilled: Scalars['BigInt'];\n  totalPodsListed: Scalars['BigInt'];\n};\n\nexport type PodMarketplaceDailySnapshot_Filter = {\n  /** Filter for the block changed event. */\n  _change_block?: InputMaybe<BlockChangedFilter>;\n  blockNumber?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_gt?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_gte?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  blockNumber_lt?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_lte?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_not?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  id?: InputMaybe<Scalars['ID']>;\n  id_gt?: InputMaybe<Scalars['ID']>;\n  id_gte?: InputMaybe<Scalars['ID']>;\n  id_in?: InputMaybe<Array<Scalars['ID']>>;\n  id_lt?: InputMaybe<Scalars['ID']>;\n  id_lte?: InputMaybe<Scalars['ID']>;\n  id_not?: InputMaybe<Scalars['ID']>;\n  id_not_in?: InputMaybe<Array<Scalars['ID']>>;\n  newBeanVolume?: InputMaybe<Scalars['BigInt']>;\n  newBeanVolume_gt?: InputMaybe<Scalars['BigInt']>;\n  newBeanVolume_gte?: InputMaybe<Scalars['BigInt']>;\n  newBeanVolume_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  newBeanVolume_lt?: InputMaybe<Scalars['BigInt']>;\n  newBeanVolume_lte?: InputMaybe<Scalars['BigInt']>;\n  newBeanVolume_not?: InputMaybe<Scalars['BigInt']>;\n  newBeanVolume_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  newOrdersCancelled?: InputMaybe<Scalars['BigInt']>;\n  newOrdersCancelled_gt?: InputMaybe<Scalars['BigInt']>;\n  newOrdersCancelled_gte?: InputMaybe<Scalars['BigInt']>;\n  newOrdersCancelled_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  newOrdersCancelled_lt?: InputMaybe<Scalars['BigInt']>;\n  newOrdersCancelled_lte?: InputMaybe<Scalars['BigInt']>;\n  newOrdersCancelled_not?: InputMaybe<Scalars['BigInt']>;\n  newOrdersCancelled_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  newOrdersCreated?: InputMaybe<Scalars['BigInt']>;\n  newOrdersCreated_gt?: InputMaybe<Scalars['BigInt']>;\n  newOrdersCreated_gte?: InputMaybe<Scalars['BigInt']>;\n  newOrdersCreated_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  newOrdersCreated_lt?: InputMaybe<Scalars['BigInt']>;\n  newOrdersCreated_lte?: InputMaybe<Scalars['BigInt']>;\n  newOrdersCreated_not?: InputMaybe<Scalars['BigInt']>;\n  newOrdersCreated_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  newOrdersFilled?: InputMaybe<Scalars['BigInt']>;\n  newOrdersFilled_gt?: InputMaybe<Scalars['BigInt']>;\n  newOrdersFilled_gte?: InputMaybe<Scalars['BigInt']>;\n  newOrdersFilled_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  newOrdersFilled_lt?: InputMaybe<Scalars['BigInt']>;\n  newOrdersFilled_lte?: InputMaybe<Scalars['BigInt']>;\n  newOrdersFilled_not?: InputMaybe<Scalars['BigInt']>;\n  newOrdersFilled_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  newPodVolume?: InputMaybe<Scalars['BigInt']>;\n  newPodVolume_gt?: InputMaybe<Scalars['BigInt']>;\n  newPodVolume_gte?: InputMaybe<Scalars['BigInt']>;\n  newPodVolume_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  newPodVolume_lt?: InputMaybe<Scalars['BigInt']>;\n  newPodVolume_lte?: InputMaybe<Scalars['BigInt']>;\n  newPodVolume_not?: InputMaybe<Scalars['BigInt']>;\n  newPodVolume_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  newPodsAvailable?: InputMaybe<Scalars['BigInt']>;\n  newPodsAvailable_gt?: InputMaybe<Scalars['BigInt']>;\n  newPodsAvailable_gte?: InputMaybe<Scalars['BigInt']>;\n  newPodsAvailable_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  newPodsAvailable_lt?: InputMaybe<Scalars['BigInt']>;\n  newPodsAvailable_lte?: InputMaybe<Scalars['BigInt']>;\n  newPodsAvailable_not?: InputMaybe<Scalars['BigInt']>;\n  newPodsAvailable_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  newPodsCancelled?: InputMaybe<Scalars['BigInt']>;\n  newPodsCancelled_gt?: InputMaybe<Scalars['BigInt']>;\n  newPodsCancelled_gte?: InputMaybe<Scalars['BigInt']>;\n  newPodsCancelled_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  newPodsCancelled_lt?: InputMaybe<Scalars['BigInt']>;\n  newPodsCancelled_lte?: InputMaybe<Scalars['BigInt']>;\n  newPodsCancelled_not?: InputMaybe<Scalars['BigInt']>;\n  newPodsCancelled_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  newPodsExpired?: InputMaybe<Scalars['BigInt']>;\n  newPodsExpired_gt?: InputMaybe<Scalars['BigInt']>;\n  newPodsExpired_gte?: InputMaybe<Scalars['BigInt']>;\n  newPodsExpired_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  newPodsExpired_lt?: InputMaybe<Scalars['BigInt']>;\n  newPodsExpired_lte?: InputMaybe<Scalars['BigInt']>;\n  newPodsExpired_not?: InputMaybe<Scalars['BigInt']>;\n  newPodsExpired_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  newPodsFilled?: InputMaybe<Scalars['BigInt']>;\n  newPodsFilled_gt?: InputMaybe<Scalars['BigInt']>;\n  newPodsFilled_gte?: InputMaybe<Scalars['BigInt']>;\n  newPodsFilled_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  newPodsFilled_lt?: InputMaybe<Scalars['BigInt']>;\n  newPodsFilled_lte?: InputMaybe<Scalars['BigInt']>;\n  newPodsFilled_not?: InputMaybe<Scalars['BigInt']>;\n  newPodsFilled_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  newPodsListed?: InputMaybe<Scalars['BigInt']>;\n  newPodsListed_gt?: InputMaybe<Scalars['BigInt']>;\n  newPodsListed_gte?: InputMaybe<Scalars['BigInt']>;\n  newPodsListed_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  newPodsListed_lt?: InputMaybe<Scalars['BigInt']>;\n  newPodsListed_lte?: InputMaybe<Scalars['BigInt']>;\n  newPodsListed_not?: InputMaybe<Scalars['BigInt']>;\n  newPodsListed_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  podMarketplace?: InputMaybe<Scalars['String']>;\n  podMarketplace_?: InputMaybe<PodMarketplace_Filter>;\n  podMarketplace_contains?: InputMaybe<Scalars['String']>;\n  podMarketplace_contains_nocase?: InputMaybe<Scalars['String']>;\n  podMarketplace_ends_with?: InputMaybe<Scalars['String']>;\n  podMarketplace_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  podMarketplace_gt?: InputMaybe<Scalars['String']>;\n  podMarketplace_gte?: InputMaybe<Scalars['String']>;\n  podMarketplace_in?: InputMaybe<Array<Scalars['String']>>;\n  podMarketplace_lt?: InputMaybe<Scalars['String']>;\n  podMarketplace_lte?: InputMaybe<Scalars['String']>;\n  podMarketplace_not?: InputMaybe<Scalars['String']>;\n  podMarketplace_not_contains?: InputMaybe<Scalars['String']>;\n  podMarketplace_not_contains_nocase?: InputMaybe<Scalars['String']>;\n  podMarketplace_not_ends_with?: InputMaybe<Scalars['String']>;\n  podMarketplace_not_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  podMarketplace_not_in?: InputMaybe<Array<Scalars['String']>>;\n  podMarketplace_not_starts_with?: InputMaybe<Scalars['String']>;\n  podMarketplace_not_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  podMarketplace_starts_with?: InputMaybe<Scalars['String']>;\n  podMarketplace_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  season?: InputMaybe<Scalars['Int']>;\n  season_gt?: InputMaybe<Scalars['Int']>;\n  season_gte?: InputMaybe<Scalars['Int']>;\n  season_in?: InputMaybe<Array<Scalars['Int']>>;\n  season_lt?: InputMaybe<Scalars['Int']>;\n  season_lte?: InputMaybe<Scalars['Int']>;\n  season_not?: InputMaybe<Scalars['Int']>;\n  season_not_in?: InputMaybe<Array<Scalars['Int']>>;\n  timestamp?: InputMaybe<Scalars['BigInt']>;\n  timestamp_gt?: InputMaybe<Scalars['BigInt']>;\n  timestamp_gte?: InputMaybe<Scalars['BigInt']>;\n  timestamp_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  timestamp_lt?: InputMaybe<Scalars['BigInt']>;\n  timestamp_lte?: InputMaybe<Scalars['BigInt']>;\n  timestamp_not?: InputMaybe<Scalars['BigInt']>;\n  timestamp_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  totalBeanVolume?: InputMaybe<Scalars['BigInt']>;\n  totalBeanVolume_gt?: InputMaybe<Scalars['BigInt']>;\n  totalBeanVolume_gte?: InputMaybe<Scalars['BigInt']>;\n  totalBeanVolume_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  totalBeanVolume_lt?: InputMaybe<Scalars['BigInt']>;\n  totalBeanVolume_lte?: InputMaybe<Scalars['BigInt']>;\n  totalBeanVolume_not?: InputMaybe<Scalars['BigInt']>;\n  totalBeanVolume_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  totalOrdersCancelled?: InputMaybe<Scalars['BigInt']>;\n  totalOrdersCancelled_gt?: InputMaybe<Scalars['BigInt']>;\n  totalOrdersCancelled_gte?: InputMaybe<Scalars['BigInt']>;\n  totalOrdersCancelled_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  totalOrdersCancelled_lt?: InputMaybe<Scalars['BigInt']>;\n  totalOrdersCancelled_lte?: InputMaybe<Scalars['BigInt']>;\n  totalOrdersCancelled_not?: InputMaybe<Scalars['BigInt']>;\n  totalOrdersCancelled_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  totalOrdersCreated?: InputMaybe<Scalars['BigInt']>;\n  totalOrdersCreated_gt?: InputMaybe<Scalars['BigInt']>;\n  totalOrdersCreated_gte?: InputMaybe<Scalars['BigInt']>;\n  totalOrdersCreated_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  totalOrdersCreated_lt?: InputMaybe<Scalars['BigInt']>;\n  totalOrdersCreated_lte?: InputMaybe<Scalars['BigInt']>;\n  totalOrdersCreated_not?: InputMaybe<Scalars['BigInt']>;\n  totalOrdersCreated_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  totalOrdersFilled?: InputMaybe<Scalars['BigInt']>;\n  totalOrdersFilled_gt?: InputMaybe<Scalars['BigInt']>;\n  totalOrdersFilled_gte?: InputMaybe<Scalars['BigInt']>;\n  totalOrdersFilled_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  totalOrdersFilled_lt?: InputMaybe<Scalars['BigInt']>;\n  totalOrdersFilled_lte?: InputMaybe<Scalars['BigInt']>;\n  totalOrdersFilled_not?: InputMaybe<Scalars['BigInt']>;\n  totalOrdersFilled_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  totalPodVolume?: InputMaybe<Scalars['BigInt']>;\n  totalPodVolume_gt?: InputMaybe<Scalars['BigInt']>;\n  totalPodVolume_gte?: InputMaybe<Scalars['BigInt']>;\n  totalPodVolume_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  totalPodVolume_lt?: InputMaybe<Scalars['BigInt']>;\n  totalPodVolume_lte?: InputMaybe<Scalars['BigInt']>;\n  totalPodVolume_not?: InputMaybe<Scalars['BigInt']>;\n  totalPodVolume_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  totalPodsAvailable?: InputMaybe<Scalars['BigInt']>;\n  totalPodsAvailable_gt?: InputMaybe<Scalars['BigInt']>;\n  totalPodsAvailable_gte?: InputMaybe<Scalars['BigInt']>;\n  totalPodsAvailable_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  totalPodsAvailable_lt?: InputMaybe<Scalars['BigInt']>;\n  totalPodsAvailable_lte?: InputMaybe<Scalars['BigInt']>;\n  totalPodsAvailable_not?: InputMaybe<Scalars['BigInt']>;\n  totalPodsAvailable_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  totalPodsCancelled?: InputMaybe<Scalars['BigInt']>;\n  totalPodsCancelled_gt?: InputMaybe<Scalars['BigInt']>;\n  totalPodsCancelled_gte?: InputMaybe<Scalars['BigInt']>;\n  totalPodsCancelled_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  totalPodsCancelled_lt?: InputMaybe<Scalars['BigInt']>;\n  totalPodsCancelled_lte?: InputMaybe<Scalars['BigInt']>;\n  totalPodsCancelled_not?: InputMaybe<Scalars['BigInt']>;\n  totalPodsCancelled_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  totalPodsExpired?: InputMaybe<Scalars['BigInt']>;\n  totalPodsExpired_gt?: InputMaybe<Scalars['BigInt']>;\n  totalPodsExpired_gte?: InputMaybe<Scalars['BigInt']>;\n  totalPodsExpired_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  totalPodsExpired_lt?: InputMaybe<Scalars['BigInt']>;\n  totalPodsExpired_lte?: InputMaybe<Scalars['BigInt']>;\n  totalPodsExpired_not?: InputMaybe<Scalars['BigInt']>;\n  totalPodsExpired_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  totalPodsFilled?: InputMaybe<Scalars['BigInt']>;\n  totalPodsFilled_gt?: InputMaybe<Scalars['BigInt']>;\n  totalPodsFilled_gte?: InputMaybe<Scalars['BigInt']>;\n  totalPodsFilled_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  totalPodsFilled_lt?: InputMaybe<Scalars['BigInt']>;\n  totalPodsFilled_lte?: InputMaybe<Scalars['BigInt']>;\n  totalPodsFilled_not?: InputMaybe<Scalars['BigInt']>;\n  totalPodsFilled_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  totalPodsListed?: InputMaybe<Scalars['BigInt']>;\n  totalPodsListed_gt?: InputMaybe<Scalars['BigInt']>;\n  totalPodsListed_gte?: InputMaybe<Scalars['BigInt']>;\n  totalPodsListed_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  totalPodsListed_lt?: InputMaybe<Scalars['BigInt']>;\n  totalPodsListed_lte?: InputMaybe<Scalars['BigInt']>;\n  totalPodsListed_not?: InputMaybe<Scalars['BigInt']>;\n  totalPodsListed_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n};\n\nexport enum PodMarketplaceDailySnapshot_OrderBy {\n  BlockNumber = 'blockNumber',\n  Id = 'id',\n  NewBeanVolume = 'newBeanVolume',\n  NewOrdersCancelled = 'newOrdersCancelled',\n  NewOrdersCreated = 'newOrdersCreated',\n  NewOrdersFilled = 'newOrdersFilled',\n  NewPodVolume = 'newPodVolume',\n  NewPodsAvailable = 'newPodsAvailable',\n  NewPodsCancelled = 'newPodsCancelled',\n  NewPodsExpired = 'newPodsExpired',\n  NewPodsFilled = 'newPodsFilled',\n  NewPodsListed = 'newPodsListed',\n  PodMarketplace = 'podMarketplace',\n  Season = 'season',\n  Timestamp = 'timestamp',\n  TotalBeanVolume = 'totalBeanVolume',\n  TotalOrdersCancelled = 'totalOrdersCancelled',\n  TotalOrdersCreated = 'totalOrdersCreated',\n  TotalOrdersFilled = 'totalOrdersFilled',\n  TotalPodVolume = 'totalPodVolume',\n  TotalPodsAvailable = 'totalPodsAvailable',\n  TotalPodsCancelled = 'totalPodsCancelled',\n  TotalPodsExpired = 'totalPodsExpired',\n  TotalPodsFilled = 'totalPodsFilled',\n  TotalPodsListed = 'totalPodsListed'\n}\n\nexport type PodMarketplaceHourlySnapshot = {\n  __typename?: 'PodMarketplaceHourlySnapshot';\n  blockNumber: Scalars['BigInt'];\n  id: Scalars['ID'];\n  newBeanVolume: Scalars['BigInt'];\n  newOrdersCancelled: Scalars['BigInt'];\n  newOrdersCreated: Scalars['BigInt'];\n  newOrdersFilled: Scalars['BigInt'];\n  newPodVolume: Scalars['BigInt'];\n  newPodsAvailable: Scalars['BigInt'];\n  newPodsCancelled: Scalars['BigInt'];\n  newPodsExpired: Scalars['BigInt'];\n  newPodsFilled: Scalars['BigInt'];\n  newPodsListed: Scalars['BigInt'];\n  podMarketplace: PodMarketplace;\n  season: Scalars['Int'];\n  timestamp: Scalars['BigInt'];\n  totalBeanVolume: Scalars['BigInt'];\n  totalOrdersCancelled: Scalars['BigInt'];\n  totalOrdersCreated: Scalars['BigInt'];\n  totalOrdersFilled: Scalars['BigInt'];\n  totalPodVolume: Scalars['BigInt'];\n  totalPodsAvailable: Scalars['BigInt'];\n  totalPodsCancelled: Scalars['BigInt'];\n  totalPodsExpired: Scalars['BigInt'];\n  totalPodsFilled: Scalars['BigInt'];\n  totalPodsListed: Scalars['BigInt'];\n};\n\nexport type PodMarketplaceHourlySnapshot_Filter = {\n  /** Filter for the block changed event. */\n  _change_block?: InputMaybe<BlockChangedFilter>;\n  blockNumber?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_gt?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_gte?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  blockNumber_lt?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_lte?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_not?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  id?: InputMaybe<Scalars['ID']>;\n  id_gt?: InputMaybe<Scalars['ID']>;\n  id_gte?: InputMaybe<Scalars['ID']>;\n  id_in?: InputMaybe<Array<Scalars['ID']>>;\n  id_lt?: InputMaybe<Scalars['ID']>;\n  id_lte?: InputMaybe<Scalars['ID']>;\n  id_not?: InputMaybe<Scalars['ID']>;\n  id_not_in?: InputMaybe<Array<Scalars['ID']>>;\n  newBeanVolume?: InputMaybe<Scalars['BigInt']>;\n  newBeanVolume_gt?: InputMaybe<Scalars['BigInt']>;\n  newBeanVolume_gte?: InputMaybe<Scalars['BigInt']>;\n  newBeanVolume_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  newBeanVolume_lt?: InputMaybe<Scalars['BigInt']>;\n  newBeanVolume_lte?: InputMaybe<Scalars['BigInt']>;\n  newBeanVolume_not?: InputMaybe<Scalars['BigInt']>;\n  newBeanVolume_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  newOrdersCancelled?: InputMaybe<Scalars['BigInt']>;\n  newOrdersCancelled_gt?: InputMaybe<Scalars['BigInt']>;\n  newOrdersCancelled_gte?: InputMaybe<Scalars['BigInt']>;\n  newOrdersCancelled_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  newOrdersCancelled_lt?: InputMaybe<Scalars['BigInt']>;\n  newOrdersCancelled_lte?: InputMaybe<Scalars['BigInt']>;\n  newOrdersCancelled_not?: InputMaybe<Scalars['BigInt']>;\n  newOrdersCancelled_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  newOrdersCreated?: InputMaybe<Scalars['BigInt']>;\n  newOrdersCreated_gt?: InputMaybe<Scalars['BigInt']>;\n  newOrdersCreated_gte?: InputMaybe<Scalars['BigInt']>;\n  newOrdersCreated_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  newOrdersCreated_lt?: InputMaybe<Scalars['BigInt']>;\n  newOrdersCreated_lte?: InputMaybe<Scalars['BigInt']>;\n  newOrdersCreated_not?: InputMaybe<Scalars['BigInt']>;\n  newOrdersCreated_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  newOrdersFilled?: InputMaybe<Scalars['BigInt']>;\n  newOrdersFilled_gt?: InputMaybe<Scalars['BigInt']>;\n  newOrdersFilled_gte?: InputMaybe<Scalars['BigInt']>;\n  newOrdersFilled_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  newOrdersFilled_lt?: InputMaybe<Scalars['BigInt']>;\n  newOrdersFilled_lte?: InputMaybe<Scalars['BigInt']>;\n  newOrdersFilled_not?: InputMaybe<Scalars['BigInt']>;\n  newOrdersFilled_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  newPodVolume?: InputMaybe<Scalars['BigInt']>;\n  newPodVolume_gt?: InputMaybe<Scalars['BigInt']>;\n  newPodVolume_gte?: InputMaybe<Scalars['BigInt']>;\n  newPodVolume_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  newPodVolume_lt?: InputMaybe<Scalars['BigInt']>;\n  newPodVolume_lte?: InputMaybe<Scalars['BigInt']>;\n  newPodVolume_not?: InputMaybe<Scalars['BigInt']>;\n  newPodVolume_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  newPodsAvailable?: InputMaybe<Scalars['BigInt']>;\n  newPodsAvailable_gt?: InputMaybe<Scalars['BigInt']>;\n  newPodsAvailable_gte?: InputMaybe<Scalars['BigInt']>;\n  newPodsAvailable_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  newPodsAvailable_lt?: InputMaybe<Scalars['BigInt']>;\n  newPodsAvailable_lte?: InputMaybe<Scalars['BigInt']>;\n  newPodsAvailable_not?: InputMaybe<Scalars['BigInt']>;\n  newPodsAvailable_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  newPodsCancelled?: InputMaybe<Scalars['BigInt']>;\n  newPodsCancelled_gt?: InputMaybe<Scalars['BigInt']>;\n  newPodsCancelled_gte?: InputMaybe<Scalars['BigInt']>;\n  newPodsCancelled_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  newPodsCancelled_lt?: InputMaybe<Scalars['BigInt']>;\n  newPodsCancelled_lte?: InputMaybe<Scalars['BigInt']>;\n  newPodsCancelled_not?: InputMaybe<Scalars['BigInt']>;\n  newPodsCancelled_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  newPodsExpired?: InputMaybe<Scalars['BigInt']>;\n  newPodsExpired_gt?: InputMaybe<Scalars['BigInt']>;\n  newPodsExpired_gte?: InputMaybe<Scalars['BigInt']>;\n  newPodsExpired_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  newPodsExpired_lt?: InputMaybe<Scalars['BigInt']>;\n  newPodsExpired_lte?: InputMaybe<Scalars['BigInt']>;\n  newPodsExpired_not?: InputMaybe<Scalars['BigInt']>;\n  newPodsExpired_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  newPodsFilled?: InputMaybe<Scalars['BigInt']>;\n  newPodsFilled_gt?: InputMaybe<Scalars['BigInt']>;\n  newPodsFilled_gte?: InputMaybe<Scalars['BigInt']>;\n  newPodsFilled_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  newPodsFilled_lt?: InputMaybe<Scalars['BigInt']>;\n  newPodsFilled_lte?: InputMaybe<Scalars['BigInt']>;\n  newPodsFilled_not?: InputMaybe<Scalars['BigInt']>;\n  newPodsFilled_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  newPodsListed?: InputMaybe<Scalars['BigInt']>;\n  newPodsListed_gt?: InputMaybe<Scalars['BigInt']>;\n  newPodsListed_gte?: InputMaybe<Scalars['BigInt']>;\n  newPodsListed_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  newPodsListed_lt?: InputMaybe<Scalars['BigInt']>;\n  newPodsListed_lte?: InputMaybe<Scalars['BigInt']>;\n  newPodsListed_not?: InputMaybe<Scalars['BigInt']>;\n  newPodsListed_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  podMarketplace?: InputMaybe<Scalars['String']>;\n  podMarketplace_?: InputMaybe<PodMarketplace_Filter>;\n  podMarketplace_contains?: InputMaybe<Scalars['String']>;\n  podMarketplace_contains_nocase?: InputMaybe<Scalars['String']>;\n  podMarketplace_ends_with?: InputMaybe<Scalars['String']>;\n  podMarketplace_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  podMarketplace_gt?: InputMaybe<Scalars['String']>;\n  podMarketplace_gte?: InputMaybe<Scalars['String']>;\n  podMarketplace_in?: InputMaybe<Array<Scalars['String']>>;\n  podMarketplace_lt?: InputMaybe<Scalars['String']>;\n  podMarketplace_lte?: InputMaybe<Scalars['String']>;\n  podMarketplace_not?: InputMaybe<Scalars['String']>;\n  podMarketplace_not_contains?: InputMaybe<Scalars['String']>;\n  podMarketplace_not_contains_nocase?: InputMaybe<Scalars['String']>;\n  podMarketplace_not_ends_with?: InputMaybe<Scalars['String']>;\n  podMarketplace_not_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  podMarketplace_not_in?: InputMaybe<Array<Scalars['String']>>;\n  podMarketplace_not_starts_with?: InputMaybe<Scalars['String']>;\n  podMarketplace_not_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  podMarketplace_starts_with?: InputMaybe<Scalars['String']>;\n  podMarketplace_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  season?: InputMaybe<Scalars['Int']>;\n  season_gt?: InputMaybe<Scalars['Int']>;\n  season_gte?: InputMaybe<Scalars['Int']>;\n  season_in?: InputMaybe<Array<Scalars['Int']>>;\n  season_lt?: InputMaybe<Scalars['Int']>;\n  season_lte?: InputMaybe<Scalars['Int']>;\n  season_not?: InputMaybe<Scalars['Int']>;\n  season_not_in?: InputMaybe<Array<Scalars['Int']>>;\n  timestamp?: InputMaybe<Scalars['BigInt']>;\n  timestamp_gt?: InputMaybe<Scalars['BigInt']>;\n  timestamp_gte?: InputMaybe<Scalars['BigInt']>;\n  timestamp_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  timestamp_lt?: InputMaybe<Scalars['BigInt']>;\n  timestamp_lte?: InputMaybe<Scalars['BigInt']>;\n  timestamp_not?: InputMaybe<Scalars['BigInt']>;\n  timestamp_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  totalBeanVolume?: InputMaybe<Scalars['BigInt']>;\n  totalBeanVolume_gt?: InputMaybe<Scalars['BigInt']>;\n  totalBeanVolume_gte?: InputMaybe<Scalars['BigInt']>;\n  totalBeanVolume_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  totalBeanVolume_lt?: InputMaybe<Scalars['BigInt']>;\n  totalBeanVolume_lte?: InputMaybe<Scalars['BigInt']>;\n  totalBeanVolume_not?: InputMaybe<Scalars['BigInt']>;\n  totalBeanVolume_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  totalOrdersCancelled?: InputMaybe<Scalars['BigInt']>;\n  totalOrdersCancelled_gt?: InputMaybe<Scalars['BigInt']>;\n  totalOrdersCancelled_gte?: InputMaybe<Scalars['BigInt']>;\n  totalOrdersCancelled_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  totalOrdersCancelled_lt?: InputMaybe<Scalars['BigInt']>;\n  totalOrdersCancelled_lte?: InputMaybe<Scalars['BigInt']>;\n  totalOrdersCancelled_not?: InputMaybe<Scalars['BigInt']>;\n  totalOrdersCancelled_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  totalOrdersCreated?: InputMaybe<Scalars['BigInt']>;\n  totalOrdersCreated_gt?: InputMaybe<Scalars['BigInt']>;\n  totalOrdersCreated_gte?: InputMaybe<Scalars['BigInt']>;\n  totalOrdersCreated_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  totalOrdersCreated_lt?: InputMaybe<Scalars['BigInt']>;\n  totalOrdersCreated_lte?: InputMaybe<Scalars['BigInt']>;\n  totalOrdersCreated_not?: InputMaybe<Scalars['BigInt']>;\n  totalOrdersCreated_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  totalOrdersFilled?: InputMaybe<Scalars['BigInt']>;\n  totalOrdersFilled_gt?: InputMaybe<Scalars['BigInt']>;\n  totalOrdersFilled_gte?: InputMaybe<Scalars['BigInt']>;\n  totalOrdersFilled_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  totalOrdersFilled_lt?: InputMaybe<Scalars['BigInt']>;\n  totalOrdersFilled_lte?: InputMaybe<Scalars['BigInt']>;\n  totalOrdersFilled_not?: InputMaybe<Scalars['BigInt']>;\n  totalOrdersFilled_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  totalPodVolume?: InputMaybe<Scalars['BigInt']>;\n  totalPodVolume_gt?: InputMaybe<Scalars['BigInt']>;\n  totalPodVolume_gte?: InputMaybe<Scalars['BigInt']>;\n  totalPodVolume_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  totalPodVolume_lt?: InputMaybe<Scalars['BigInt']>;\n  totalPodVolume_lte?: InputMaybe<Scalars['BigInt']>;\n  totalPodVolume_not?: InputMaybe<Scalars['BigInt']>;\n  totalPodVolume_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  totalPodsAvailable?: InputMaybe<Scalars['BigInt']>;\n  totalPodsAvailable_gt?: InputMaybe<Scalars['BigInt']>;\n  totalPodsAvailable_gte?: InputMaybe<Scalars['BigInt']>;\n  totalPodsAvailable_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  totalPodsAvailable_lt?: InputMaybe<Scalars['BigInt']>;\n  totalPodsAvailable_lte?: InputMaybe<Scalars['BigInt']>;\n  totalPodsAvailable_not?: InputMaybe<Scalars['BigInt']>;\n  totalPodsAvailable_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  totalPodsCancelled?: InputMaybe<Scalars['BigInt']>;\n  totalPodsCancelled_gt?: InputMaybe<Scalars['BigInt']>;\n  totalPodsCancelled_gte?: InputMaybe<Scalars['BigInt']>;\n  totalPodsCancelled_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  totalPodsCancelled_lt?: InputMaybe<Scalars['BigInt']>;\n  totalPodsCancelled_lte?: InputMaybe<Scalars['BigInt']>;\n  totalPodsCancelled_not?: InputMaybe<Scalars['BigInt']>;\n  totalPodsCancelled_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  totalPodsExpired?: InputMaybe<Scalars['BigInt']>;\n  totalPodsExpired_gt?: InputMaybe<Scalars['BigInt']>;\n  totalPodsExpired_gte?: InputMaybe<Scalars['BigInt']>;\n  totalPodsExpired_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  totalPodsExpired_lt?: InputMaybe<Scalars['BigInt']>;\n  totalPodsExpired_lte?: InputMaybe<Scalars['BigInt']>;\n  totalPodsExpired_not?: InputMaybe<Scalars['BigInt']>;\n  totalPodsExpired_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  totalPodsFilled?: InputMaybe<Scalars['BigInt']>;\n  totalPodsFilled_gt?: InputMaybe<Scalars['BigInt']>;\n  totalPodsFilled_gte?: InputMaybe<Scalars['BigInt']>;\n  totalPodsFilled_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  totalPodsFilled_lt?: InputMaybe<Scalars['BigInt']>;\n  totalPodsFilled_lte?: InputMaybe<Scalars['BigInt']>;\n  totalPodsFilled_not?: InputMaybe<Scalars['BigInt']>;\n  totalPodsFilled_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  totalPodsListed?: InputMaybe<Scalars['BigInt']>;\n  totalPodsListed_gt?: InputMaybe<Scalars['BigInt']>;\n  totalPodsListed_gte?: InputMaybe<Scalars['BigInt']>;\n  totalPodsListed_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  totalPodsListed_lt?: InputMaybe<Scalars['BigInt']>;\n  totalPodsListed_lte?: InputMaybe<Scalars['BigInt']>;\n  totalPodsListed_not?: InputMaybe<Scalars['BigInt']>;\n  totalPodsListed_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n};\n\nexport enum PodMarketplaceHourlySnapshot_OrderBy {\n  BlockNumber = 'blockNumber',\n  Id = 'id',\n  NewBeanVolume = 'newBeanVolume',\n  NewOrdersCancelled = 'newOrdersCancelled',\n  NewOrdersCreated = 'newOrdersCreated',\n  NewOrdersFilled = 'newOrdersFilled',\n  NewPodVolume = 'newPodVolume',\n  NewPodsAvailable = 'newPodsAvailable',\n  NewPodsCancelled = 'newPodsCancelled',\n  NewPodsExpired = 'newPodsExpired',\n  NewPodsFilled = 'newPodsFilled',\n  NewPodsListed = 'newPodsListed',\n  PodMarketplace = 'podMarketplace',\n  Season = 'season',\n  Timestamp = 'timestamp',\n  TotalBeanVolume = 'totalBeanVolume',\n  TotalOrdersCancelled = 'totalOrdersCancelled',\n  TotalOrdersCreated = 'totalOrdersCreated',\n  TotalOrdersFilled = 'totalOrdersFilled',\n  TotalPodVolume = 'totalPodVolume',\n  TotalPodsAvailable = 'totalPodsAvailable',\n  TotalPodsCancelled = 'totalPodsCancelled',\n  TotalPodsExpired = 'totalPodsExpired',\n  TotalPodsFilled = 'totalPodsFilled',\n  TotalPodsListed = 'totalPodsListed'\n}\n\nexport type PodMarketplace_Filter = {\n  /** Filter for the block changed event. */\n  _change_block?: InputMaybe<BlockChangedFilter>;\n  dailySnapshots_?: InputMaybe<PodMarketplaceDailySnapshot_Filter>;\n  fills_?: InputMaybe<PodFill_Filter>;\n  hourlySnapshots_?: InputMaybe<PodMarketplaceHourlySnapshot_Filter>;\n  id?: InputMaybe<Scalars['ID']>;\n  id_gt?: InputMaybe<Scalars['ID']>;\n  id_gte?: InputMaybe<Scalars['ID']>;\n  id_in?: InputMaybe<Array<Scalars['ID']>>;\n  id_lt?: InputMaybe<Scalars['ID']>;\n  id_lte?: InputMaybe<Scalars['ID']>;\n  id_not?: InputMaybe<Scalars['ID']>;\n  id_not_in?: InputMaybe<Array<Scalars['ID']>>;\n  listingIndexes?: InputMaybe<Array<Scalars['BigInt']>>;\n  listingIndexes_contains?: InputMaybe<Array<Scalars['BigInt']>>;\n  listingIndexes_contains_nocase?: InputMaybe<Array<Scalars['BigInt']>>;\n  listingIndexes_not?: InputMaybe<Array<Scalars['BigInt']>>;\n  listingIndexes_not_contains?: InputMaybe<Array<Scalars['BigInt']>>;\n  listingIndexes_not_contains_nocase?: InputMaybe<Array<Scalars['BigInt']>>;\n  orders?: InputMaybe<Array<Scalars['String']>>;\n  orders_?: InputMaybe<PodOrder_Filter>;\n  orders_contains?: InputMaybe<Array<Scalars['String']>>;\n  orders_contains_nocase?: InputMaybe<Array<Scalars['String']>>;\n  orders_not?: InputMaybe<Array<Scalars['String']>>;\n  orders_not_contains?: InputMaybe<Array<Scalars['String']>>;\n  orders_not_contains_nocase?: InputMaybe<Array<Scalars['String']>>;\n  season?: InputMaybe<Scalars['Int']>;\n  season_gt?: InputMaybe<Scalars['Int']>;\n  season_gte?: InputMaybe<Scalars['Int']>;\n  season_in?: InputMaybe<Array<Scalars['Int']>>;\n  season_lt?: InputMaybe<Scalars['Int']>;\n  season_lte?: InputMaybe<Scalars['Int']>;\n  season_not?: InputMaybe<Scalars['Int']>;\n  season_not_in?: InputMaybe<Array<Scalars['Int']>>;\n  totalBeanVolume?: InputMaybe<Scalars['BigInt']>;\n  totalBeanVolume_gt?: InputMaybe<Scalars['BigInt']>;\n  totalBeanVolume_gte?: InputMaybe<Scalars['BigInt']>;\n  totalBeanVolume_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  totalBeanVolume_lt?: InputMaybe<Scalars['BigInt']>;\n  totalBeanVolume_lte?: InputMaybe<Scalars['BigInt']>;\n  totalBeanVolume_not?: InputMaybe<Scalars['BigInt']>;\n  totalBeanVolume_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  totalOrdersCancelled?: InputMaybe<Scalars['BigInt']>;\n  totalOrdersCancelled_gt?: InputMaybe<Scalars['BigInt']>;\n  totalOrdersCancelled_gte?: InputMaybe<Scalars['BigInt']>;\n  totalOrdersCancelled_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  totalOrdersCancelled_lt?: InputMaybe<Scalars['BigInt']>;\n  totalOrdersCancelled_lte?: InputMaybe<Scalars['BigInt']>;\n  totalOrdersCancelled_not?: InputMaybe<Scalars['BigInt']>;\n  totalOrdersCancelled_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  totalOrdersCreated?: InputMaybe<Scalars['BigInt']>;\n  totalOrdersCreated_gt?: InputMaybe<Scalars['BigInt']>;\n  totalOrdersCreated_gte?: InputMaybe<Scalars['BigInt']>;\n  totalOrdersCreated_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  totalOrdersCreated_lt?: InputMaybe<Scalars['BigInt']>;\n  totalOrdersCreated_lte?: InputMaybe<Scalars['BigInt']>;\n  totalOrdersCreated_not?: InputMaybe<Scalars['BigInt']>;\n  totalOrdersCreated_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  totalOrdersFilled?: InputMaybe<Scalars['BigInt']>;\n  totalOrdersFilled_gt?: InputMaybe<Scalars['BigInt']>;\n  totalOrdersFilled_gte?: InputMaybe<Scalars['BigInt']>;\n  totalOrdersFilled_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  totalOrdersFilled_lt?: InputMaybe<Scalars['BigInt']>;\n  totalOrdersFilled_lte?: InputMaybe<Scalars['BigInt']>;\n  totalOrdersFilled_not?: InputMaybe<Scalars['BigInt']>;\n  totalOrdersFilled_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  totalPodVolume?: InputMaybe<Scalars['BigInt']>;\n  totalPodVolume_gt?: InputMaybe<Scalars['BigInt']>;\n  totalPodVolume_gte?: InputMaybe<Scalars['BigInt']>;\n  totalPodVolume_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  totalPodVolume_lt?: InputMaybe<Scalars['BigInt']>;\n  totalPodVolume_lte?: InputMaybe<Scalars['BigInt']>;\n  totalPodVolume_not?: InputMaybe<Scalars['BigInt']>;\n  totalPodVolume_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  totalPodsAvailable?: InputMaybe<Scalars['BigInt']>;\n  totalPodsAvailable_gt?: InputMaybe<Scalars['BigInt']>;\n  totalPodsAvailable_gte?: InputMaybe<Scalars['BigInt']>;\n  totalPodsAvailable_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  totalPodsAvailable_lt?: InputMaybe<Scalars['BigInt']>;\n  totalPodsAvailable_lte?: InputMaybe<Scalars['BigInt']>;\n  totalPodsAvailable_not?: InputMaybe<Scalars['BigInt']>;\n  totalPodsAvailable_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  totalPodsCancelled?: InputMaybe<Scalars['BigInt']>;\n  totalPodsCancelled_gt?: InputMaybe<Scalars['BigInt']>;\n  totalPodsCancelled_gte?: InputMaybe<Scalars['BigInt']>;\n  totalPodsCancelled_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  totalPodsCancelled_lt?: InputMaybe<Scalars['BigInt']>;\n  totalPodsCancelled_lte?: InputMaybe<Scalars['BigInt']>;\n  totalPodsCancelled_not?: InputMaybe<Scalars['BigInt']>;\n  totalPodsCancelled_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  totalPodsExpired?: InputMaybe<Scalars['BigInt']>;\n  totalPodsExpired_gt?: InputMaybe<Scalars['BigInt']>;\n  totalPodsExpired_gte?: InputMaybe<Scalars['BigInt']>;\n  totalPodsExpired_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  totalPodsExpired_lt?: InputMaybe<Scalars['BigInt']>;\n  totalPodsExpired_lte?: InputMaybe<Scalars['BigInt']>;\n  totalPodsExpired_not?: InputMaybe<Scalars['BigInt']>;\n  totalPodsExpired_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  totalPodsFilled?: InputMaybe<Scalars['BigInt']>;\n  totalPodsFilled_gt?: InputMaybe<Scalars['BigInt']>;\n  totalPodsFilled_gte?: InputMaybe<Scalars['BigInt']>;\n  totalPodsFilled_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  totalPodsFilled_lt?: InputMaybe<Scalars['BigInt']>;\n  totalPodsFilled_lte?: InputMaybe<Scalars['BigInt']>;\n  totalPodsFilled_not?: InputMaybe<Scalars['BigInt']>;\n  totalPodsFilled_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  totalPodsListed?: InputMaybe<Scalars['BigInt']>;\n  totalPodsListed_gt?: InputMaybe<Scalars['BigInt']>;\n  totalPodsListed_gte?: InputMaybe<Scalars['BigInt']>;\n  totalPodsListed_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  totalPodsListed_lt?: InputMaybe<Scalars['BigInt']>;\n  totalPodsListed_lte?: InputMaybe<Scalars['BigInt']>;\n  totalPodsListed_not?: InputMaybe<Scalars['BigInt']>;\n  totalPodsListed_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n};\n\nexport enum PodMarketplace_OrderBy {\n  DailySnapshots = 'dailySnapshots',\n  Fills = 'fills',\n  HourlySnapshots = 'hourlySnapshots',\n  Id = 'id',\n  ListingIndexes = 'listingIndexes',\n  Orders = 'orders',\n  Season = 'season',\n  TotalBeanVolume = 'totalBeanVolume',\n  TotalOrdersCancelled = 'totalOrdersCancelled',\n  TotalOrdersCreated = 'totalOrdersCreated',\n  TotalOrdersFilled = 'totalOrdersFilled',\n  TotalPodVolume = 'totalPodVolume',\n  TotalPodsAvailable = 'totalPodsAvailable',\n  TotalPodsCancelled = 'totalPodsCancelled',\n  TotalPodsExpired = 'totalPodsExpired',\n  TotalPodsFilled = 'totalPodsFilled',\n  TotalPodsListed = 'totalPodsListed'\n}\n\nexport type PodOrder = {\n  __typename?: 'PodOrder';\n  amount: Scalars['BigInt'];\n  createdAt: Scalars['BigInt'];\n  farmer: Farmer;\n  fill?: Maybe<PodFill>;\n  filledAmount: Scalars['BigInt'];\n  /**  Historical ID for joins */\n  historyID: Scalars['String'];\n  id: Scalars['ID'];\n  maxPlaceInLine: Scalars['BigInt'];\n  pricePerPod: Scalars['Int'];\n  status: MarketStatus;\n  updatedAt: Scalars['BigInt'];\n};\n\nexport type PodOrderCancelled = MarketplaceEvent & {\n  __typename?: 'PodOrderCancelled';\n  /**  Account cancelling listing */\n  account: Scalars['String'];\n  /**  Block number of this event  */\n  blockNumber: Scalars['BigInt'];\n  /**  Transaction hash of the transaction that emitted this event  */\n  hash: Scalars['String'];\n  /**  Historical ID for joins */\n  historyID: Scalars['String'];\n  /** podOrderCancelled-{ Transaction hash }-{ Log index } */\n  id: Scalars['ID'];\n  /**  Event log index. For transactions that don't emit event, create arbitrary index starting from 0  */\n  logIndex: Scalars['Int'];\n  /**  ID of order cancelled */\n  orderId: Scalars['String'];\n  /**  The protocol this transaction belongs to  */\n  protocol: Beanstalk;\n  /**  Timestamp of this event  */\n  timestamp: Scalars['BigInt'];\n};\n\nexport type PodOrderCancelled_Filter = {\n  /** Filter for the block changed event. */\n  _change_block?: InputMaybe<BlockChangedFilter>;\n  account?: InputMaybe<Scalars['String']>;\n  account_contains?: InputMaybe<Scalars['String']>;\n  account_contains_nocase?: InputMaybe<Scalars['String']>;\n  account_ends_with?: InputMaybe<Scalars['String']>;\n  account_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  account_gt?: InputMaybe<Scalars['String']>;\n  account_gte?: InputMaybe<Scalars['String']>;\n  account_in?: InputMaybe<Array<Scalars['String']>>;\n  account_lt?: InputMaybe<Scalars['String']>;\n  account_lte?: InputMaybe<Scalars['String']>;\n  account_not?: InputMaybe<Scalars['String']>;\n  account_not_contains?: InputMaybe<Scalars['String']>;\n  account_not_contains_nocase?: InputMaybe<Scalars['String']>;\n  account_not_ends_with?: InputMaybe<Scalars['String']>;\n  account_not_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  account_not_in?: InputMaybe<Array<Scalars['String']>>;\n  account_not_starts_with?: InputMaybe<Scalars['String']>;\n  account_not_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  account_starts_with?: InputMaybe<Scalars['String']>;\n  account_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  blockNumber?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_gt?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_gte?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  blockNumber_lt?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_lte?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_not?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  hash?: InputMaybe<Scalars['String']>;\n  hash_contains?: InputMaybe<Scalars['String']>;\n  hash_contains_nocase?: InputMaybe<Scalars['String']>;\n  hash_ends_with?: InputMaybe<Scalars['String']>;\n  hash_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  hash_gt?: InputMaybe<Scalars['String']>;\n  hash_gte?: InputMaybe<Scalars['String']>;\n  hash_in?: InputMaybe<Array<Scalars['String']>>;\n  hash_lt?: InputMaybe<Scalars['String']>;\n  hash_lte?: InputMaybe<Scalars['String']>;\n  hash_not?: InputMaybe<Scalars['String']>;\n  hash_not_contains?: InputMaybe<Scalars['String']>;\n  hash_not_contains_nocase?: InputMaybe<Scalars['String']>;\n  hash_not_ends_with?: InputMaybe<Scalars['String']>;\n  hash_not_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  hash_not_in?: InputMaybe<Array<Scalars['String']>>;\n  hash_not_starts_with?: InputMaybe<Scalars['String']>;\n  hash_not_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  hash_starts_with?: InputMaybe<Scalars['String']>;\n  hash_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  historyID?: InputMaybe<Scalars['String']>;\n  historyID_contains?: InputMaybe<Scalars['String']>;\n  historyID_contains_nocase?: InputMaybe<Scalars['String']>;\n  historyID_ends_with?: InputMaybe<Scalars['String']>;\n  historyID_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  historyID_gt?: InputMaybe<Scalars['String']>;\n  historyID_gte?: InputMaybe<Scalars['String']>;\n  historyID_in?: InputMaybe<Array<Scalars['String']>>;\n  historyID_lt?: InputMaybe<Scalars['String']>;\n  historyID_lte?: InputMaybe<Scalars['String']>;\n  historyID_not?: InputMaybe<Scalars['String']>;\n  historyID_not_contains?: InputMaybe<Scalars['String']>;\n  historyID_not_contains_nocase?: InputMaybe<Scalars['String']>;\n  historyID_not_ends_with?: InputMaybe<Scalars['String']>;\n  historyID_not_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  historyID_not_in?: InputMaybe<Array<Scalars['String']>>;\n  historyID_not_starts_with?: InputMaybe<Scalars['String']>;\n  historyID_not_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  historyID_starts_with?: InputMaybe<Scalars['String']>;\n  historyID_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  id?: InputMaybe<Scalars['ID']>;\n  id_gt?: InputMaybe<Scalars['ID']>;\n  id_gte?: InputMaybe<Scalars['ID']>;\n  id_in?: InputMaybe<Array<Scalars['ID']>>;\n  id_lt?: InputMaybe<Scalars['ID']>;\n  id_lte?: InputMaybe<Scalars['ID']>;\n  id_not?: InputMaybe<Scalars['ID']>;\n  id_not_in?: InputMaybe<Array<Scalars['ID']>>;\n  logIndex?: InputMaybe<Scalars['Int']>;\n  logIndex_gt?: InputMaybe<Scalars['Int']>;\n  logIndex_gte?: InputMaybe<Scalars['Int']>;\n  logIndex_in?: InputMaybe<Array<Scalars['Int']>>;\n  logIndex_lt?: InputMaybe<Scalars['Int']>;\n  logIndex_lte?: InputMaybe<Scalars['Int']>;\n  logIndex_not?: InputMaybe<Scalars['Int']>;\n  logIndex_not_in?: InputMaybe<Array<Scalars['Int']>>;\n  orderId?: InputMaybe<Scalars['String']>;\n  orderId_contains?: InputMaybe<Scalars['String']>;\n  orderId_contains_nocase?: InputMaybe<Scalars['String']>;\n  orderId_ends_with?: InputMaybe<Scalars['String']>;\n  orderId_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  orderId_gt?: InputMaybe<Scalars['String']>;\n  orderId_gte?: InputMaybe<Scalars['String']>;\n  orderId_in?: InputMaybe<Array<Scalars['String']>>;\n  orderId_lt?: InputMaybe<Scalars['String']>;\n  orderId_lte?: InputMaybe<Scalars['String']>;\n  orderId_not?: InputMaybe<Scalars['String']>;\n  orderId_not_contains?: InputMaybe<Scalars['String']>;\n  orderId_not_contains_nocase?: InputMaybe<Scalars['String']>;\n  orderId_not_ends_with?: InputMaybe<Scalars['String']>;\n  orderId_not_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  orderId_not_in?: InputMaybe<Array<Scalars['String']>>;\n  orderId_not_starts_with?: InputMaybe<Scalars['String']>;\n  orderId_not_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  orderId_starts_with?: InputMaybe<Scalars['String']>;\n  orderId_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  protocol?: InputMaybe<Scalars['String']>;\n  protocol_?: InputMaybe<Beanstalk_Filter>;\n  protocol_contains?: InputMaybe<Scalars['String']>;\n  protocol_contains_nocase?: InputMaybe<Scalars['String']>;\n  protocol_ends_with?: InputMaybe<Scalars['String']>;\n  protocol_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  protocol_gt?: InputMaybe<Scalars['String']>;\n  protocol_gte?: InputMaybe<Scalars['String']>;\n  protocol_in?: InputMaybe<Array<Scalars['String']>>;\n  protocol_lt?: InputMaybe<Scalars['String']>;\n  protocol_lte?: InputMaybe<Scalars['String']>;\n  protocol_not?: InputMaybe<Scalars['String']>;\n  protocol_not_contains?: InputMaybe<Scalars['String']>;\n  protocol_not_contains_nocase?: InputMaybe<Scalars['String']>;\n  protocol_not_ends_with?: InputMaybe<Scalars['String']>;\n  protocol_not_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  protocol_not_in?: InputMaybe<Array<Scalars['String']>>;\n  protocol_not_starts_with?: InputMaybe<Scalars['String']>;\n  protocol_not_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  protocol_starts_with?: InputMaybe<Scalars['String']>;\n  protocol_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  timestamp?: InputMaybe<Scalars['BigInt']>;\n  timestamp_gt?: InputMaybe<Scalars['BigInt']>;\n  timestamp_gte?: InputMaybe<Scalars['BigInt']>;\n  timestamp_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  timestamp_lt?: InputMaybe<Scalars['BigInt']>;\n  timestamp_lte?: InputMaybe<Scalars['BigInt']>;\n  timestamp_not?: InputMaybe<Scalars['BigInt']>;\n  timestamp_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n};\n\nexport enum PodOrderCancelled_OrderBy {\n  Account = 'account',\n  BlockNumber = 'blockNumber',\n  Hash = 'hash',\n  HistoryId = 'historyID',\n  Id = 'id',\n  LogIndex = 'logIndex',\n  OrderId = 'orderId',\n  Protocol = 'protocol',\n  Timestamp = 'timestamp'\n}\n\nexport type PodOrderCreated = MarketplaceEvent & {\n  __typename?: 'PodOrderCreated';\n  /**  Account creating the listing */\n  account: Scalars['String'];\n  /** Amount of pods listed */\n  amount: Scalars['BigInt'];\n  /**  Block number of this event  */\n  blockNumber: Scalars['BigInt'];\n  /**  Transaction hash of the transaction that emitted this event  */\n  hash: Scalars['String'];\n  /**  Historical ID for joins */\n  historyID: Scalars['String'];\n  /** podOrderCreated-{ Transaction hash }-{ Log index } */\n  id: Scalars['ID'];\n  /**  Event log index. For transactions that don't emit event, create arbitrary index starting from 0  */\n  logIndex: Scalars['Int'];\n  /** Max place in line */\n  maxPlaceInLine: Scalars['BigInt'];\n  /**  ID of the pod order */\n  orderId: Scalars['String'];\n  /** Price per pod */\n  pricePerPod: Scalars['Int'];\n  /**  The protocol this transaction belongs to  */\n  protocol: Beanstalk;\n  /**  Timestamp of this event  */\n  timestamp: Scalars['BigInt'];\n};\n\nexport type PodOrderCreated_Filter = {\n  /** Filter for the block changed event. */\n  _change_block?: InputMaybe<BlockChangedFilter>;\n  account?: InputMaybe<Scalars['String']>;\n  account_contains?: InputMaybe<Scalars['String']>;\n  account_contains_nocase?: InputMaybe<Scalars['String']>;\n  account_ends_with?: InputMaybe<Scalars['String']>;\n  account_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  account_gt?: InputMaybe<Scalars['String']>;\n  account_gte?: InputMaybe<Scalars['String']>;\n  account_in?: InputMaybe<Array<Scalars['String']>>;\n  account_lt?: InputMaybe<Scalars['String']>;\n  account_lte?: InputMaybe<Scalars['String']>;\n  account_not?: InputMaybe<Scalars['String']>;\n  account_not_contains?: InputMaybe<Scalars['String']>;\n  account_not_contains_nocase?: InputMaybe<Scalars['String']>;\n  account_not_ends_with?: InputMaybe<Scalars['String']>;\n  account_not_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  account_not_in?: InputMaybe<Array<Scalars['String']>>;\n  account_not_starts_with?: InputMaybe<Scalars['String']>;\n  account_not_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  account_starts_with?: InputMaybe<Scalars['String']>;\n  account_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  amount?: InputMaybe<Scalars['BigInt']>;\n  amount_gt?: InputMaybe<Scalars['BigInt']>;\n  amount_gte?: InputMaybe<Scalars['BigInt']>;\n  amount_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  amount_lt?: InputMaybe<Scalars['BigInt']>;\n  amount_lte?: InputMaybe<Scalars['BigInt']>;\n  amount_not?: InputMaybe<Scalars['BigInt']>;\n  amount_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  blockNumber?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_gt?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_gte?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  blockNumber_lt?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_lte?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_not?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  hash?: InputMaybe<Scalars['String']>;\n  hash_contains?: InputMaybe<Scalars['String']>;\n  hash_contains_nocase?: InputMaybe<Scalars['String']>;\n  hash_ends_with?: InputMaybe<Scalars['String']>;\n  hash_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  hash_gt?: InputMaybe<Scalars['String']>;\n  hash_gte?: InputMaybe<Scalars['String']>;\n  hash_in?: InputMaybe<Array<Scalars['String']>>;\n  hash_lt?: InputMaybe<Scalars['String']>;\n  hash_lte?: InputMaybe<Scalars['String']>;\n  hash_not?: InputMaybe<Scalars['String']>;\n  hash_not_contains?: InputMaybe<Scalars['String']>;\n  hash_not_contains_nocase?: InputMaybe<Scalars['String']>;\n  hash_not_ends_with?: InputMaybe<Scalars['String']>;\n  hash_not_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  hash_not_in?: InputMaybe<Array<Scalars['String']>>;\n  hash_not_starts_with?: InputMaybe<Scalars['String']>;\n  hash_not_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  hash_starts_with?: InputMaybe<Scalars['String']>;\n  hash_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  historyID?: InputMaybe<Scalars['String']>;\n  historyID_contains?: InputMaybe<Scalars['String']>;\n  historyID_contains_nocase?: InputMaybe<Scalars['String']>;\n  historyID_ends_with?: InputMaybe<Scalars['String']>;\n  historyID_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  historyID_gt?: InputMaybe<Scalars['String']>;\n  historyID_gte?: InputMaybe<Scalars['String']>;\n  historyID_in?: InputMaybe<Array<Scalars['String']>>;\n  historyID_lt?: InputMaybe<Scalars['String']>;\n  historyID_lte?: InputMaybe<Scalars['String']>;\n  historyID_not?: InputMaybe<Scalars['String']>;\n  historyID_not_contains?: InputMaybe<Scalars['String']>;\n  historyID_not_contains_nocase?: InputMaybe<Scalars['String']>;\n  historyID_not_ends_with?: InputMaybe<Scalars['String']>;\n  historyID_not_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  historyID_not_in?: InputMaybe<Array<Scalars['String']>>;\n  historyID_not_starts_with?: InputMaybe<Scalars['String']>;\n  historyID_not_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  historyID_starts_with?: InputMaybe<Scalars['String']>;\n  historyID_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  id?: InputMaybe<Scalars['ID']>;\n  id_gt?: InputMaybe<Scalars['ID']>;\n  id_gte?: InputMaybe<Scalars['ID']>;\n  id_in?: InputMaybe<Array<Scalars['ID']>>;\n  id_lt?: InputMaybe<Scalars['ID']>;\n  id_lte?: InputMaybe<Scalars['ID']>;\n  id_not?: InputMaybe<Scalars['ID']>;\n  id_not_in?: InputMaybe<Array<Scalars['ID']>>;\n  logIndex?: InputMaybe<Scalars['Int']>;\n  logIndex_gt?: InputMaybe<Scalars['Int']>;\n  logIndex_gte?: InputMaybe<Scalars['Int']>;\n  logIndex_in?: InputMaybe<Array<Scalars['Int']>>;\n  logIndex_lt?: InputMaybe<Scalars['Int']>;\n  logIndex_lte?: InputMaybe<Scalars['Int']>;\n  logIndex_not?: InputMaybe<Scalars['Int']>;\n  logIndex_not_in?: InputMaybe<Array<Scalars['Int']>>;\n  maxPlaceInLine?: InputMaybe<Scalars['BigInt']>;\n  maxPlaceInLine_gt?: InputMaybe<Scalars['BigInt']>;\n  maxPlaceInLine_gte?: InputMaybe<Scalars['BigInt']>;\n  maxPlaceInLine_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  maxPlaceInLine_lt?: InputMaybe<Scalars['BigInt']>;\n  maxPlaceInLine_lte?: InputMaybe<Scalars['BigInt']>;\n  maxPlaceInLine_not?: InputMaybe<Scalars['BigInt']>;\n  maxPlaceInLine_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  orderId?: InputMaybe<Scalars['String']>;\n  orderId_contains?: InputMaybe<Scalars['String']>;\n  orderId_contains_nocase?: InputMaybe<Scalars['String']>;\n  orderId_ends_with?: InputMaybe<Scalars['String']>;\n  orderId_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  orderId_gt?: InputMaybe<Scalars['String']>;\n  orderId_gte?: InputMaybe<Scalars['String']>;\n  orderId_in?: InputMaybe<Array<Scalars['String']>>;\n  orderId_lt?: InputMaybe<Scalars['String']>;\n  orderId_lte?: InputMaybe<Scalars['String']>;\n  orderId_not?: InputMaybe<Scalars['String']>;\n  orderId_not_contains?: InputMaybe<Scalars['String']>;\n  orderId_not_contains_nocase?: InputMaybe<Scalars['String']>;\n  orderId_not_ends_with?: InputMaybe<Scalars['String']>;\n  orderId_not_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  orderId_not_in?: InputMaybe<Array<Scalars['String']>>;\n  orderId_not_starts_with?: InputMaybe<Scalars['String']>;\n  orderId_not_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  orderId_starts_with?: InputMaybe<Scalars['String']>;\n  orderId_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  pricePerPod?: InputMaybe<Scalars['Int']>;\n  pricePerPod_gt?: InputMaybe<Scalars['Int']>;\n  pricePerPod_gte?: InputMaybe<Scalars['Int']>;\n  pricePerPod_in?: InputMaybe<Array<Scalars['Int']>>;\n  pricePerPod_lt?: InputMaybe<Scalars['Int']>;\n  pricePerPod_lte?: InputMaybe<Scalars['Int']>;\n  pricePerPod_not?: InputMaybe<Scalars['Int']>;\n  pricePerPod_not_in?: InputMaybe<Array<Scalars['Int']>>;\n  protocol?: InputMaybe<Scalars['String']>;\n  protocol_?: InputMaybe<Beanstalk_Filter>;\n  protocol_contains?: InputMaybe<Scalars['String']>;\n  protocol_contains_nocase?: InputMaybe<Scalars['String']>;\n  protocol_ends_with?: InputMaybe<Scalars['String']>;\n  protocol_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  protocol_gt?: InputMaybe<Scalars['String']>;\n  protocol_gte?: InputMaybe<Scalars['String']>;\n  protocol_in?: InputMaybe<Array<Scalars['String']>>;\n  protocol_lt?: InputMaybe<Scalars['String']>;\n  protocol_lte?: InputMaybe<Scalars['String']>;\n  protocol_not?: InputMaybe<Scalars['String']>;\n  protocol_not_contains?: InputMaybe<Scalars['String']>;\n  protocol_not_contains_nocase?: InputMaybe<Scalars['String']>;\n  protocol_not_ends_with?: InputMaybe<Scalars['String']>;\n  protocol_not_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  protocol_not_in?: InputMaybe<Array<Scalars['String']>>;\n  protocol_not_starts_with?: InputMaybe<Scalars['String']>;\n  protocol_not_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  protocol_starts_with?: InputMaybe<Scalars['String']>;\n  protocol_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  timestamp?: InputMaybe<Scalars['BigInt']>;\n  timestamp_gt?: InputMaybe<Scalars['BigInt']>;\n  timestamp_gte?: InputMaybe<Scalars['BigInt']>;\n  timestamp_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  timestamp_lt?: InputMaybe<Scalars['BigInt']>;\n  timestamp_lte?: InputMaybe<Scalars['BigInt']>;\n  timestamp_not?: InputMaybe<Scalars['BigInt']>;\n  timestamp_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n};\n\nexport enum PodOrderCreated_OrderBy {\n  Account = 'account',\n  Amount = 'amount',\n  BlockNumber = 'blockNumber',\n  Hash = 'hash',\n  HistoryId = 'historyID',\n  Id = 'id',\n  LogIndex = 'logIndex',\n  MaxPlaceInLine = 'maxPlaceInLine',\n  OrderId = 'orderId',\n  PricePerPod = 'pricePerPod',\n  Protocol = 'protocol',\n  Timestamp = 'timestamp'\n}\n\nexport type PodOrderFilled = MarketplaceEvent & {\n  __typename?: 'PodOrderFilled';\n  /** Number of pods transferred */\n  amount: Scalars['BigInt'];\n  /**  Block number of this event  */\n  blockNumber: Scalars['BigInt'];\n  /** Account selling pods */\n  from: Scalars['String'];\n  /**  Transaction hash of the transaction that emitted this event  */\n  hash: Scalars['String'];\n  /**  Historical ID for joins */\n  historyID: Scalars['String'];\n  /** podOrderFilled-{ Transaction hash }-{ Log index } */\n  id: Scalars['ID'];\n  /** Index of the plot transferred */\n  index: Scalars['BigInt'];\n  /**  Event log index. For transactions that don't emit event, create arbitrary index starting from 0  */\n  logIndex: Scalars['Int'];\n  /**  The protocol this transaction belongs to  */\n  protocol: Beanstalk;\n  /** Start of the plot transferred */\n  start: Scalars['BigInt'];\n  /**  Timestamp of this event  */\n  timestamp: Scalars['BigInt'];\n  /** Account buying pods */\n  to: Scalars['String'];\n};\n\nexport type PodOrderFilled_Filter = {\n  /** Filter for the block changed event. */\n  _change_block?: InputMaybe<BlockChangedFilter>;\n  amount?: InputMaybe<Scalars['BigInt']>;\n  amount_gt?: InputMaybe<Scalars['BigInt']>;\n  amount_gte?: InputMaybe<Scalars['BigInt']>;\n  amount_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  amount_lt?: InputMaybe<Scalars['BigInt']>;\n  amount_lte?: InputMaybe<Scalars['BigInt']>;\n  amount_not?: InputMaybe<Scalars['BigInt']>;\n  amount_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  blockNumber?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_gt?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_gte?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  blockNumber_lt?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_lte?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_not?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  from?: InputMaybe<Scalars['String']>;\n  from_contains?: InputMaybe<Scalars['String']>;\n  from_contains_nocase?: InputMaybe<Scalars['String']>;\n  from_ends_with?: InputMaybe<Scalars['String']>;\n  from_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  from_gt?: InputMaybe<Scalars['String']>;\n  from_gte?: InputMaybe<Scalars['String']>;\n  from_in?: InputMaybe<Array<Scalars['String']>>;\n  from_lt?: InputMaybe<Scalars['String']>;\n  from_lte?: InputMaybe<Scalars['String']>;\n  from_not?: InputMaybe<Scalars['String']>;\n  from_not_contains?: InputMaybe<Scalars['String']>;\n  from_not_contains_nocase?: InputMaybe<Scalars['String']>;\n  from_not_ends_with?: InputMaybe<Scalars['String']>;\n  from_not_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  from_not_in?: InputMaybe<Array<Scalars['String']>>;\n  from_not_starts_with?: InputMaybe<Scalars['String']>;\n  from_not_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  from_starts_with?: InputMaybe<Scalars['String']>;\n  from_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  hash?: InputMaybe<Scalars['String']>;\n  hash_contains?: InputMaybe<Scalars['String']>;\n  hash_contains_nocase?: InputMaybe<Scalars['String']>;\n  hash_ends_with?: InputMaybe<Scalars['String']>;\n  hash_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  hash_gt?: InputMaybe<Scalars['String']>;\n  hash_gte?: InputMaybe<Scalars['String']>;\n  hash_in?: InputMaybe<Array<Scalars['String']>>;\n  hash_lt?: InputMaybe<Scalars['String']>;\n  hash_lte?: InputMaybe<Scalars['String']>;\n  hash_not?: InputMaybe<Scalars['String']>;\n  hash_not_contains?: InputMaybe<Scalars['String']>;\n  hash_not_contains_nocase?: InputMaybe<Scalars['String']>;\n  hash_not_ends_with?: InputMaybe<Scalars['String']>;\n  hash_not_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  hash_not_in?: InputMaybe<Array<Scalars['String']>>;\n  hash_not_starts_with?: InputMaybe<Scalars['String']>;\n  hash_not_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  hash_starts_with?: InputMaybe<Scalars['String']>;\n  hash_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  historyID?: InputMaybe<Scalars['String']>;\n  historyID_contains?: InputMaybe<Scalars['String']>;\n  historyID_contains_nocase?: InputMaybe<Scalars['String']>;\n  historyID_ends_with?: InputMaybe<Scalars['String']>;\n  historyID_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  historyID_gt?: InputMaybe<Scalars['String']>;\n  historyID_gte?: InputMaybe<Scalars['String']>;\n  historyID_in?: InputMaybe<Array<Scalars['String']>>;\n  historyID_lt?: InputMaybe<Scalars['String']>;\n  historyID_lte?: InputMaybe<Scalars['String']>;\n  historyID_not?: InputMaybe<Scalars['String']>;\n  historyID_not_contains?: InputMaybe<Scalars['String']>;\n  historyID_not_contains_nocase?: InputMaybe<Scalars['String']>;\n  historyID_not_ends_with?: InputMaybe<Scalars['String']>;\n  historyID_not_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  historyID_not_in?: InputMaybe<Array<Scalars['String']>>;\n  historyID_not_starts_with?: InputMaybe<Scalars['String']>;\n  historyID_not_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  historyID_starts_with?: InputMaybe<Scalars['String']>;\n  historyID_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  id?: InputMaybe<Scalars['ID']>;\n  id_gt?: InputMaybe<Scalars['ID']>;\n  id_gte?: InputMaybe<Scalars['ID']>;\n  id_in?: InputMaybe<Array<Scalars['ID']>>;\n  id_lt?: InputMaybe<Scalars['ID']>;\n  id_lte?: InputMaybe<Scalars['ID']>;\n  id_not?: InputMaybe<Scalars['ID']>;\n  id_not_in?: InputMaybe<Array<Scalars['ID']>>;\n  index?: InputMaybe<Scalars['BigInt']>;\n  index_gt?: InputMaybe<Scalars['BigInt']>;\n  index_gte?: InputMaybe<Scalars['BigInt']>;\n  index_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  index_lt?: InputMaybe<Scalars['BigInt']>;\n  index_lte?: InputMaybe<Scalars['BigInt']>;\n  index_not?: InputMaybe<Scalars['BigInt']>;\n  index_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  logIndex?: InputMaybe<Scalars['Int']>;\n  logIndex_gt?: InputMaybe<Scalars['Int']>;\n  logIndex_gte?: InputMaybe<Scalars['Int']>;\n  logIndex_in?: InputMaybe<Array<Scalars['Int']>>;\n  logIndex_lt?: InputMaybe<Scalars['Int']>;\n  logIndex_lte?: InputMaybe<Scalars['Int']>;\n  logIndex_not?: InputMaybe<Scalars['Int']>;\n  logIndex_not_in?: InputMaybe<Array<Scalars['Int']>>;\n  protocol?: InputMaybe<Scalars['String']>;\n  protocol_?: InputMaybe<Beanstalk_Filter>;\n  protocol_contains?: InputMaybe<Scalars['String']>;\n  protocol_contains_nocase?: InputMaybe<Scalars['String']>;\n  protocol_ends_with?: InputMaybe<Scalars['String']>;\n  protocol_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  protocol_gt?: InputMaybe<Scalars['String']>;\n  protocol_gte?: InputMaybe<Scalars['String']>;\n  protocol_in?: InputMaybe<Array<Scalars['String']>>;\n  protocol_lt?: InputMaybe<Scalars['String']>;\n  protocol_lte?: InputMaybe<Scalars['String']>;\n  protocol_not?: InputMaybe<Scalars['String']>;\n  protocol_not_contains?: InputMaybe<Scalars['String']>;\n  protocol_not_contains_nocase?: InputMaybe<Scalars['String']>;\n  protocol_not_ends_with?: InputMaybe<Scalars['String']>;\n  protocol_not_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  protocol_not_in?: InputMaybe<Array<Scalars['String']>>;\n  protocol_not_starts_with?: InputMaybe<Scalars['String']>;\n  protocol_not_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  protocol_starts_with?: InputMaybe<Scalars['String']>;\n  protocol_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  start?: InputMaybe<Scalars['BigInt']>;\n  start_gt?: InputMaybe<Scalars['BigInt']>;\n  start_gte?: InputMaybe<Scalars['BigInt']>;\n  start_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  start_lt?: InputMaybe<Scalars['BigInt']>;\n  start_lte?: InputMaybe<Scalars['BigInt']>;\n  start_not?: InputMaybe<Scalars['BigInt']>;\n  start_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  timestamp?: InputMaybe<Scalars['BigInt']>;\n  timestamp_gt?: InputMaybe<Scalars['BigInt']>;\n  timestamp_gte?: InputMaybe<Scalars['BigInt']>;\n  timestamp_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  timestamp_lt?: InputMaybe<Scalars['BigInt']>;\n  timestamp_lte?: InputMaybe<Scalars['BigInt']>;\n  timestamp_not?: InputMaybe<Scalars['BigInt']>;\n  timestamp_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  to?: InputMaybe<Scalars['String']>;\n  to_contains?: InputMaybe<Scalars['String']>;\n  to_contains_nocase?: InputMaybe<Scalars['String']>;\n  to_ends_with?: InputMaybe<Scalars['String']>;\n  to_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  to_gt?: InputMaybe<Scalars['String']>;\n  to_gte?: InputMaybe<Scalars['String']>;\n  to_in?: InputMaybe<Array<Scalars['String']>>;\n  to_lt?: InputMaybe<Scalars['String']>;\n  to_lte?: InputMaybe<Scalars['String']>;\n  to_not?: InputMaybe<Scalars['String']>;\n  to_not_contains?: InputMaybe<Scalars['String']>;\n  to_not_contains_nocase?: InputMaybe<Scalars['String']>;\n  to_not_ends_with?: InputMaybe<Scalars['String']>;\n  to_not_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  to_not_in?: InputMaybe<Array<Scalars['String']>>;\n  to_not_starts_with?: InputMaybe<Scalars['String']>;\n  to_not_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  to_starts_with?: InputMaybe<Scalars['String']>;\n  to_starts_with_nocase?: InputMaybe<Scalars['String']>;\n};\n\nexport enum PodOrderFilled_OrderBy {\n  Amount = 'amount',\n  BlockNumber = 'blockNumber',\n  From = 'from',\n  Hash = 'hash',\n  HistoryId = 'historyID',\n  Id = 'id',\n  Index = 'index',\n  LogIndex = 'logIndex',\n  Protocol = 'protocol',\n  Start = 'start',\n  Timestamp = 'timestamp',\n  To = 'to'\n}\n\nexport type PodOrder_Filter = {\n  /** Filter for the block changed event. */\n  _change_block?: InputMaybe<BlockChangedFilter>;\n  amount?: InputMaybe<Scalars['BigInt']>;\n  amount_gt?: InputMaybe<Scalars['BigInt']>;\n  amount_gte?: InputMaybe<Scalars['BigInt']>;\n  amount_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  amount_lt?: InputMaybe<Scalars['BigInt']>;\n  amount_lte?: InputMaybe<Scalars['BigInt']>;\n  amount_not?: InputMaybe<Scalars['BigInt']>;\n  amount_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  createdAt?: InputMaybe<Scalars['BigInt']>;\n  createdAt_gt?: InputMaybe<Scalars['BigInt']>;\n  createdAt_gte?: InputMaybe<Scalars['BigInt']>;\n  createdAt_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  createdAt_lt?: InputMaybe<Scalars['BigInt']>;\n  createdAt_lte?: InputMaybe<Scalars['BigInt']>;\n  createdAt_not?: InputMaybe<Scalars['BigInt']>;\n  createdAt_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  farmer?: InputMaybe<Scalars['String']>;\n  farmer_?: InputMaybe<Farmer_Filter>;\n  farmer_contains?: InputMaybe<Scalars['String']>;\n  farmer_contains_nocase?: InputMaybe<Scalars['String']>;\n  farmer_ends_with?: InputMaybe<Scalars['String']>;\n  farmer_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  farmer_gt?: InputMaybe<Scalars['String']>;\n  farmer_gte?: InputMaybe<Scalars['String']>;\n  farmer_in?: InputMaybe<Array<Scalars['String']>>;\n  farmer_lt?: InputMaybe<Scalars['String']>;\n  farmer_lte?: InputMaybe<Scalars['String']>;\n  farmer_not?: InputMaybe<Scalars['String']>;\n  farmer_not_contains?: InputMaybe<Scalars['String']>;\n  farmer_not_contains_nocase?: InputMaybe<Scalars['String']>;\n  farmer_not_ends_with?: InputMaybe<Scalars['String']>;\n  farmer_not_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  farmer_not_in?: InputMaybe<Array<Scalars['String']>>;\n  farmer_not_starts_with?: InputMaybe<Scalars['String']>;\n  farmer_not_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  farmer_starts_with?: InputMaybe<Scalars['String']>;\n  farmer_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  fill?: InputMaybe<Scalars['String']>;\n  fill_?: InputMaybe<PodFill_Filter>;\n  fill_contains?: InputMaybe<Scalars['String']>;\n  fill_contains_nocase?: InputMaybe<Scalars['String']>;\n  fill_ends_with?: InputMaybe<Scalars['String']>;\n  fill_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  fill_gt?: InputMaybe<Scalars['String']>;\n  fill_gte?: InputMaybe<Scalars['String']>;\n  fill_in?: InputMaybe<Array<Scalars['String']>>;\n  fill_lt?: InputMaybe<Scalars['String']>;\n  fill_lte?: InputMaybe<Scalars['String']>;\n  fill_not?: InputMaybe<Scalars['String']>;\n  fill_not_contains?: InputMaybe<Scalars['String']>;\n  fill_not_contains_nocase?: InputMaybe<Scalars['String']>;\n  fill_not_ends_with?: InputMaybe<Scalars['String']>;\n  fill_not_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  fill_not_in?: InputMaybe<Array<Scalars['String']>>;\n  fill_not_starts_with?: InputMaybe<Scalars['String']>;\n  fill_not_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  fill_starts_with?: InputMaybe<Scalars['String']>;\n  fill_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  filledAmount?: InputMaybe<Scalars['BigInt']>;\n  filledAmount_gt?: InputMaybe<Scalars['BigInt']>;\n  filledAmount_gte?: InputMaybe<Scalars['BigInt']>;\n  filledAmount_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  filledAmount_lt?: InputMaybe<Scalars['BigInt']>;\n  filledAmount_lte?: InputMaybe<Scalars['BigInt']>;\n  filledAmount_not?: InputMaybe<Scalars['BigInt']>;\n  filledAmount_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  historyID?: InputMaybe<Scalars['String']>;\n  historyID_contains?: InputMaybe<Scalars['String']>;\n  historyID_contains_nocase?: InputMaybe<Scalars['String']>;\n  historyID_ends_with?: InputMaybe<Scalars['String']>;\n  historyID_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  historyID_gt?: InputMaybe<Scalars['String']>;\n  historyID_gte?: InputMaybe<Scalars['String']>;\n  historyID_in?: InputMaybe<Array<Scalars['String']>>;\n  historyID_lt?: InputMaybe<Scalars['String']>;\n  historyID_lte?: InputMaybe<Scalars['String']>;\n  historyID_not?: InputMaybe<Scalars['String']>;\n  historyID_not_contains?: InputMaybe<Scalars['String']>;\n  historyID_not_contains_nocase?: InputMaybe<Scalars['String']>;\n  historyID_not_ends_with?: InputMaybe<Scalars['String']>;\n  historyID_not_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  historyID_not_in?: InputMaybe<Array<Scalars['String']>>;\n  historyID_not_starts_with?: InputMaybe<Scalars['String']>;\n  historyID_not_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  historyID_starts_with?: InputMaybe<Scalars['String']>;\n  historyID_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  id?: InputMaybe<Scalars['ID']>;\n  id_gt?: InputMaybe<Scalars['ID']>;\n  id_gte?: InputMaybe<Scalars['ID']>;\n  id_in?: InputMaybe<Array<Scalars['ID']>>;\n  id_lt?: InputMaybe<Scalars['ID']>;\n  id_lte?: InputMaybe<Scalars['ID']>;\n  id_not?: InputMaybe<Scalars['ID']>;\n  id_not_in?: InputMaybe<Array<Scalars['ID']>>;\n  maxPlaceInLine?: InputMaybe<Scalars['BigInt']>;\n  maxPlaceInLine_gt?: InputMaybe<Scalars['BigInt']>;\n  maxPlaceInLine_gte?: InputMaybe<Scalars['BigInt']>;\n  maxPlaceInLine_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  maxPlaceInLine_lt?: InputMaybe<Scalars['BigInt']>;\n  maxPlaceInLine_lte?: InputMaybe<Scalars['BigInt']>;\n  maxPlaceInLine_not?: InputMaybe<Scalars['BigInt']>;\n  maxPlaceInLine_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  pricePerPod?: InputMaybe<Scalars['Int']>;\n  pricePerPod_gt?: InputMaybe<Scalars['Int']>;\n  pricePerPod_gte?: InputMaybe<Scalars['Int']>;\n  pricePerPod_in?: InputMaybe<Array<Scalars['Int']>>;\n  pricePerPod_lt?: InputMaybe<Scalars['Int']>;\n  pricePerPod_lte?: InputMaybe<Scalars['Int']>;\n  pricePerPod_not?: InputMaybe<Scalars['Int']>;\n  pricePerPod_not_in?: InputMaybe<Array<Scalars['Int']>>;\n  status?: InputMaybe<MarketStatus>;\n  status_in?: InputMaybe<Array<MarketStatus>>;\n  status_not?: InputMaybe<MarketStatus>;\n  status_not_in?: InputMaybe<Array<MarketStatus>>;\n  updatedAt?: InputMaybe<Scalars['BigInt']>;\n  updatedAt_gt?: InputMaybe<Scalars['BigInt']>;\n  updatedAt_gte?: InputMaybe<Scalars['BigInt']>;\n  updatedAt_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  updatedAt_lt?: InputMaybe<Scalars['BigInt']>;\n  updatedAt_lte?: InputMaybe<Scalars['BigInt']>;\n  updatedAt_not?: InputMaybe<Scalars['BigInt']>;\n  updatedAt_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n};\n\nexport enum PodOrder_OrderBy {\n  Amount = 'amount',\n  CreatedAt = 'createdAt',\n  Farmer = 'farmer',\n  Fill = 'fill',\n  FilledAmount = 'filledAmount',\n  HistoryId = 'historyID',\n  Id = 'id',\n  MaxPlaceInLine = 'maxPlaceInLine',\n  PricePerPod = 'pricePerPod',\n  Status = 'status',\n  UpdatedAt = 'updatedAt'\n}\n\nexport type PodTransfer = FieldEvent & {\n  __typename?: 'PodTransfer';\n  /**  Block number of this event  */\n  blockNumber: Scalars['BigInt'];\n  /**  Address that sent the pods  */\n  from: Scalars['String'];\n  /**  Transaction hash of the transaction that emitted this event  */\n  hash: Scalars['String'];\n  /**  podtransfer-{ Transaction hash }-{ Log index }  */\n  id: Scalars['ID'];\n  /**  Index of the pods sent */\n  index: Scalars['BigInt'];\n  /**  Event log index. For transactions that don't emit event, create arbitrary index starting from 0  */\n  logIndex: Scalars['Int'];\n  /**  Total pods being sent */\n  pods: Scalars['BigInt'];\n  /**  The protocol this transaction belongs to  */\n  protocol: Beanstalk;\n  /**  Timestamp of this event  */\n  timestamp: Scalars['BigInt'];\n  /**  Address that received the pods  */\n  to: Scalars['String'];\n};\n\nexport type PodTransfer_Filter = {\n  /** Filter for the block changed event. */\n  _change_block?: InputMaybe<BlockChangedFilter>;\n  blockNumber?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_gt?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_gte?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  blockNumber_lt?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_lte?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_not?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  from?: InputMaybe<Scalars['String']>;\n  from_contains?: InputMaybe<Scalars['String']>;\n  from_contains_nocase?: InputMaybe<Scalars['String']>;\n  from_ends_with?: InputMaybe<Scalars['String']>;\n  from_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  from_gt?: InputMaybe<Scalars['String']>;\n  from_gte?: InputMaybe<Scalars['String']>;\n  from_in?: InputMaybe<Array<Scalars['String']>>;\n  from_lt?: InputMaybe<Scalars['String']>;\n  from_lte?: InputMaybe<Scalars['String']>;\n  from_not?: InputMaybe<Scalars['String']>;\n  from_not_contains?: InputMaybe<Scalars['String']>;\n  from_not_contains_nocase?: InputMaybe<Scalars['String']>;\n  from_not_ends_with?: InputMaybe<Scalars['String']>;\n  from_not_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  from_not_in?: InputMaybe<Array<Scalars['String']>>;\n  from_not_starts_with?: InputMaybe<Scalars['String']>;\n  from_not_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  from_starts_with?: InputMaybe<Scalars['String']>;\n  from_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  hash?: InputMaybe<Scalars['String']>;\n  hash_contains?: InputMaybe<Scalars['String']>;\n  hash_contains_nocase?: InputMaybe<Scalars['String']>;\n  hash_ends_with?: InputMaybe<Scalars['String']>;\n  hash_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  hash_gt?: InputMaybe<Scalars['String']>;\n  hash_gte?: InputMaybe<Scalars['String']>;\n  hash_in?: InputMaybe<Array<Scalars['String']>>;\n  hash_lt?: InputMaybe<Scalars['String']>;\n  hash_lte?: InputMaybe<Scalars['String']>;\n  hash_not?: InputMaybe<Scalars['String']>;\n  hash_not_contains?: InputMaybe<Scalars['String']>;\n  hash_not_contains_nocase?: InputMaybe<Scalars['String']>;\n  hash_not_ends_with?: InputMaybe<Scalars['String']>;\n  hash_not_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  hash_not_in?: InputMaybe<Array<Scalars['String']>>;\n  hash_not_starts_with?: InputMaybe<Scalars['String']>;\n  hash_not_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  hash_starts_with?: InputMaybe<Scalars['String']>;\n  hash_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  id?: InputMaybe<Scalars['ID']>;\n  id_gt?: InputMaybe<Scalars['ID']>;\n  id_gte?: InputMaybe<Scalars['ID']>;\n  id_in?: InputMaybe<Array<Scalars['ID']>>;\n  id_lt?: InputMaybe<Scalars['ID']>;\n  id_lte?: InputMaybe<Scalars['ID']>;\n  id_not?: InputMaybe<Scalars['ID']>;\n  id_not_in?: InputMaybe<Array<Scalars['ID']>>;\n  index?: InputMaybe<Scalars['BigInt']>;\n  index_gt?: InputMaybe<Scalars['BigInt']>;\n  index_gte?: InputMaybe<Scalars['BigInt']>;\n  index_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  index_lt?: InputMaybe<Scalars['BigInt']>;\n  index_lte?: InputMaybe<Scalars['BigInt']>;\n  index_not?: InputMaybe<Scalars['BigInt']>;\n  index_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  logIndex?: InputMaybe<Scalars['Int']>;\n  logIndex_gt?: InputMaybe<Scalars['Int']>;\n  logIndex_gte?: InputMaybe<Scalars['Int']>;\n  logIndex_in?: InputMaybe<Array<Scalars['Int']>>;\n  logIndex_lt?: InputMaybe<Scalars['Int']>;\n  logIndex_lte?: InputMaybe<Scalars['Int']>;\n  logIndex_not?: InputMaybe<Scalars['Int']>;\n  logIndex_not_in?: InputMaybe<Array<Scalars['Int']>>;\n  pods?: InputMaybe<Scalars['BigInt']>;\n  pods_gt?: InputMaybe<Scalars['BigInt']>;\n  pods_gte?: InputMaybe<Scalars['BigInt']>;\n  pods_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  pods_lt?: InputMaybe<Scalars['BigInt']>;\n  pods_lte?: InputMaybe<Scalars['BigInt']>;\n  pods_not?: InputMaybe<Scalars['BigInt']>;\n  pods_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  protocol?: InputMaybe<Scalars['String']>;\n  protocol_?: InputMaybe<Beanstalk_Filter>;\n  protocol_contains?: InputMaybe<Scalars['String']>;\n  protocol_contains_nocase?: InputMaybe<Scalars['String']>;\n  protocol_ends_with?: InputMaybe<Scalars['String']>;\n  protocol_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  protocol_gt?: InputMaybe<Scalars['String']>;\n  protocol_gte?: InputMaybe<Scalars['String']>;\n  protocol_in?: InputMaybe<Array<Scalars['String']>>;\n  protocol_lt?: InputMaybe<Scalars['String']>;\n  protocol_lte?: InputMaybe<Scalars['String']>;\n  protocol_not?: InputMaybe<Scalars['String']>;\n  protocol_not_contains?: InputMaybe<Scalars['String']>;\n  protocol_not_contains_nocase?: InputMaybe<Scalars['String']>;\n  protocol_not_ends_with?: InputMaybe<Scalars['String']>;\n  protocol_not_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  protocol_not_in?: InputMaybe<Array<Scalars['String']>>;\n  protocol_not_starts_with?: InputMaybe<Scalars['String']>;\n  protocol_not_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  protocol_starts_with?: InputMaybe<Scalars['String']>;\n  protocol_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  timestamp?: InputMaybe<Scalars['BigInt']>;\n  timestamp_gt?: InputMaybe<Scalars['BigInt']>;\n  timestamp_gte?: InputMaybe<Scalars['BigInt']>;\n  timestamp_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  timestamp_lt?: InputMaybe<Scalars['BigInt']>;\n  timestamp_lte?: InputMaybe<Scalars['BigInt']>;\n  timestamp_not?: InputMaybe<Scalars['BigInt']>;\n  timestamp_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  to?: InputMaybe<Scalars['String']>;\n  to_contains?: InputMaybe<Scalars['String']>;\n  to_contains_nocase?: InputMaybe<Scalars['String']>;\n  to_ends_with?: InputMaybe<Scalars['String']>;\n  to_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  to_gt?: InputMaybe<Scalars['String']>;\n  to_gte?: InputMaybe<Scalars['String']>;\n  to_in?: InputMaybe<Array<Scalars['String']>>;\n  to_lt?: InputMaybe<Scalars['String']>;\n  to_lte?: InputMaybe<Scalars['String']>;\n  to_not?: InputMaybe<Scalars['String']>;\n  to_not_contains?: InputMaybe<Scalars['String']>;\n  to_not_contains_nocase?: InputMaybe<Scalars['String']>;\n  to_not_ends_with?: InputMaybe<Scalars['String']>;\n  to_not_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  to_not_in?: InputMaybe<Array<Scalars['String']>>;\n  to_not_starts_with?: InputMaybe<Scalars['String']>;\n  to_not_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  to_starts_with?: InputMaybe<Scalars['String']>;\n  to_starts_with_nocase?: InputMaybe<Scalars['String']>;\n};\n\nexport enum PodTransfer_OrderBy {\n  BlockNumber = 'blockNumber',\n  From = 'from',\n  Hash = 'hash',\n  Id = 'id',\n  Index = 'index',\n  LogIndex = 'logIndex',\n  Pods = 'pods',\n  Protocol = 'protocol',\n  Timestamp = 'timestamp',\n  To = 'to'\n}\n\nexport enum ProtocolType {\n  Bridge = 'BRIDGE',\n  Exchange = 'EXCHANGE',\n  Generic = 'GENERIC',\n  Lending = 'LENDING',\n  Yield = 'YIELD'\n}\n\nexport type Query = {\n  __typename?: 'Query';\n  /** Access to subgraph metadata */\n  _meta?: Maybe<_Meta_>;\n  addDeposit?: Maybe<AddDeposit>;\n  addDeposits: Array<AddDeposit>;\n  beanstalk?: Maybe<Beanstalk>;\n  beanstalks: Array<Beanstalk>;\n  chop?: Maybe<Chop>;\n  chops: Array<Chop>;\n  dewhitelistToken?: Maybe<DewhitelistToken>;\n  dewhitelistTokens: Array<DewhitelistToken>;\n  event?: Maybe<Event>;\n  events: Array<Event>;\n  farmer?: Maybe<Farmer>;\n  farmers: Array<Farmer>;\n  fertilizer?: Maybe<Fertilizer>;\n  fertilizerBalance?: Maybe<FertilizerBalance>;\n  fertilizerBalances: Array<FertilizerBalance>;\n  fertilizerToken?: Maybe<FertilizerToken>;\n  fertilizerTokens: Array<FertilizerToken>;\n  fertilizers: Array<Fertilizer>;\n  field?: Maybe<Field>;\n  fieldDailySnapshot?: Maybe<FieldDailySnapshot>;\n  fieldDailySnapshots: Array<FieldDailySnapshot>;\n  fieldEvent?: Maybe<FieldEvent>;\n  fieldEvents: Array<FieldEvent>;\n  fieldHourlySnapshot?: Maybe<FieldHourlySnapshot>;\n  fieldHourlySnapshots: Array<FieldHourlySnapshot>;\n  fields: Array<Field>;\n  harvest?: Maybe<Harvest>;\n  harvests: Array<Harvest>;\n  incentive?: Maybe<Incentive>;\n  incentives: Array<Incentive>;\n  marketplaceEvent?: Maybe<MarketplaceEvent>;\n  marketplaceEvents: Array<MarketplaceEvent>;\n  metapoolOracle?: Maybe<MetapoolOracle>;\n  metapoolOracles: Array<MetapoolOracle>;\n  plot?: Maybe<Plot>;\n  plots: Array<Plot>;\n  podFill?: Maybe<PodFill>;\n  podFills: Array<PodFill>;\n  podListing?: Maybe<PodListing>;\n  podListingCancelled?: Maybe<PodListingCancelled>;\n  podListingCancelleds: Array<PodListingCancelled>;\n  podListingCreated?: Maybe<PodListingCreated>;\n  podListingCreateds: Array<PodListingCreated>;\n  podListingFilled?: Maybe<PodListingFilled>;\n  podListingFilleds: Array<PodListingFilled>;\n  podListings: Array<PodListing>;\n  podMarketplace?: Maybe<PodMarketplace>;\n  podMarketplaceDailySnapshot?: Maybe<PodMarketplaceDailySnapshot>;\n  podMarketplaceDailySnapshots: Array<PodMarketplaceDailySnapshot>;\n  podMarketplaceHourlySnapshot?: Maybe<PodMarketplaceHourlySnapshot>;\n  podMarketplaceHourlySnapshots: Array<PodMarketplaceHourlySnapshot>;\n  podMarketplaces: Array<PodMarketplace>;\n  podOrder?: Maybe<PodOrder>;\n  podOrderCancelled?: Maybe<PodOrderCancelled>;\n  podOrderCancelleds: Array<PodOrderCancelled>;\n  podOrderCreated?: Maybe<PodOrderCreated>;\n  podOrderCreateds: Array<PodOrderCreated>;\n  podOrderFilled?: Maybe<PodOrderFilled>;\n  podOrderFilleds: Array<PodOrderFilled>;\n  podOrders: Array<PodOrder>;\n  podTransfer?: Maybe<PodTransfer>;\n  podTransfers: Array<PodTransfer>;\n  removeDeposit?: Maybe<RemoveDeposit>;\n  removeDeposits: Array<RemoveDeposit>;\n  reward?: Maybe<Reward>;\n  rewardToken?: Maybe<RewardToken>;\n  rewardTokens: Array<RewardToken>;\n  rewards: Array<Reward>;\n  season?: Maybe<Season>;\n  seasons: Array<Season>;\n  seedChange?: Maybe<SeedChange>;\n  seedChanges: Array<SeedChange>;\n  silo?: Maybe<Silo>;\n  siloAsset?: Maybe<SiloAsset>;\n  siloAssetDailySnapshot?: Maybe<SiloAssetDailySnapshot>;\n  siloAssetDailySnapshots: Array<SiloAssetDailySnapshot>;\n  siloAssetHourlySnapshot?: Maybe<SiloAssetHourlySnapshot>;\n  siloAssetHourlySnapshots: Array<SiloAssetHourlySnapshot>;\n  siloAssets: Array<SiloAsset>;\n  siloDailySnapshot?: Maybe<SiloDailySnapshot>;\n  siloDailySnapshots: Array<SiloDailySnapshot>;\n  siloDeposit?: Maybe<SiloDeposit>;\n  siloDeposits: Array<SiloDeposit>;\n  siloEvent?: Maybe<SiloEvent>;\n  siloEvents: Array<SiloEvent>;\n  siloHourlySnapshot?: Maybe<SiloHourlySnapshot>;\n  siloHourlySnapshots: Array<SiloHourlySnapshot>;\n  siloWithdraw?: Maybe<SiloWithdraw>;\n  siloWithdraws: Array<SiloWithdraw>;\n  siloYield?: Maybe<SiloYield>;\n  siloYields: Array<SiloYield>;\n  silos: Array<Silo>;\n  stalkChange?: Maybe<StalkChange>;\n  stalkChanges: Array<StalkChange>;\n  token?: Maybe<Token>;\n  tokens: Array<Token>;\n  transaction?: Maybe<Transaction>;\n  transactions: Array<Transaction>;\n  whitelistToken?: Maybe<WhitelistToken>;\n  whitelistTokens: Array<WhitelistToken>;\n};\n\n\nexport type Query_MetaArgs = {\n  block?: InputMaybe<Block_Height>;\n};\n\n\nexport type QueryAddDepositArgs = {\n  block?: InputMaybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type QueryAddDepositsArgs = {\n  block?: InputMaybe<Block_Height>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<AddDeposit_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: InputMaybe<AddDeposit_Filter>;\n};\n\n\nexport type QueryBeanstalkArgs = {\n  block?: InputMaybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type QueryBeanstalksArgs = {\n  block?: InputMaybe<Block_Height>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<Beanstalk_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: InputMaybe<Beanstalk_Filter>;\n};\n\n\nexport type QueryChopArgs = {\n  block?: InputMaybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type QueryChopsArgs = {\n  block?: InputMaybe<Block_Height>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<Chop_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: InputMaybe<Chop_Filter>;\n};\n\n\nexport type QueryDewhitelistTokenArgs = {\n  block?: InputMaybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type QueryDewhitelistTokensArgs = {\n  block?: InputMaybe<Block_Height>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<DewhitelistToken_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: InputMaybe<DewhitelistToken_Filter>;\n};\n\n\nexport type QueryEventArgs = {\n  block?: InputMaybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type QueryEventsArgs = {\n  block?: InputMaybe<Block_Height>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<Event_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: InputMaybe<Event_Filter>;\n};\n\n\nexport type QueryFarmerArgs = {\n  block?: InputMaybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type QueryFarmersArgs = {\n  block?: InputMaybe<Block_Height>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<Farmer_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: InputMaybe<Farmer_Filter>;\n};\n\n\nexport type QueryFertilizerArgs = {\n  block?: InputMaybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type QueryFertilizerBalanceArgs = {\n  block?: InputMaybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type QueryFertilizerBalancesArgs = {\n  block?: InputMaybe<Block_Height>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<FertilizerBalance_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: InputMaybe<FertilizerBalance_Filter>;\n};\n\n\nexport type QueryFertilizerTokenArgs = {\n  block?: InputMaybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type QueryFertilizerTokensArgs = {\n  block?: InputMaybe<Block_Height>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<FertilizerToken_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: InputMaybe<FertilizerToken_Filter>;\n};\n\n\nexport type QueryFertilizersArgs = {\n  block?: InputMaybe<Block_Height>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<Fertilizer_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: InputMaybe<Fertilizer_Filter>;\n};\n\n\nexport type QueryFieldArgs = {\n  block?: InputMaybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type QueryFieldDailySnapshotArgs = {\n  block?: InputMaybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type QueryFieldDailySnapshotsArgs = {\n  block?: InputMaybe<Block_Height>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<FieldDailySnapshot_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: InputMaybe<FieldDailySnapshot_Filter>;\n};\n\n\nexport type QueryFieldEventArgs = {\n  block?: InputMaybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type QueryFieldEventsArgs = {\n  block?: InputMaybe<Block_Height>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<FieldEvent_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: InputMaybe<FieldEvent_Filter>;\n};\n\n\nexport type QueryFieldHourlySnapshotArgs = {\n  block?: InputMaybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type QueryFieldHourlySnapshotsArgs = {\n  block?: InputMaybe<Block_Height>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<FieldHourlySnapshot_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: InputMaybe<FieldHourlySnapshot_Filter>;\n};\n\n\nexport type QueryFieldsArgs = {\n  block?: InputMaybe<Block_Height>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<Field_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: InputMaybe<Field_Filter>;\n};\n\n\nexport type QueryHarvestArgs = {\n  block?: InputMaybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type QueryHarvestsArgs = {\n  block?: InputMaybe<Block_Height>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<Harvest_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: InputMaybe<Harvest_Filter>;\n};\n\n\nexport type QueryIncentiveArgs = {\n  block?: InputMaybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type QueryIncentivesArgs = {\n  block?: InputMaybe<Block_Height>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<Incentive_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: InputMaybe<Incentive_Filter>;\n};\n\n\nexport type QueryMarketplaceEventArgs = {\n  block?: InputMaybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type QueryMarketplaceEventsArgs = {\n  block?: InputMaybe<Block_Height>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<MarketplaceEvent_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: InputMaybe<MarketplaceEvent_Filter>;\n};\n\n\nexport type QueryMetapoolOracleArgs = {\n  block?: InputMaybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type QueryMetapoolOraclesArgs = {\n  block?: InputMaybe<Block_Height>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<MetapoolOracle_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: InputMaybe<MetapoolOracle_Filter>;\n};\n\n\nexport type QueryPlotArgs = {\n  block?: InputMaybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type QueryPlotsArgs = {\n  block?: InputMaybe<Block_Height>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<Plot_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: InputMaybe<Plot_Filter>;\n};\n\n\nexport type QueryPodFillArgs = {\n  block?: InputMaybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type QueryPodFillsArgs = {\n  block?: InputMaybe<Block_Height>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<PodFill_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: InputMaybe<PodFill_Filter>;\n};\n\n\nexport type QueryPodListingArgs = {\n  block?: InputMaybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type QueryPodListingCancelledArgs = {\n  block?: InputMaybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type QueryPodListingCancelledsArgs = {\n  block?: InputMaybe<Block_Height>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<PodListingCancelled_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: InputMaybe<PodListingCancelled_Filter>;\n};\n\n\nexport type QueryPodListingCreatedArgs = {\n  block?: InputMaybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type QueryPodListingCreatedsArgs = {\n  block?: InputMaybe<Block_Height>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<PodListingCreated_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: InputMaybe<PodListingCreated_Filter>;\n};\n\n\nexport type QueryPodListingFilledArgs = {\n  block?: InputMaybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type QueryPodListingFilledsArgs = {\n  block?: InputMaybe<Block_Height>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<PodListingFilled_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: InputMaybe<PodListingFilled_Filter>;\n};\n\n\nexport type QueryPodListingsArgs = {\n  block?: InputMaybe<Block_Height>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<PodListing_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: InputMaybe<PodListing_Filter>;\n};\n\n\nexport type QueryPodMarketplaceArgs = {\n  block?: InputMaybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type QueryPodMarketplaceDailySnapshotArgs = {\n  block?: InputMaybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type QueryPodMarketplaceDailySnapshotsArgs = {\n  block?: InputMaybe<Block_Height>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<PodMarketplaceDailySnapshot_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: InputMaybe<PodMarketplaceDailySnapshot_Filter>;\n};\n\n\nexport type QueryPodMarketplaceHourlySnapshotArgs = {\n  block?: InputMaybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type QueryPodMarketplaceHourlySnapshotsArgs = {\n  block?: InputMaybe<Block_Height>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<PodMarketplaceHourlySnapshot_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: InputMaybe<PodMarketplaceHourlySnapshot_Filter>;\n};\n\n\nexport type QueryPodMarketplacesArgs = {\n  block?: InputMaybe<Block_Height>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<PodMarketplace_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: InputMaybe<PodMarketplace_Filter>;\n};\n\n\nexport type QueryPodOrderArgs = {\n  block?: InputMaybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type QueryPodOrderCancelledArgs = {\n  block?: InputMaybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type QueryPodOrderCancelledsArgs = {\n  block?: InputMaybe<Block_Height>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<PodOrderCancelled_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: InputMaybe<PodOrderCancelled_Filter>;\n};\n\n\nexport type QueryPodOrderCreatedArgs = {\n  block?: InputMaybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type QueryPodOrderCreatedsArgs = {\n  block?: InputMaybe<Block_Height>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<PodOrderCreated_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: InputMaybe<PodOrderCreated_Filter>;\n};\n\n\nexport type QueryPodOrderFilledArgs = {\n  block?: InputMaybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type QueryPodOrderFilledsArgs = {\n  block?: InputMaybe<Block_Height>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<PodOrderFilled_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: InputMaybe<PodOrderFilled_Filter>;\n};\n\n\nexport type QueryPodOrdersArgs = {\n  block?: InputMaybe<Block_Height>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<PodOrder_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: InputMaybe<PodOrder_Filter>;\n};\n\n\nexport type QueryPodTransferArgs = {\n  block?: InputMaybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type QueryPodTransfersArgs = {\n  block?: InputMaybe<Block_Height>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<PodTransfer_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: InputMaybe<PodTransfer_Filter>;\n};\n\n\nexport type QueryRemoveDepositArgs = {\n  block?: InputMaybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type QueryRemoveDepositsArgs = {\n  block?: InputMaybe<Block_Height>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<RemoveDeposit_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: InputMaybe<RemoveDeposit_Filter>;\n};\n\n\nexport type QueryRewardArgs = {\n  block?: InputMaybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type QueryRewardTokenArgs = {\n  block?: InputMaybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type QueryRewardTokensArgs = {\n  block?: InputMaybe<Block_Height>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<RewardToken_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: InputMaybe<RewardToken_Filter>;\n};\n\n\nexport type QueryRewardsArgs = {\n  block?: InputMaybe<Block_Height>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<Reward_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: InputMaybe<Reward_Filter>;\n};\n\n\nexport type QuerySeasonArgs = {\n  block?: InputMaybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type QuerySeasonsArgs = {\n  block?: InputMaybe<Block_Height>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<Season_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: InputMaybe<Season_Filter>;\n};\n\n\nexport type QuerySeedChangeArgs = {\n  block?: InputMaybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type QuerySeedChangesArgs = {\n  block?: InputMaybe<Block_Height>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<SeedChange_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: InputMaybe<SeedChange_Filter>;\n};\n\n\nexport type QuerySiloArgs = {\n  block?: InputMaybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type QuerySiloAssetArgs = {\n  block?: InputMaybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type QuerySiloAssetDailySnapshotArgs = {\n  block?: InputMaybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type QuerySiloAssetDailySnapshotsArgs = {\n  block?: InputMaybe<Block_Height>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<SiloAssetDailySnapshot_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: InputMaybe<SiloAssetDailySnapshot_Filter>;\n};\n\n\nexport type QuerySiloAssetHourlySnapshotArgs = {\n  block?: InputMaybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type QuerySiloAssetHourlySnapshotsArgs = {\n  block?: InputMaybe<Block_Height>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<SiloAssetHourlySnapshot_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: InputMaybe<SiloAssetHourlySnapshot_Filter>;\n};\n\n\nexport type QuerySiloAssetsArgs = {\n  block?: InputMaybe<Block_Height>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<SiloAsset_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: InputMaybe<SiloAsset_Filter>;\n};\n\n\nexport type QuerySiloDailySnapshotArgs = {\n  block?: InputMaybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type QuerySiloDailySnapshotsArgs = {\n  block?: InputMaybe<Block_Height>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<SiloDailySnapshot_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: InputMaybe<SiloDailySnapshot_Filter>;\n};\n\n\nexport type QuerySiloDepositArgs = {\n  block?: InputMaybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type QuerySiloDepositsArgs = {\n  block?: InputMaybe<Block_Height>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<SiloDeposit_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: InputMaybe<SiloDeposit_Filter>;\n};\n\n\nexport type QuerySiloEventArgs = {\n  block?: InputMaybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type QuerySiloEventsArgs = {\n  block?: InputMaybe<Block_Height>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<SiloEvent_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: InputMaybe<SiloEvent_Filter>;\n};\n\n\nexport type QuerySiloHourlySnapshotArgs = {\n  block?: InputMaybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type QuerySiloHourlySnapshotsArgs = {\n  block?: InputMaybe<Block_Height>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<SiloHourlySnapshot_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: InputMaybe<SiloHourlySnapshot_Filter>;\n};\n\n\nexport type QuerySiloWithdrawArgs = {\n  block?: InputMaybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type QuerySiloWithdrawsArgs = {\n  block?: InputMaybe<Block_Height>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<SiloWithdraw_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: InputMaybe<SiloWithdraw_Filter>;\n};\n\n\nexport type QuerySiloYieldArgs = {\n  block?: InputMaybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type QuerySiloYieldsArgs = {\n  block?: InputMaybe<Block_Height>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<SiloYield_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: InputMaybe<SiloYield_Filter>;\n};\n\n\nexport type QuerySilosArgs = {\n  block?: InputMaybe<Block_Height>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<Silo_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: InputMaybe<Silo_Filter>;\n};\n\n\nexport type QueryStalkChangeArgs = {\n  block?: InputMaybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type QueryStalkChangesArgs = {\n  block?: InputMaybe<Block_Height>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<StalkChange_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: InputMaybe<StalkChange_Filter>;\n};\n\n\nexport type QueryTokenArgs = {\n  block?: InputMaybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type QueryTokensArgs = {\n  block?: InputMaybe<Block_Height>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<Token_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: InputMaybe<Token_Filter>;\n};\n\n\nexport type QueryTransactionArgs = {\n  block?: InputMaybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type QueryTransactionsArgs = {\n  block?: InputMaybe<Block_Height>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<Transaction_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: InputMaybe<Transaction_Filter>;\n};\n\n\nexport type QueryWhitelistTokenArgs = {\n  block?: InputMaybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type QueryWhitelistTokensArgs = {\n  block?: InputMaybe<Block_Height>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<WhitelistToken_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: InputMaybe<WhitelistToken_Filter>;\n};\n\nexport type RemoveDeposit = SiloEvent & {\n  __typename?: 'RemoveDeposit';\n  /**  Account removing deposit */\n  account: Scalars['String'];\n  /**  Amount of token removed  */\n  amount: Scalars['BigInt'];\n  /**  Block number of this event  */\n  blockNumber: Scalars['BigInt'];\n  /**  Transaction hash of the transaction that emitted this event  */\n  hash: Scalars['String'];\n  /** removeDeposit-{ Transaction hash }-{ Log index } */\n  id: Scalars['ID'];\n  /**  Event log index. For transactions that don't emit event, create arbitrary index starting from 0  */\n  logIndex: Scalars['Int'];\n  /**  The protocol this transaction belongs to  */\n  protocol: Beanstalk;\n  /**  Season of deposit removed  */\n  season: Scalars['Int'];\n  /**  Timestamp of this event  */\n  timestamp: Scalars['BigInt'];\n  /**  Token removed */\n  token: Scalars['String'];\n};\n\nexport type RemoveDeposit_Filter = {\n  /** Filter for the block changed event. */\n  _change_block?: InputMaybe<BlockChangedFilter>;\n  account?: InputMaybe<Scalars['String']>;\n  account_contains?: InputMaybe<Scalars['String']>;\n  account_contains_nocase?: InputMaybe<Scalars['String']>;\n  account_ends_with?: InputMaybe<Scalars['String']>;\n  account_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  account_gt?: InputMaybe<Scalars['String']>;\n  account_gte?: InputMaybe<Scalars['String']>;\n  account_in?: InputMaybe<Array<Scalars['String']>>;\n  account_lt?: InputMaybe<Scalars['String']>;\n  account_lte?: InputMaybe<Scalars['String']>;\n  account_not?: InputMaybe<Scalars['String']>;\n  account_not_contains?: InputMaybe<Scalars['String']>;\n  account_not_contains_nocase?: InputMaybe<Scalars['String']>;\n  account_not_ends_with?: InputMaybe<Scalars['String']>;\n  account_not_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  account_not_in?: InputMaybe<Array<Scalars['String']>>;\n  account_not_starts_with?: InputMaybe<Scalars['String']>;\n  account_not_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  account_starts_with?: InputMaybe<Scalars['String']>;\n  account_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  amount?: InputMaybe<Scalars['BigInt']>;\n  amount_gt?: InputMaybe<Scalars['BigInt']>;\n  amount_gte?: InputMaybe<Scalars['BigInt']>;\n  amount_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  amount_lt?: InputMaybe<Scalars['BigInt']>;\n  amount_lte?: InputMaybe<Scalars['BigInt']>;\n  amount_not?: InputMaybe<Scalars['BigInt']>;\n  amount_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  blockNumber?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_gt?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_gte?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  blockNumber_lt?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_lte?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_not?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  hash?: InputMaybe<Scalars['String']>;\n  hash_contains?: InputMaybe<Scalars['String']>;\n  hash_contains_nocase?: InputMaybe<Scalars['String']>;\n  hash_ends_with?: InputMaybe<Scalars['String']>;\n  hash_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  hash_gt?: InputMaybe<Scalars['String']>;\n  hash_gte?: InputMaybe<Scalars['String']>;\n  hash_in?: InputMaybe<Array<Scalars['String']>>;\n  hash_lt?: InputMaybe<Scalars['String']>;\n  hash_lte?: InputMaybe<Scalars['String']>;\n  hash_not?: InputMaybe<Scalars['String']>;\n  hash_not_contains?: InputMaybe<Scalars['String']>;\n  hash_not_contains_nocase?: InputMaybe<Scalars['String']>;\n  hash_not_ends_with?: InputMaybe<Scalars['String']>;\n  hash_not_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  hash_not_in?: InputMaybe<Array<Scalars['String']>>;\n  hash_not_starts_with?: InputMaybe<Scalars['String']>;\n  hash_not_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  hash_starts_with?: InputMaybe<Scalars['String']>;\n  hash_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  id?: InputMaybe<Scalars['ID']>;\n  id_gt?: InputMaybe<Scalars['ID']>;\n  id_gte?: InputMaybe<Scalars['ID']>;\n  id_in?: InputMaybe<Array<Scalars['ID']>>;\n  id_lt?: InputMaybe<Scalars['ID']>;\n  id_lte?: InputMaybe<Scalars['ID']>;\n  id_not?: InputMaybe<Scalars['ID']>;\n  id_not_in?: InputMaybe<Array<Scalars['ID']>>;\n  logIndex?: InputMaybe<Scalars['Int']>;\n  logIndex_gt?: InputMaybe<Scalars['Int']>;\n  logIndex_gte?: InputMaybe<Scalars['Int']>;\n  logIndex_in?: InputMaybe<Array<Scalars['Int']>>;\n  logIndex_lt?: InputMaybe<Scalars['Int']>;\n  logIndex_lte?: InputMaybe<Scalars['Int']>;\n  logIndex_not?: InputMaybe<Scalars['Int']>;\n  logIndex_not_in?: InputMaybe<Array<Scalars['Int']>>;\n  protocol?: InputMaybe<Scalars['String']>;\n  protocol_?: InputMaybe<Beanstalk_Filter>;\n  protocol_contains?: InputMaybe<Scalars['String']>;\n  protocol_contains_nocase?: InputMaybe<Scalars['String']>;\n  protocol_ends_with?: InputMaybe<Scalars['String']>;\n  protocol_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  protocol_gt?: InputMaybe<Scalars['String']>;\n  protocol_gte?: InputMaybe<Scalars['String']>;\n  protocol_in?: InputMaybe<Array<Scalars['String']>>;\n  protocol_lt?: InputMaybe<Scalars['String']>;\n  protocol_lte?: InputMaybe<Scalars['String']>;\n  protocol_not?: InputMaybe<Scalars['String']>;\n  protocol_not_contains?: InputMaybe<Scalars['String']>;\n  protocol_not_contains_nocase?: InputMaybe<Scalars['String']>;\n  protocol_not_ends_with?: InputMaybe<Scalars['String']>;\n  protocol_not_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  protocol_not_in?: InputMaybe<Array<Scalars['String']>>;\n  protocol_not_starts_with?: InputMaybe<Scalars['String']>;\n  protocol_not_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  protocol_starts_with?: InputMaybe<Scalars['String']>;\n  protocol_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  season?: InputMaybe<Scalars['Int']>;\n  season_gt?: InputMaybe<Scalars['Int']>;\n  season_gte?: InputMaybe<Scalars['Int']>;\n  season_in?: InputMaybe<Array<Scalars['Int']>>;\n  season_lt?: InputMaybe<Scalars['Int']>;\n  season_lte?: InputMaybe<Scalars['Int']>;\n  season_not?: InputMaybe<Scalars['Int']>;\n  season_not_in?: InputMaybe<Array<Scalars['Int']>>;\n  timestamp?: InputMaybe<Scalars['BigInt']>;\n  timestamp_gt?: InputMaybe<Scalars['BigInt']>;\n  timestamp_gte?: InputMaybe<Scalars['BigInt']>;\n  timestamp_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  timestamp_lt?: InputMaybe<Scalars['BigInt']>;\n  timestamp_lte?: InputMaybe<Scalars['BigInt']>;\n  timestamp_not?: InputMaybe<Scalars['BigInt']>;\n  timestamp_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  token?: InputMaybe<Scalars['String']>;\n  token_contains?: InputMaybe<Scalars['String']>;\n  token_contains_nocase?: InputMaybe<Scalars['String']>;\n  token_ends_with?: InputMaybe<Scalars['String']>;\n  token_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  token_gt?: InputMaybe<Scalars['String']>;\n  token_gte?: InputMaybe<Scalars['String']>;\n  token_in?: InputMaybe<Array<Scalars['String']>>;\n  token_lt?: InputMaybe<Scalars['String']>;\n  token_lte?: InputMaybe<Scalars['String']>;\n  token_not?: InputMaybe<Scalars['String']>;\n  token_not_contains?: InputMaybe<Scalars['String']>;\n  token_not_contains_nocase?: InputMaybe<Scalars['String']>;\n  token_not_ends_with?: InputMaybe<Scalars['String']>;\n  token_not_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  token_not_in?: InputMaybe<Array<Scalars['String']>>;\n  token_not_starts_with?: InputMaybe<Scalars['String']>;\n  token_not_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  token_starts_with?: InputMaybe<Scalars['String']>;\n  token_starts_with_nocase?: InputMaybe<Scalars['String']>;\n};\n\nexport enum RemoveDeposit_OrderBy {\n  Account = 'account',\n  Amount = 'amount',\n  BlockNumber = 'blockNumber',\n  Hash = 'hash',\n  Id = 'id',\n  LogIndex = 'logIndex',\n  Protocol = 'protocol',\n  Season = 'season',\n  Timestamp = 'timestamp',\n  Token = 'token'\n}\n\nexport type Reward = SiloEvent & {\n  __typename?: 'Reward';\n  /**  Block number of this event  */\n  blockNumber: Scalars['BigInt'];\n  /**  Transaction hash of the transaction that emitted this event  */\n  hash: Scalars['String'];\n  /** reward-{ Transaction hash }-{ Log index } */\n  id: Scalars['ID'];\n  /**  Event log index. For transactions that don't emit event, create arbitrary index starting from 0  */\n  logIndex: Scalars['Int'];\n  /**  The protocol this transaction belongs to  */\n  protocol: Beanstalk;\n  /**  Season of reward  */\n  season: Scalars['Int'];\n  /**  Timestamp of this event  */\n  timestamp: Scalars['BigInt'];\n  /**  Amount minted to fertilizer */\n  toFertilizer: Scalars['BigInt'];\n  /**  Amount minted to pod line */\n  toField: Scalars['BigInt'];\n  /**  Amount minted to silo */\n  toSilo: Scalars['BigInt'];\n};\n\nexport type RewardToken = {\n  __typename?: 'RewardToken';\n  /**  { Reward token type }-{ Smart contract address of the reward token }  */\n  id: Scalars['ID'];\n  /**  Reference to the actual token  */\n  token: Token;\n  /**  The type of the reward token  */\n  type: RewardTokenType;\n};\n\nexport enum RewardTokenType {\n  /**  For reward tokens awarded to borrowers  */\n  Borrow = 'BORROW',\n  /**  For reward tokens awarded to LPs/lenders  */\n  Deposit = 'DEPOSIT'\n}\n\nexport type RewardToken_Filter = {\n  /** Filter for the block changed event. */\n  _change_block?: InputMaybe<BlockChangedFilter>;\n  id?: InputMaybe<Scalars['ID']>;\n  id_gt?: InputMaybe<Scalars['ID']>;\n  id_gte?: InputMaybe<Scalars['ID']>;\n  id_in?: InputMaybe<Array<Scalars['ID']>>;\n  id_lt?: InputMaybe<Scalars['ID']>;\n  id_lte?: InputMaybe<Scalars['ID']>;\n  id_not?: InputMaybe<Scalars['ID']>;\n  id_not_in?: InputMaybe<Array<Scalars['ID']>>;\n  token?: InputMaybe<Scalars['String']>;\n  token_?: InputMaybe<Token_Filter>;\n  token_contains?: InputMaybe<Scalars['String']>;\n  token_contains_nocase?: InputMaybe<Scalars['String']>;\n  token_ends_with?: InputMaybe<Scalars['String']>;\n  token_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  token_gt?: InputMaybe<Scalars['String']>;\n  token_gte?: InputMaybe<Scalars['String']>;\n  token_in?: InputMaybe<Array<Scalars['String']>>;\n  token_lt?: InputMaybe<Scalars['String']>;\n  token_lte?: InputMaybe<Scalars['String']>;\n  token_not?: InputMaybe<Scalars['String']>;\n  token_not_contains?: InputMaybe<Scalars['String']>;\n  token_not_contains_nocase?: InputMaybe<Scalars['String']>;\n  token_not_ends_with?: InputMaybe<Scalars['String']>;\n  token_not_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  token_not_in?: InputMaybe<Array<Scalars['String']>>;\n  token_not_starts_with?: InputMaybe<Scalars['String']>;\n  token_not_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  token_starts_with?: InputMaybe<Scalars['String']>;\n  token_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  type?: InputMaybe<RewardTokenType>;\n  type_in?: InputMaybe<Array<RewardTokenType>>;\n  type_not?: InputMaybe<RewardTokenType>;\n  type_not_in?: InputMaybe<Array<RewardTokenType>>;\n};\n\nexport enum RewardToken_OrderBy {\n  Id = 'id',\n  Token = 'token',\n  Type = 'type'\n}\n\nexport type Reward_Filter = {\n  /** Filter for the block changed event. */\n  _change_block?: InputMaybe<BlockChangedFilter>;\n  blockNumber?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_gt?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_gte?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  blockNumber_lt?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_lte?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_not?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  hash?: InputMaybe<Scalars['String']>;\n  hash_contains?: InputMaybe<Scalars['String']>;\n  hash_contains_nocase?: InputMaybe<Scalars['String']>;\n  hash_ends_with?: InputMaybe<Scalars['String']>;\n  hash_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  hash_gt?: InputMaybe<Scalars['String']>;\n  hash_gte?: InputMaybe<Scalars['String']>;\n  hash_in?: InputMaybe<Array<Scalars['String']>>;\n  hash_lt?: InputMaybe<Scalars['String']>;\n  hash_lte?: InputMaybe<Scalars['String']>;\n  hash_not?: InputMaybe<Scalars['String']>;\n  hash_not_contains?: InputMaybe<Scalars['String']>;\n  hash_not_contains_nocase?: InputMaybe<Scalars['String']>;\n  hash_not_ends_with?: InputMaybe<Scalars['String']>;\n  hash_not_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  hash_not_in?: InputMaybe<Array<Scalars['String']>>;\n  hash_not_starts_with?: InputMaybe<Scalars['String']>;\n  hash_not_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  hash_starts_with?: InputMaybe<Scalars['String']>;\n  hash_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  id?: InputMaybe<Scalars['ID']>;\n  id_gt?: InputMaybe<Scalars['ID']>;\n  id_gte?: InputMaybe<Scalars['ID']>;\n  id_in?: InputMaybe<Array<Scalars['ID']>>;\n  id_lt?: InputMaybe<Scalars['ID']>;\n  id_lte?: InputMaybe<Scalars['ID']>;\n  id_not?: InputMaybe<Scalars['ID']>;\n  id_not_in?: InputMaybe<Array<Scalars['ID']>>;\n  logIndex?: InputMaybe<Scalars['Int']>;\n  logIndex_gt?: InputMaybe<Scalars['Int']>;\n  logIndex_gte?: InputMaybe<Scalars['Int']>;\n  logIndex_in?: InputMaybe<Array<Scalars['Int']>>;\n  logIndex_lt?: InputMaybe<Scalars['Int']>;\n  logIndex_lte?: InputMaybe<Scalars['Int']>;\n  logIndex_not?: InputMaybe<Scalars['Int']>;\n  logIndex_not_in?: InputMaybe<Array<Scalars['Int']>>;\n  protocol?: InputMaybe<Scalars['String']>;\n  protocol_?: InputMaybe<Beanstalk_Filter>;\n  protocol_contains?: InputMaybe<Scalars['String']>;\n  protocol_contains_nocase?: InputMaybe<Scalars['String']>;\n  protocol_ends_with?: InputMaybe<Scalars['String']>;\n  protocol_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  protocol_gt?: InputMaybe<Scalars['String']>;\n  protocol_gte?: InputMaybe<Scalars['String']>;\n  protocol_in?: InputMaybe<Array<Scalars['String']>>;\n  protocol_lt?: InputMaybe<Scalars['String']>;\n  protocol_lte?: InputMaybe<Scalars['String']>;\n  protocol_not?: InputMaybe<Scalars['String']>;\n  protocol_not_contains?: InputMaybe<Scalars['String']>;\n  protocol_not_contains_nocase?: InputMaybe<Scalars['String']>;\n  protocol_not_ends_with?: InputMaybe<Scalars['String']>;\n  protocol_not_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  protocol_not_in?: InputMaybe<Array<Scalars['String']>>;\n  protocol_not_starts_with?: InputMaybe<Scalars['String']>;\n  protocol_not_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  protocol_starts_with?: InputMaybe<Scalars['String']>;\n  protocol_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  season?: InputMaybe<Scalars['Int']>;\n  season_gt?: InputMaybe<Scalars['Int']>;\n  season_gte?: InputMaybe<Scalars['Int']>;\n  season_in?: InputMaybe<Array<Scalars['Int']>>;\n  season_lt?: InputMaybe<Scalars['Int']>;\n  season_lte?: InputMaybe<Scalars['Int']>;\n  season_not?: InputMaybe<Scalars['Int']>;\n  season_not_in?: InputMaybe<Array<Scalars['Int']>>;\n  timestamp?: InputMaybe<Scalars['BigInt']>;\n  timestamp_gt?: InputMaybe<Scalars['BigInt']>;\n  timestamp_gte?: InputMaybe<Scalars['BigInt']>;\n  timestamp_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  timestamp_lt?: InputMaybe<Scalars['BigInt']>;\n  timestamp_lte?: InputMaybe<Scalars['BigInt']>;\n  timestamp_not?: InputMaybe<Scalars['BigInt']>;\n  timestamp_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  toFertilizer?: InputMaybe<Scalars['BigInt']>;\n  toFertilizer_gt?: InputMaybe<Scalars['BigInt']>;\n  toFertilizer_gte?: InputMaybe<Scalars['BigInt']>;\n  toFertilizer_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  toFertilizer_lt?: InputMaybe<Scalars['BigInt']>;\n  toFertilizer_lte?: InputMaybe<Scalars['BigInt']>;\n  toFertilizer_not?: InputMaybe<Scalars['BigInt']>;\n  toFertilizer_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  toField?: InputMaybe<Scalars['BigInt']>;\n  toField_gt?: InputMaybe<Scalars['BigInt']>;\n  toField_gte?: InputMaybe<Scalars['BigInt']>;\n  toField_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  toField_lt?: InputMaybe<Scalars['BigInt']>;\n  toField_lte?: InputMaybe<Scalars['BigInt']>;\n  toField_not?: InputMaybe<Scalars['BigInt']>;\n  toField_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  toSilo?: InputMaybe<Scalars['BigInt']>;\n  toSilo_gt?: InputMaybe<Scalars['BigInt']>;\n  toSilo_gte?: InputMaybe<Scalars['BigInt']>;\n  toSilo_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  toSilo_lt?: InputMaybe<Scalars['BigInt']>;\n  toSilo_lte?: InputMaybe<Scalars['BigInt']>;\n  toSilo_not?: InputMaybe<Scalars['BigInt']>;\n  toSilo_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n};\n\nexport enum Reward_OrderBy {\n  BlockNumber = 'blockNumber',\n  Hash = 'hash',\n  Id = 'id',\n  LogIndex = 'logIndex',\n  Protocol = 'protocol',\n  Season = 'season',\n  Timestamp = 'timestamp',\n  ToFertilizer = 'toFertilizer',\n  ToField = 'toField',\n  ToSilo = 'toSilo'\n}\n\nexport type Season = {\n  __typename?: 'Season';\n  /**  Total Bean supply  */\n  beans: Scalars['BigInt'];\n  /**  Beanstalk Contract Address  */\n  beanstalk: Beanstalk;\n  /**  Time weighted deltaB  */\n  deltaB: Scalars['BigInt'];\n  /**  Change in Bean supply  */\n  deltaBeans: Scalars['BigInt'];\n  /**  New harvestable index for the season  */\n  harvestableIndex: Scalars['BigInt'];\n  /**  Season Number */\n  id: Scalars['ID'];\n  /**  Amount of Beans paid to sunrise caller  */\n  incentiveBeans: Scalars['BigInt'];\n  /**  Bean Market Cap  */\n  marketCap: Scalars['BigDecimal'];\n  /**  Price of BEAN during sunrise  */\n  price: Scalars['BigDecimal'];\n  /**  Amount of Beans minted during sunrise  */\n  rewardBeans: Scalars['BigInt'];\n  /**  Season number in Int form for sorting  */\n  season: Scalars['Int'];\n  /**  Block timestamp when sunrise was called  */\n  timestamp: Scalars['BigInt'];\n};\n\nexport type Season_Filter = {\n  /** Filter for the block changed event. */\n  _change_block?: InputMaybe<BlockChangedFilter>;\n  beans?: InputMaybe<Scalars['BigInt']>;\n  beans_gt?: InputMaybe<Scalars['BigInt']>;\n  beans_gte?: InputMaybe<Scalars['BigInt']>;\n  beans_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  beans_lt?: InputMaybe<Scalars['BigInt']>;\n  beans_lte?: InputMaybe<Scalars['BigInt']>;\n  beans_not?: InputMaybe<Scalars['BigInt']>;\n  beans_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  beanstalk?: InputMaybe<Scalars['String']>;\n  beanstalk_?: InputMaybe<Beanstalk_Filter>;\n  beanstalk_contains?: InputMaybe<Scalars['String']>;\n  beanstalk_contains_nocase?: InputMaybe<Scalars['String']>;\n  beanstalk_ends_with?: InputMaybe<Scalars['String']>;\n  beanstalk_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  beanstalk_gt?: InputMaybe<Scalars['String']>;\n  beanstalk_gte?: InputMaybe<Scalars['String']>;\n  beanstalk_in?: InputMaybe<Array<Scalars['String']>>;\n  beanstalk_lt?: InputMaybe<Scalars['String']>;\n  beanstalk_lte?: InputMaybe<Scalars['String']>;\n  beanstalk_not?: InputMaybe<Scalars['String']>;\n  beanstalk_not_contains?: InputMaybe<Scalars['String']>;\n  beanstalk_not_contains_nocase?: InputMaybe<Scalars['String']>;\n  beanstalk_not_ends_with?: InputMaybe<Scalars['String']>;\n  beanstalk_not_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  beanstalk_not_in?: InputMaybe<Array<Scalars['String']>>;\n  beanstalk_not_starts_with?: InputMaybe<Scalars['String']>;\n  beanstalk_not_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  beanstalk_starts_with?: InputMaybe<Scalars['String']>;\n  beanstalk_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  deltaB?: InputMaybe<Scalars['BigInt']>;\n  deltaB_gt?: InputMaybe<Scalars['BigInt']>;\n  deltaB_gte?: InputMaybe<Scalars['BigInt']>;\n  deltaB_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  deltaB_lt?: InputMaybe<Scalars['BigInt']>;\n  deltaB_lte?: InputMaybe<Scalars['BigInt']>;\n  deltaB_not?: InputMaybe<Scalars['BigInt']>;\n  deltaB_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  deltaBeans?: InputMaybe<Scalars['BigInt']>;\n  deltaBeans_gt?: InputMaybe<Scalars['BigInt']>;\n  deltaBeans_gte?: InputMaybe<Scalars['BigInt']>;\n  deltaBeans_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  deltaBeans_lt?: InputMaybe<Scalars['BigInt']>;\n  deltaBeans_lte?: InputMaybe<Scalars['BigInt']>;\n  deltaBeans_not?: InputMaybe<Scalars['BigInt']>;\n  deltaBeans_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  harvestableIndex?: InputMaybe<Scalars['BigInt']>;\n  harvestableIndex_gt?: InputMaybe<Scalars['BigInt']>;\n  harvestableIndex_gte?: InputMaybe<Scalars['BigInt']>;\n  harvestableIndex_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  harvestableIndex_lt?: InputMaybe<Scalars['BigInt']>;\n  harvestableIndex_lte?: InputMaybe<Scalars['BigInt']>;\n  harvestableIndex_not?: InputMaybe<Scalars['BigInt']>;\n  harvestableIndex_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  id?: InputMaybe<Scalars['ID']>;\n  id_gt?: InputMaybe<Scalars['ID']>;\n  id_gte?: InputMaybe<Scalars['ID']>;\n  id_in?: InputMaybe<Array<Scalars['ID']>>;\n  id_lt?: InputMaybe<Scalars['ID']>;\n  id_lte?: InputMaybe<Scalars['ID']>;\n  id_not?: InputMaybe<Scalars['ID']>;\n  id_not_in?: InputMaybe<Array<Scalars['ID']>>;\n  incentiveBeans?: InputMaybe<Scalars['BigInt']>;\n  incentiveBeans_gt?: InputMaybe<Scalars['BigInt']>;\n  incentiveBeans_gte?: InputMaybe<Scalars['BigInt']>;\n  incentiveBeans_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  incentiveBeans_lt?: InputMaybe<Scalars['BigInt']>;\n  incentiveBeans_lte?: InputMaybe<Scalars['BigInt']>;\n  incentiveBeans_not?: InputMaybe<Scalars['BigInt']>;\n  incentiveBeans_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  marketCap?: InputMaybe<Scalars['BigDecimal']>;\n  marketCap_gt?: InputMaybe<Scalars['BigDecimal']>;\n  marketCap_gte?: InputMaybe<Scalars['BigDecimal']>;\n  marketCap_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n  marketCap_lt?: InputMaybe<Scalars['BigDecimal']>;\n  marketCap_lte?: InputMaybe<Scalars['BigDecimal']>;\n  marketCap_not?: InputMaybe<Scalars['BigDecimal']>;\n  marketCap_not_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n  price?: InputMaybe<Scalars['BigDecimal']>;\n  price_gt?: InputMaybe<Scalars['BigDecimal']>;\n  price_gte?: InputMaybe<Scalars['BigDecimal']>;\n  price_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n  price_lt?: InputMaybe<Scalars['BigDecimal']>;\n  price_lte?: InputMaybe<Scalars['BigDecimal']>;\n  price_not?: InputMaybe<Scalars['BigDecimal']>;\n  price_not_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n  rewardBeans?: InputMaybe<Scalars['BigInt']>;\n  rewardBeans_gt?: InputMaybe<Scalars['BigInt']>;\n  rewardBeans_gte?: InputMaybe<Scalars['BigInt']>;\n  rewardBeans_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  rewardBeans_lt?: InputMaybe<Scalars['BigInt']>;\n  rewardBeans_lte?: InputMaybe<Scalars['BigInt']>;\n  rewardBeans_not?: InputMaybe<Scalars['BigInt']>;\n  rewardBeans_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  season?: InputMaybe<Scalars['Int']>;\n  season_gt?: InputMaybe<Scalars['Int']>;\n  season_gte?: InputMaybe<Scalars['Int']>;\n  season_in?: InputMaybe<Array<Scalars['Int']>>;\n  season_lt?: InputMaybe<Scalars['Int']>;\n  season_lte?: InputMaybe<Scalars['Int']>;\n  season_not?: InputMaybe<Scalars['Int']>;\n  season_not_in?: InputMaybe<Array<Scalars['Int']>>;\n  timestamp?: InputMaybe<Scalars['BigInt']>;\n  timestamp_gt?: InputMaybe<Scalars['BigInt']>;\n  timestamp_gte?: InputMaybe<Scalars['BigInt']>;\n  timestamp_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  timestamp_lt?: InputMaybe<Scalars['BigInt']>;\n  timestamp_lte?: InputMaybe<Scalars['BigInt']>;\n  timestamp_not?: InputMaybe<Scalars['BigInt']>;\n  timestamp_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n};\n\nexport enum Season_OrderBy {\n  Beans = 'beans',\n  Beanstalk = 'beanstalk',\n  DeltaB = 'deltaB',\n  DeltaBeans = 'deltaBeans',\n  HarvestableIndex = 'harvestableIndex',\n  Id = 'id',\n  IncentiveBeans = 'incentiveBeans',\n  MarketCap = 'marketCap',\n  Price = 'price',\n  RewardBeans = 'rewardBeans',\n  Season = 'season',\n  Timestamp = 'timestamp'\n}\n\nexport type SeedChange = SiloEvent & {\n  __typename?: 'SeedChange';\n  /**  Account removing deposit */\n  account: Scalars['String'];\n  /**  Block number of this event  */\n  blockNumber: Scalars['BigInt'];\n  /**  Token removed */\n  delta: Scalars['BigInt'];\n  /**  Transaction hash of the transaction that emitted this event  */\n  hash: Scalars['String'];\n  /** seedChange-{ Transaction hash }-{ Log index } */\n  id: Scalars['ID'];\n  /**  Event log index. For transactions that don't emit event, create arbitrary index starting from 0  */\n  logIndex: Scalars['Int'];\n  /**  The protocol this transaction belongs to  */\n  protocol: Beanstalk;\n  /**  Season when the change happened  */\n  season: Scalars['Int'];\n  /**  Timestamp of this event  */\n  timestamp: Scalars['BigInt'];\n};\n\nexport type SeedChange_Filter = {\n  /** Filter for the block changed event. */\n  _change_block?: InputMaybe<BlockChangedFilter>;\n  account?: InputMaybe<Scalars['String']>;\n  account_contains?: InputMaybe<Scalars['String']>;\n  account_contains_nocase?: InputMaybe<Scalars['String']>;\n  account_ends_with?: InputMaybe<Scalars['String']>;\n  account_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  account_gt?: InputMaybe<Scalars['String']>;\n  account_gte?: InputMaybe<Scalars['String']>;\n  account_in?: InputMaybe<Array<Scalars['String']>>;\n  account_lt?: InputMaybe<Scalars['String']>;\n  account_lte?: InputMaybe<Scalars['String']>;\n  account_not?: InputMaybe<Scalars['String']>;\n  account_not_contains?: InputMaybe<Scalars['String']>;\n  account_not_contains_nocase?: InputMaybe<Scalars['String']>;\n  account_not_ends_with?: InputMaybe<Scalars['String']>;\n  account_not_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  account_not_in?: InputMaybe<Array<Scalars['String']>>;\n  account_not_starts_with?: InputMaybe<Scalars['String']>;\n  account_not_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  account_starts_with?: InputMaybe<Scalars['String']>;\n  account_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  blockNumber?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_gt?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_gte?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  blockNumber_lt?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_lte?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_not?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  delta?: InputMaybe<Scalars['BigInt']>;\n  delta_gt?: InputMaybe<Scalars['BigInt']>;\n  delta_gte?: InputMaybe<Scalars['BigInt']>;\n  delta_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  delta_lt?: InputMaybe<Scalars['BigInt']>;\n  delta_lte?: InputMaybe<Scalars['BigInt']>;\n  delta_not?: InputMaybe<Scalars['BigInt']>;\n  delta_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  hash?: InputMaybe<Scalars['String']>;\n  hash_contains?: InputMaybe<Scalars['String']>;\n  hash_contains_nocase?: InputMaybe<Scalars['String']>;\n  hash_ends_with?: InputMaybe<Scalars['String']>;\n  hash_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  hash_gt?: InputMaybe<Scalars['String']>;\n  hash_gte?: InputMaybe<Scalars['String']>;\n  hash_in?: InputMaybe<Array<Scalars['String']>>;\n  hash_lt?: InputMaybe<Scalars['String']>;\n  hash_lte?: InputMaybe<Scalars['String']>;\n  hash_not?: InputMaybe<Scalars['String']>;\n  hash_not_contains?: InputMaybe<Scalars['String']>;\n  hash_not_contains_nocase?: InputMaybe<Scalars['String']>;\n  hash_not_ends_with?: InputMaybe<Scalars['String']>;\n  hash_not_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  hash_not_in?: InputMaybe<Array<Scalars['String']>>;\n  hash_not_starts_with?: InputMaybe<Scalars['String']>;\n  hash_not_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  hash_starts_with?: InputMaybe<Scalars['String']>;\n  hash_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  id?: InputMaybe<Scalars['ID']>;\n  id_gt?: InputMaybe<Scalars['ID']>;\n  id_gte?: InputMaybe<Scalars['ID']>;\n  id_in?: InputMaybe<Array<Scalars['ID']>>;\n  id_lt?: InputMaybe<Scalars['ID']>;\n  id_lte?: InputMaybe<Scalars['ID']>;\n  id_not?: InputMaybe<Scalars['ID']>;\n  id_not_in?: InputMaybe<Array<Scalars['ID']>>;\n  logIndex?: InputMaybe<Scalars['Int']>;\n  logIndex_gt?: InputMaybe<Scalars['Int']>;\n  logIndex_gte?: InputMaybe<Scalars['Int']>;\n  logIndex_in?: InputMaybe<Array<Scalars['Int']>>;\n  logIndex_lt?: InputMaybe<Scalars['Int']>;\n  logIndex_lte?: InputMaybe<Scalars['Int']>;\n  logIndex_not?: InputMaybe<Scalars['Int']>;\n  logIndex_not_in?: InputMaybe<Array<Scalars['Int']>>;\n  protocol?: InputMaybe<Scalars['String']>;\n  protocol_?: InputMaybe<Beanstalk_Filter>;\n  protocol_contains?: InputMaybe<Scalars['String']>;\n  protocol_contains_nocase?: InputMaybe<Scalars['String']>;\n  protocol_ends_with?: InputMaybe<Scalars['String']>;\n  protocol_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  protocol_gt?: InputMaybe<Scalars['String']>;\n  protocol_gte?: InputMaybe<Scalars['String']>;\n  protocol_in?: InputMaybe<Array<Scalars['String']>>;\n  protocol_lt?: InputMaybe<Scalars['String']>;\n  protocol_lte?: InputMaybe<Scalars['String']>;\n  protocol_not?: InputMaybe<Scalars['String']>;\n  protocol_not_contains?: InputMaybe<Scalars['String']>;\n  protocol_not_contains_nocase?: InputMaybe<Scalars['String']>;\n  protocol_not_ends_with?: InputMaybe<Scalars['String']>;\n  protocol_not_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  protocol_not_in?: InputMaybe<Array<Scalars['String']>>;\n  protocol_not_starts_with?: InputMaybe<Scalars['String']>;\n  protocol_not_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  protocol_starts_with?: InputMaybe<Scalars['String']>;\n  protocol_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  season?: InputMaybe<Scalars['Int']>;\n  season_gt?: InputMaybe<Scalars['Int']>;\n  season_gte?: InputMaybe<Scalars['Int']>;\n  season_in?: InputMaybe<Array<Scalars['Int']>>;\n  season_lt?: InputMaybe<Scalars['Int']>;\n  season_lte?: InputMaybe<Scalars['Int']>;\n  season_not?: InputMaybe<Scalars['Int']>;\n  season_not_in?: InputMaybe<Array<Scalars['Int']>>;\n  timestamp?: InputMaybe<Scalars['BigInt']>;\n  timestamp_gt?: InputMaybe<Scalars['BigInt']>;\n  timestamp_gte?: InputMaybe<Scalars['BigInt']>;\n  timestamp_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  timestamp_lt?: InputMaybe<Scalars['BigInt']>;\n  timestamp_lte?: InputMaybe<Scalars['BigInt']>;\n  timestamp_not?: InputMaybe<Scalars['BigInt']>;\n  timestamp_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n};\n\nexport enum SeedChange_OrderBy {\n  Account = 'account',\n  BlockNumber = 'blockNumber',\n  Delta = 'delta',\n  Hash = 'hash',\n  Id = 'id',\n  LogIndex = 'logIndex',\n  Protocol = 'protocol',\n  Season = 'season',\n  Timestamp = 'timestamp'\n}\n\nexport type Silo = {\n  __typename?: 'Silo';\n  assets: Array<SiloAsset>;\n  beanstalk: Beanstalk;\n  dailySnapshots: Array<SiloDailySnapshot>;\n  farmer?: Maybe<Farmer>;\n  hourlySnapshots: Array<SiloHourlySnapshot>;\n  id: Scalars['ID'];\n  totalBeanMints: Scalars['BigInt'];\n  totalDepositedBDV: Scalars['BigInt'];\n  totalFarmers: Scalars['Int'];\n  totalPlantableStalk: Scalars['BigInt'];\n  totalRoots: Scalars['BigInt'];\n  totalSeeds: Scalars['BigInt'];\n  totalStalk: Scalars['BigInt'];\n  totalValueLockedUSD: Scalars['BigDecimal'];\n  whitelistedTokens: Array<Scalars['String']>;\n};\n\n\nexport type SiloAssetsArgs = {\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<SiloAsset_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  where?: InputMaybe<SiloAsset_Filter>;\n};\n\n\nexport type SiloDailySnapshotsArgs = {\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<SiloDailySnapshot_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  where?: InputMaybe<SiloDailySnapshot_Filter>;\n};\n\n\nexport type SiloHourlySnapshotsArgs = {\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<SiloHourlySnapshot_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  where?: InputMaybe<SiloHourlySnapshot_Filter>;\n};\n\nexport type SiloAsset = {\n  __typename?: 'SiloAsset';\n  cumulativeDepositedUSD: Scalars['BigDecimal'];\n  dailySnapshots: Array<SiloAssetDailySnapshot>;\n  hourlySnapshots: Array<SiloAssetHourlySnapshot>;\n  id: Scalars['ID'];\n  silo: Silo;\n  token: Scalars['String'];\n  totalDepositedAmount: Scalars['BigInt'];\n  totalDepositedBDV: Scalars['BigInt'];\n  totalFarmAmount: Scalars['BigInt'];\n  totalSeeds: Scalars['BigInt'];\n  totalStalk: Scalars['BigInt'];\n  totalValueLockedUSD: Scalars['BigDecimal'];\n};\n\n\nexport type SiloAssetDailySnapshotsArgs = {\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<SiloAssetDailySnapshot_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  where?: InputMaybe<SiloAssetDailySnapshot_Filter>;\n};\n\n\nexport type SiloAssetHourlySnapshotsArgs = {\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<SiloAssetHourlySnapshot_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  where?: InputMaybe<SiloAssetHourlySnapshot_Filter>;\n};\n\nexport type SiloAssetDailySnapshot = {\n  __typename?: 'SiloAssetDailySnapshot';\n  blockNumber: Scalars['BigInt'];\n  cumulativeDepositedUSD: Scalars['BigDecimal'];\n  dailyDepositedAmount: Scalars['BigInt'];\n  dailyDepositedBDV: Scalars['BigInt'];\n  dailyDepositedUSD: Scalars['BigDecimal'];\n  dailyFarmAmountDelta: Scalars['BigInt'];\n  dailySeedsDelta: Scalars['BigInt'];\n  dailyStalkDelta: Scalars['BigInt'];\n  dailyWithdrawnAmount: Scalars['BigInt'];\n  id: Scalars['ID'];\n  lastUpdated: Scalars['BigInt'];\n  season: Scalars['Int'];\n  siloAsset: SiloAsset;\n  timestamp: Scalars['BigInt'];\n  totalDepositedAmount: Scalars['BigInt'];\n  totalDepositedBDV: Scalars['BigInt'];\n  totalFarmAmount: Scalars['BigInt'];\n  totalSeeds: Scalars['BigInt'];\n  totalStalk: Scalars['BigInt'];\n  totalValueLockedUSD: Scalars['BigDecimal'];\n};\n\nexport type SiloAssetDailySnapshot_Filter = {\n  /** Filter for the block changed event. */\n  _change_block?: InputMaybe<BlockChangedFilter>;\n  blockNumber?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_gt?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_gte?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  blockNumber_lt?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_lte?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_not?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  cumulativeDepositedUSD?: InputMaybe<Scalars['BigDecimal']>;\n  cumulativeDepositedUSD_gt?: InputMaybe<Scalars['BigDecimal']>;\n  cumulativeDepositedUSD_gte?: InputMaybe<Scalars['BigDecimal']>;\n  cumulativeDepositedUSD_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n  cumulativeDepositedUSD_lt?: InputMaybe<Scalars['BigDecimal']>;\n  cumulativeDepositedUSD_lte?: InputMaybe<Scalars['BigDecimal']>;\n  cumulativeDepositedUSD_not?: InputMaybe<Scalars['BigDecimal']>;\n  cumulativeDepositedUSD_not_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n  dailyDepositedAmount?: InputMaybe<Scalars['BigInt']>;\n  dailyDepositedAmount_gt?: InputMaybe<Scalars['BigInt']>;\n  dailyDepositedAmount_gte?: InputMaybe<Scalars['BigInt']>;\n  dailyDepositedAmount_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  dailyDepositedAmount_lt?: InputMaybe<Scalars['BigInt']>;\n  dailyDepositedAmount_lte?: InputMaybe<Scalars['BigInt']>;\n  dailyDepositedAmount_not?: InputMaybe<Scalars['BigInt']>;\n  dailyDepositedAmount_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  dailyDepositedBDV?: InputMaybe<Scalars['BigInt']>;\n  dailyDepositedBDV_gt?: InputMaybe<Scalars['BigInt']>;\n  dailyDepositedBDV_gte?: InputMaybe<Scalars['BigInt']>;\n  dailyDepositedBDV_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  dailyDepositedBDV_lt?: InputMaybe<Scalars['BigInt']>;\n  dailyDepositedBDV_lte?: InputMaybe<Scalars['BigInt']>;\n  dailyDepositedBDV_not?: InputMaybe<Scalars['BigInt']>;\n  dailyDepositedBDV_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  dailyDepositedUSD?: InputMaybe<Scalars['BigDecimal']>;\n  dailyDepositedUSD_gt?: InputMaybe<Scalars['BigDecimal']>;\n  dailyDepositedUSD_gte?: InputMaybe<Scalars['BigDecimal']>;\n  dailyDepositedUSD_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n  dailyDepositedUSD_lt?: InputMaybe<Scalars['BigDecimal']>;\n  dailyDepositedUSD_lte?: InputMaybe<Scalars['BigDecimal']>;\n  dailyDepositedUSD_not?: InputMaybe<Scalars['BigDecimal']>;\n  dailyDepositedUSD_not_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n  dailyFarmAmountDelta?: InputMaybe<Scalars['BigInt']>;\n  dailyFarmAmountDelta_gt?: InputMaybe<Scalars['BigInt']>;\n  dailyFarmAmountDelta_gte?: InputMaybe<Scalars['BigInt']>;\n  dailyFarmAmountDelta_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  dailyFarmAmountDelta_lt?: InputMaybe<Scalars['BigInt']>;\n  dailyFarmAmountDelta_lte?: InputMaybe<Scalars['BigInt']>;\n  dailyFarmAmountDelta_not?: InputMaybe<Scalars['BigInt']>;\n  dailyFarmAmountDelta_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  dailySeedsDelta?: InputMaybe<Scalars['BigInt']>;\n  dailySeedsDelta_gt?: InputMaybe<Scalars['BigInt']>;\n  dailySeedsDelta_gte?: InputMaybe<Scalars['BigInt']>;\n  dailySeedsDelta_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  dailySeedsDelta_lt?: InputMaybe<Scalars['BigInt']>;\n  dailySeedsDelta_lte?: InputMaybe<Scalars['BigInt']>;\n  dailySeedsDelta_not?: InputMaybe<Scalars['BigInt']>;\n  dailySeedsDelta_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  dailyStalkDelta?: InputMaybe<Scalars['BigInt']>;\n  dailyStalkDelta_gt?: InputMaybe<Scalars['BigInt']>;\n  dailyStalkDelta_gte?: InputMaybe<Scalars['BigInt']>;\n  dailyStalkDelta_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  dailyStalkDelta_lt?: InputMaybe<Scalars['BigInt']>;\n  dailyStalkDelta_lte?: InputMaybe<Scalars['BigInt']>;\n  dailyStalkDelta_not?: InputMaybe<Scalars['BigInt']>;\n  dailyStalkDelta_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  dailyWithdrawnAmount?: InputMaybe<Scalars['BigInt']>;\n  dailyWithdrawnAmount_gt?: InputMaybe<Scalars['BigInt']>;\n  dailyWithdrawnAmount_gte?: InputMaybe<Scalars['BigInt']>;\n  dailyWithdrawnAmount_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  dailyWithdrawnAmount_lt?: InputMaybe<Scalars['BigInt']>;\n  dailyWithdrawnAmount_lte?: InputMaybe<Scalars['BigInt']>;\n  dailyWithdrawnAmount_not?: InputMaybe<Scalars['BigInt']>;\n  dailyWithdrawnAmount_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  id?: InputMaybe<Scalars['ID']>;\n  id_gt?: InputMaybe<Scalars['ID']>;\n  id_gte?: InputMaybe<Scalars['ID']>;\n  id_in?: InputMaybe<Array<Scalars['ID']>>;\n  id_lt?: InputMaybe<Scalars['ID']>;\n  id_lte?: InputMaybe<Scalars['ID']>;\n  id_not?: InputMaybe<Scalars['ID']>;\n  id_not_in?: InputMaybe<Array<Scalars['ID']>>;\n  lastUpdated?: InputMaybe<Scalars['BigInt']>;\n  lastUpdated_gt?: InputMaybe<Scalars['BigInt']>;\n  lastUpdated_gte?: InputMaybe<Scalars['BigInt']>;\n  lastUpdated_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  lastUpdated_lt?: InputMaybe<Scalars['BigInt']>;\n  lastUpdated_lte?: InputMaybe<Scalars['BigInt']>;\n  lastUpdated_not?: InputMaybe<Scalars['BigInt']>;\n  lastUpdated_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  season?: InputMaybe<Scalars['Int']>;\n  season_gt?: InputMaybe<Scalars['Int']>;\n  season_gte?: InputMaybe<Scalars['Int']>;\n  season_in?: InputMaybe<Array<Scalars['Int']>>;\n  season_lt?: InputMaybe<Scalars['Int']>;\n  season_lte?: InputMaybe<Scalars['Int']>;\n  season_not?: InputMaybe<Scalars['Int']>;\n  season_not_in?: InputMaybe<Array<Scalars['Int']>>;\n  siloAsset?: InputMaybe<Scalars['String']>;\n  siloAsset_?: InputMaybe<SiloAsset_Filter>;\n  siloAsset_contains?: InputMaybe<Scalars['String']>;\n  siloAsset_contains_nocase?: InputMaybe<Scalars['String']>;\n  siloAsset_ends_with?: InputMaybe<Scalars['String']>;\n  siloAsset_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  siloAsset_gt?: InputMaybe<Scalars['String']>;\n  siloAsset_gte?: InputMaybe<Scalars['String']>;\n  siloAsset_in?: InputMaybe<Array<Scalars['String']>>;\n  siloAsset_lt?: InputMaybe<Scalars['String']>;\n  siloAsset_lte?: InputMaybe<Scalars['String']>;\n  siloAsset_not?: InputMaybe<Scalars['String']>;\n  siloAsset_not_contains?: InputMaybe<Scalars['String']>;\n  siloAsset_not_contains_nocase?: InputMaybe<Scalars['String']>;\n  siloAsset_not_ends_with?: InputMaybe<Scalars['String']>;\n  siloAsset_not_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  siloAsset_not_in?: InputMaybe<Array<Scalars['String']>>;\n  siloAsset_not_starts_with?: InputMaybe<Scalars['String']>;\n  siloAsset_not_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  siloAsset_starts_with?: InputMaybe<Scalars['String']>;\n  siloAsset_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  timestamp?: InputMaybe<Scalars['BigInt']>;\n  timestamp_gt?: InputMaybe<Scalars['BigInt']>;\n  timestamp_gte?: InputMaybe<Scalars['BigInt']>;\n  timestamp_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  timestamp_lt?: InputMaybe<Scalars['BigInt']>;\n  timestamp_lte?: InputMaybe<Scalars['BigInt']>;\n  timestamp_not?: InputMaybe<Scalars['BigInt']>;\n  timestamp_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  totalDepositedAmount?: InputMaybe<Scalars['BigInt']>;\n  totalDepositedAmount_gt?: InputMaybe<Scalars['BigInt']>;\n  totalDepositedAmount_gte?: InputMaybe<Scalars['BigInt']>;\n  totalDepositedAmount_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  totalDepositedAmount_lt?: InputMaybe<Scalars['BigInt']>;\n  totalDepositedAmount_lte?: InputMaybe<Scalars['BigInt']>;\n  totalDepositedAmount_not?: InputMaybe<Scalars['BigInt']>;\n  totalDepositedAmount_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  totalDepositedBDV?: InputMaybe<Scalars['BigInt']>;\n  totalDepositedBDV_gt?: InputMaybe<Scalars['BigInt']>;\n  totalDepositedBDV_gte?: InputMaybe<Scalars['BigInt']>;\n  totalDepositedBDV_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  totalDepositedBDV_lt?: InputMaybe<Scalars['BigInt']>;\n  totalDepositedBDV_lte?: InputMaybe<Scalars['BigInt']>;\n  totalDepositedBDV_not?: InputMaybe<Scalars['BigInt']>;\n  totalDepositedBDV_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  totalFarmAmount?: InputMaybe<Scalars['BigInt']>;\n  totalFarmAmount_gt?: InputMaybe<Scalars['BigInt']>;\n  totalFarmAmount_gte?: InputMaybe<Scalars['BigInt']>;\n  totalFarmAmount_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  totalFarmAmount_lt?: InputMaybe<Scalars['BigInt']>;\n  totalFarmAmount_lte?: InputMaybe<Scalars['BigInt']>;\n  totalFarmAmount_not?: InputMaybe<Scalars['BigInt']>;\n  totalFarmAmount_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  totalSeeds?: InputMaybe<Scalars['BigInt']>;\n  totalSeeds_gt?: InputMaybe<Scalars['BigInt']>;\n  totalSeeds_gte?: InputMaybe<Scalars['BigInt']>;\n  totalSeeds_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  totalSeeds_lt?: InputMaybe<Scalars['BigInt']>;\n  totalSeeds_lte?: InputMaybe<Scalars['BigInt']>;\n  totalSeeds_not?: InputMaybe<Scalars['BigInt']>;\n  totalSeeds_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  totalStalk?: InputMaybe<Scalars['BigInt']>;\n  totalStalk_gt?: InputMaybe<Scalars['BigInt']>;\n  totalStalk_gte?: InputMaybe<Scalars['BigInt']>;\n  totalStalk_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  totalStalk_lt?: InputMaybe<Scalars['BigInt']>;\n  totalStalk_lte?: InputMaybe<Scalars['BigInt']>;\n  totalStalk_not?: InputMaybe<Scalars['BigInt']>;\n  totalStalk_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  totalValueLockedUSD?: InputMaybe<Scalars['BigDecimal']>;\n  totalValueLockedUSD_gt?: InputMaybe<Scalars['BigDecimal']>;\n  totalValueLockedUSD_gte?: InputMaybe<Scalars['BigDecimal']>;\n  totalValueLockedUSD_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n  totalValueLockedUSD_lt?: InputMaybe<Scalars['BigDecimal']>;\n  totalValueLockedUSD_lte?: InputMaybe<Scalars['BigDecimal']>;\n  totalValueLockedUSD_not?: InputMaybe<Scalars['BigDecimal']>;\n  totalValueLockedUSD_not_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n};\n\nexport enum SiloAssetDailySnapshot_OrderBy {\n  BlockNumber = 'blockNumber',\n  CumulativeDepositedUsd = 'cumulativeDepositedUSD',\n  DailyDepositedAmount = 'dailyDepositedAmount',\n  DailyDepositedBdv = 'dailyDepositedBDV',\n  DailyDepositedUsd = 'dailyDepositedUSD',\n  DailyFarmAmountDelta = 'dailyFarmAmountDelta',\n  DailySeedsDelta = 'dailySeedsDelta',\n  DailyStalkDelta = 'dailyStalkDelta',\n  DailyWithdrawnAmount = 'dailyWithdrawnAmount',\n  Id = 'id',\n  LastUpdated = 'lastUpdated',\n  Season = 'season',\n  SiloAsset = 'siloAsset',\n  Timestamp = 'timestamp',\n  TotalDepositedAmount = 'totalDepositedAmount',\n  TotalDepositedBdv = 'totalDepositedBDV',\n  TotalFarmAmount = 'totalFarmAmount',\n  TotalSeeds = 'totalSeeds',\n  TotalStalk = 'totalStalk',\n  TotalValueLockedUsd = 'totalValueLockedUSD'\n}\n\nexport type SiloAssetHourlySnapshot = {\n  __typename?: 'SiloAssetHourlySnapshot';\n  blockNumber: Scalars['BigInt'];\n  cumulativeDepositedUSD: Scalars['BigDecimal'];\n  hourlyDepositedAmount: Scalars['BigInt'];\n  hourlyDepositedBDV: Scalars['BigInt'];\n  hourlyDepositedUSD: Scalars['BigDecimal'];\n  hourlyFarmAmountDelta: Scalars['BigInt'];\n  hourlySeedsDelta: Scalars['BigInt'];\n  hourlyStalkDelta: Scalars['BigInt'];\n  hourlyWithdrawnAmount: Scalars['BigInt'];\n  id: Scalars['ID'];\n  lastUpdated: Scalars['BigInt'];\n  season: Scalars['Int'];\n  siloAsset: SiloAsset;\n  timestamp: Scalars['BigInt'];\n  totalDepositedAmount: Scalars['BigInt'];\n  totalDepositedBDV: Scalars['BigInt'];\n  totalFarmAmount: Scalars['BigInt'];\n  totalSeeds: Scalars['BigInt'];\n  totalStalk: Scalars['BigInt'];\n  totalValueLockedUSD: Scalars['BigDecimal'];\n};\n\nexport type SiloAssetHourlySnapshot_Filter = {\n  /** Filter for the block changed event. */\n  _change_block?: InputMaybe<BlockChangedFilter>;\n  blockNumber?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_gt?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_gte?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  blockNumber_lt?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_lte?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_not?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  cumulativeDepositedUSD?: InputMaybe<Scalars['BigDecimal']>;\n  cumulativeDepositedUSD_gt?: InputMaybe<Scalars['BigDecimal']>;\n  cumulativeDepositedUSD_gte?: InputMaybe<Scalars['BigDecimal']>;\n  cumulativeDepositedUSD_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n  cumulativeDepositedUSD_lt?: InputMaybe<Scalars['BigDecimal']>;\n  cumulativeDepositedUSD_lte?: InputMaybe<Scalars['BigDecimal']>;\n  cumulativeDepositedUSD_not?: InputMaybe<Scalars['BigDecimal']>;\n  cumulativeDepositedUSD_not_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n  hourlyDepositedAmount?: InputMaybe<Scalars['BigInt']>;\n  hourlyDepositedAmount_gt?: InputMaybe<Scalars['BigInt']>;\n  hourlyDepositedAmount_gte?: InputMaybe<Scalars['BigInt']>;\n  hourlyDepositedAmount_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  hourlyDepositedAmount_lt?: InputMaybe<Scalars['BigInt']>;\n  hourlyDepositedAmount_lte?: InputMaybe<Scalars['BigInt']>;\n  hourlyDepositedAmount_not?: InputMaybe<Scalars['BigInt']>;\n  hourlyDepositedAmount_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  hourlyDepositedBDV?: InputMaybe<Scalars['BigInt']>;\n  hourlyDepositedBDV_gt?: InputMaybe<Scalars['BigInt']>;\n  hourlyDepositedBDV_gte?: InputMaybe<Scalars['BigInt']>;\n  hourlyDepositedBDV_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  hourlyDepositedBDV_lt?: InputMaybe<Scalars['BigInt']>;\n  hourlyDepositedBDV_lte?: InputMaybe<Scalars['BigInt']>;\n  hourlyDepositedBDV_not?: InputMaybe<Scalars['BigInt']>;\n  hourlyDepositedBDV_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  hourlyDepositedUSD?: InputMaybe<Scalars['BigDecimal']>;\n  hourlyDepositedUSD_gt?: InputMaybe<Scalars['BigDecimal']>;\n  hourlyDepositedUSD_gte?: InputMaybe<Scalars['BigDecimal']>;\n  hourlyDepositedUSD_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n  hourlyDepositedUSD_lt?: InputMaybe<Scalars['BigDecimal']>;\n  hourlyDepositedUSD_lte?: InputMaybe<Scalars['BigDecimal']>;\n  hourlyDepositedUSD_not?: InputMaybe<Scalars['BigDecimal']>;\n  hourlyDepositedUSD_not_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n  hourlyFarmAmountDelta?: InputMaybe<Scalars['BigInt']>;\n  hourlyFarmAmountDelta_gt?: InputMaybe<Scalars['BigInt']>;\n  hourlyFarmAmountDelta_gte?: InputMaybe<Scalars['BigInt']>;\n  hourlyFarmAmountDelta_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  hourlyFarmAmountDelta_lt?: InputMaybe<Scalars['BigInt']>;\n  hourlyFarmAmountDelta_lte?: InputMaybe<Scalars['BigInt']>;\n  hourlyFarmAmountDelta_not?: InputMaybe<Scalars['BigInt']>;\n  hourlyFarmAmountDelta_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  hourlySeedsDelta?: InputMaybe<Scalars['BigInt']>;\n  hourlySeedsDelta_gt?: InputMaybe<Scalars['BigInt']>;\n  hourlySeedsDelta_gte?: InputMaybe<Scalars['BigInt']>;\n  hourlySeedsDelta_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  hourlySeedsDelta_lt?: InputMaybe<Scalars['BigInt']>;\n  hourlySeedsDelta_lte?: InputMaybe<Scalars['BigInt']>;\n  hourlySeedsDelta_not?: InputMaybe<Scalars['BigInt']>;\n  hourlySeedsDelta_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  hourlyStalkDelta?: InputMaybe<Scalars['BigInt']>;\n  hourlyStalkDelta_gt?: InputMaybe<Scalars['BigInt']>;\n  hourlyStalkDelta_gte?: InputMaybe<Scalars['BigInt']>;\n  hourlyStalkDelta_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  hourlyStalkDelta_lt?: InputMaybe<Scalars['BigInt']>;\n  hourlyStalkDelta_lte?: InputMaybe<Scalars['BigInt']>;\n  hourlyStalkDelta_not?: InputMaybe<Scalars['BigInt']>;\n  hourlyStalkDelta_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  hourlyWithdrawnAmount?: InputMaybe<Scalars['BigInt']>;\n  hourlyWithdrawnAmount_gt?: InputMaybe<Scalars['BigInt']>;\n  hourlyWithdrawnAmount_gte?: InputMaybe<Scalars['BigInt']>;\n  hourlyWithdrawnAmount_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  hourlyWithdrawnAmount_lt?: InputMaybe<Scalars['BigInt']>;\n  hourlyWithdrawnAmount_lte?: InputMaybe<Scalars['BigInt']>;\n  hourlyWithdrawnAmount_not?: InputMaybe<Scalars['BigInt']>;\n  hourlyWithdrawnAmount_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  id?: InputMaybe<Scalars['ID']>;\n  id_gt?: InputMaybe<Scalars['ID']>;\n  id_gte?: InputMaybe<Scalars['ID']>;\n  id_in?: InputMaybe<Array<Scalars['ID']>>;\n  id_lt?: InputMaybe<Scalars['ID']>;\n  id_lte?: InputMaybe<Scalars['ID']>;\n  id_not?: InputMaybe<Scalars['ID']>;\n  id_not_in?: InputMaybe<Array<Scalars['ID']>>;\n  lastUpdated?: InputMaybe<Scalars['BigInt']>;\n  lastUpdated_gt?: InputMaybe<Scalars['BigInt']>;\n  lastUpdated_gte?: InputMaybe<Scalars['BigInt']>;\n  lastUpdated_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  lastUpdated_lt?: InputMaybe<Scalars['BigInt']>;\n  lastUpdated_lte?: InputMaybe<Scalars['BigInt']>;\n  lastUpdated_not?: InputMaybe<Scalars['BigInt']>;\n  lastUpdated_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  season?: InputMaybe<Scalars['Int']>;\n  season_gt?: InputMaybe<Scalars['Int']>;\n  season_gte?: InputMaybe<Scalars['Int']>;\n  season_in?: InputMaybe<Array<Scalars['Int']>>;\n  season_lt?: InputMaybe<Scalars['Int']>;\n  season_lte?: InputMaybe<Scalars['Int']>;\n  season_not?: InputMaybe<Scalars['Int']>;\n  season_not_in?: InputMaybe<Array<Scalars['Int']>>;\n  siloAsset?: InputMaybe<Scalars['String']>;\n  siloAsset_?: InputMaybe<SiloAsset_Filter>;\n  siloAsset_contains?: InputMaybe<Scalars['String']>;\n  siloAsset_contains_nocase?: InputMaybe<Scalars['String']>;\n  siloAsset_ends_with?: InputMaybe<Scalars['String']>;\n  siloAsset_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  siloAsset_gt?: InputMaybe<Scalars['String']>;\n  siloAsset_gte?: InputMaybe<Scalars['String']>;\n  siloAsset_in?: InputMaybe<Array<Scalars['String']>>;\n  siloAsset_lt?: InputMaybe<Scalars['String']>;\n  siloAsset_lte?: InputMaybe<Scalars['String']>;\n  siloAsset_not?: InputMaybe<Scalars['String']>;\n  siloAsset_not_contains?: InputMaybe<Scalars['String']>;\n  siloAsset_not_contains_nocase?: InputMaybe<Scalars['String']>;\n  siloAsset_not_ends_with?: InputMaybe<Scalars['String']>;\n  siloAsset_not_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  siloAsset_not_in?: InputMaybe<Array<Scalars['String']>>;\n  siloAsset_not_starts_with?: InputMaybe<Scalars['String']>;\n  siloAsset_not_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  siloAsset_starts_with?: InputMaybe<Scalars['String']>;\n  siloAsset_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  timestamp?: InputMaybe<Scalars['BigInt']>;\n  timestamp_gt?: InputMaybe<Scalars['BigInt']>;\n  timestamp_gte?: InputMaybe<Scalars['BigInt']>;\n  timestamp_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  timestamp_lt?: InputMaybe<Scalars['BigInt']>;\n  timestamp_lte?: InputMaybe<Scalars['BigInt']>;\n  timestamp_not?: InputMaybe<Scalars['BigInt']>;\n  timestamp_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  totalDepositedAmount?: InputMaybe<Scalars['BigInt']>;\n  totalDepositedAmount_gt?: InputMaybe<Scalars['BigInt']>;\n  totalDepositedAmount_gte?: InputMaybe<Scalars['BigInt']>;\n  totalDepositedAmount_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  totalDepositedAmount_lt?: InputMaybe<Scalars['BigInt']>;\n  totalDepositedAmount_lte?: InputMaybe<Scalars['BigInt']>;\n  totalDepositedAmount_not?: InputMaybe<Scalars['BigInt']>;\n  totalDepositedAmount_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  totalDepositedBDV?: InputMaybe<Scalars['BigInt']>;\n  totalDepositedBDV_gt?: InputMaybe<Scalars['BigInt']>;\n  totalDepositedBDV_gte?: InputMaybe<Scalars['BigInt']>;\n  totalDepositedBDV_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  totalDepositedBDV_lt?: InputMaybe<Scalars['BigInt']>;\n  totalDepositedBDV_lte?: InputMaybe<Scalars['BigInt']>;\n  totalDepositedBDV_not?: InputMaybe<Scalars['BigInt']>;\n  totalDepositedBDV_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  totalFarmAmount?: InputMaybe<Scalars['BigInt']>;\n  totalFarmAmount_gt?: InputMaybe<Scalars['BigInt']>;\n  totalFarmAmount_gte?: InputMaybe<Scalars['BigInt']>;\n  totalFarmAmount_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  totalFarmAmount_lt?: InputMaybe<Scalars['BigInt']>;\n  totalFarmAmount_lte?: InputMaybe<Scalars['BigInt']>;\n  totalFarmAmount_not?: InputMaybe<Scalars['BigInt']>;\n  totalFarmAmount_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  totalSeeds?: InputMaybe<Scalars['BigInt']>;\n  totalSeeds_gt?: InputMaybe<Scalars['BigInt']>;\n  totalSeeds_gte?: InputMaybe<Scalars['BigInt']>;\n  totalSeeds_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  totalSeeds_lt?: InputMaybe<Scalars['BigInt']>;\n  totalSeeds_lte?: InputMaybe<Scalars['BigInt']>;\n  totalSeeds_not?: InputMaybe<Scalars['BigInt']>;\n  totalSeeds_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  totalStalk?: InputMaybe<Scalars['BigInt']>;\n  totalStalk_gt?: InputMaybe<Scalars['BigInt']>;\n  totalStalk_gte?: InputMaybe<Scalars['BigInt']>;\n  totalStalk_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  totalStalk_lt?: InputMaybe<Scalars['BigInt']>;\n  totalStalk_lte?: InputMaybe<Scalars['BigInt']>;\n  totalStalk_not?: InputMaybe<Scalars['BigInt']>;\n  totalStalk_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  totalValueLockedUSD?: InputMaybe<Scalars['BigDecimal']>;\n  totalValueLockedUSD_gt?: InputMaybe<Scalars['BigDecimal']>;\n  totalValueLockedUSD_gte?: InputMaybe<Scalars['BigDecimal']>;\n  totalValueLockedUSD_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n  totalValueLockedUSD_lt?: InputMaybe<Scalars['BigDecimal']>;\n  totalValueLockedUSD_lte?: InputMaybe<Scalars['BigDecimal']>;\n  totalValueLockedUSD_not?: InputMaybe<Scalars['BigDecimal']>;\n  totalValueLockedUSD_not_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n};\n\nexport enum SiloAssetHourlySnapshot_OrderBy {\n  BlockNumber = 'blockNumber',\n  CumulativeDepositedUsd = 'cumulativeDepositedUSD',\n  HourlyDepositedAmount = 'hourlyDepositedAmount',\n  HourlyDepositedBdv = 'hourlyDepositedBDV',\n  HourlyDepositedUsd = 'hourlyDepositedUSD',\n  HourlyFarmAmountDelta = 'hourlyFarmAmountDelta',\n  HourlySeedsDelta = 'hourlySeedsDelta',\n  HourlyStalkDelta = 'hourlyStalkDelta',\n  HourlyWithdrawnAmount = 'hourlyWithdrawnAmount',\n  Id = 'id',\n  LastUpdated = 'lastUpdated',\n  Season = 'season',\n  SiloAsset = 'siloAsset',\n  Timestamp = 'timestamp',\n  TotalDepositedAmount = 'totalDepositedAmount',\n  TotalDepositedBdv = 'totalDepositedBDV',\n  TotalFarmAmount = 'totalFarmAmount',\n  TotalSeeds = 'totalSeeds',\n  TotalStalk = 'totalStalk',\n  TotalValueLockedUsd = 'totalValueLockedUSD'\n}\n\nexport type SiloAsset_Filter = {\n  /** Filter for the block changed event. */\n  _change_block?: InputMaybe<BlockChangedFilter>;\n  cumulativeDepositedUSD?: InputMaybe<Scalars['BigDecimal']>;\n  cumulativeDepositedUSD_gt?: InputMaybe<Scalars['BigDecimal']>;\n  cumulativeDepositedUSD_gte?: InputMaybe<Scalars['BigDecimal']>;\n  cumulativeDepositedUSD_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n  cumulativeDepositedUSD_lt?: InputMaybe<Scalars['BigDecimal']>;\n  cumulativeDepositedUSD_lte?: InputMaybe<Scalars['BigDecimal']>;\n  cumulativeDepositedUSD_not?: InputMaybe<Scalars['BigDecimal']>;\n  cumulativeDepositedUSD_not_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n  dailySnapshots_?: InputMaybe<SiloAssetDailySnapshot_Filter>;\n  hourlySnapshots_?: InputMaybe<SiloAssetHourlySnapshot_Filter>;\n  id?: InputMaybe<Scalars['ID']>;\n  id_gt?: InputMaybe<Scalars['ID']>;\n  id_gte?: InputMaybe<Scalars['ID']>;\n  id_in?: InputMaybe<Array<Scalars['ID']>>;\n  id_lt?: InputMaybe<Scalars['ID']>;\n  id_lte?: InputMaybe<Scalars['ID']>;\n  id_not?: InputMaybe<Scalars['ID']>;\n  id_not_in?: InputMaybe<Array<Scalars['ID']>>;\n  silo?: InputMaybe<Scalars['String']>;\n  silo_?: InputMaybe<Silo_Filter>;\n  silo_contains?: InputMaybe<Scalars['String']>;\n  silo_contains_nocase?: InputMaybe<Scalars['String']>;\n  silo_ends_with?: InputMaybe<Scalars['String']>;\n  silo_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  silo_gt?: InputMaybe<Scalars['String']>;\n  silo_gte?: InputMaybe<Scalars['String']>;\n  silo_in?: InputMaybe<Array<Scalars['String']>>;\n  silo_lt?: InputMaybe<Scalars['String']>;\n  silo_lte?: InputMaybe<Scalars['String']>;\n  silo_not?: InputMaybe<Scalars['String']>;\n  silo_not_contains?: InputMaybe<Scalars['String']>;\n  silo_not_contains_nocase?: InputMaybe<Scalars['String']>;\n  silo_not_ends_with?: InputMaybe<Scalars['String']>;\n  silo_not_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  silo_not_in?: InputMaybe<Array<Scalars['String']>>;\n  silo_not_starts_with?: InputMaybe<Scalars['String']>;\n  silo_not_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  silo_starts_with?: InputMaybe<Scalars['String']>;\n  silo_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  token?: InputMaybe<Scalars['String']>;\n  token_contains?: InputMaybe<Scalars['String']>;\n  token_contains_nocase?: InputMaybe<Scalars['String']>;\n  token_ends_with?: InputMaybe<Scalars['String']>;\n  token_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  token_gt?: InputMaybe<Scalars['String']>;\n  token_gte?: InputMaybe<Scalars['String']>;\n  token_in?: InputMaybe<Array<Scalars['String']>>;\n  token_lt?: InputMaybe<Scalars['String']>;\n  token_lte?: InputMaybe<Scalars['String']>;\n  token_not?: InputMaybe<Scalars['String']>;\n  token_not_contains?: InputMaybe<Scalars['String']>;\n  token_not_contains_nocase?: InputMaybe<Scalars['String']>;\n  token_not_ends_with?: InputMaybe<Scalars['String']>;\n  token_not_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  token_not_in?: InputMaybe<Array<Scalars['String']>>;\n  token_not_starts_with?: InputMaybe<Scalars['String']>;\n  token_not_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  token_starts_with?: InputMaybe<Scalars['String']>;\n  token_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  totalDepositedAmount?: InputMaybe<Scalars['BigInt']>;\n  totalDepositedAmount_gt?: InputMaybe<Scalars['BigInt']>;\n  totalDepositedAmount_gte?: InputMaybe<Scalars['BigInt']>;\n  totalDepositedAmount_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  totalDepositedAmount_lt?: InputMaybe<Scalars['BigInt']>;\n  totalDepositedAmount_lte?: InputMaybe<Scalars['BigInt']>;\n  totalDepositedAmount_not?: InputMaybe<Scalars['BigInt']>;\n  totalDepositedAmount_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  totalDepositedBDV?: InputMaybe<Scalars['BigInt']>;\n  totalDepositedBDV_gt?: InputMaybe<Scalars['BigInt']>;\n  totalDepositedBDV_gte?: InputMaybe<Scalars['BigInt']>;\n  totalDepositedBDV_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  totalDepositedBDV_lt?: InputMaybe<Scalars['BigInt']>;\n  totalDepositedBDV_lte?: InputMaybe<Scalars['BigInt']>;\n  totalDepositedBDV_not?: InputMaybe<Scalars['BigInt']>;\n  totalDepositedBDV_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  totalFarmAmount?: InputMaybe<Scalars['BigInt']>;\n  totalFarmAmount_gt?: InputMaybe<Scalars['BigInt']>;\n  totalFarmAmount_gte?: InputMaybe<Scalars['BigInt']>;\n  totalFarmAmount_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  totalFarmAmount_lt?: InputMaybe<Scalars['BigInt']>;\n  totalFarmAmount_lte?: InputMaybe<Scalars['BigInt']>;\n  totalFarmAmount_not?: InputMaybe<Scalars['BigInt']>;\n  totalFarmAmount_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  totalSeeds?: InputMaybe<Scalars['BigInt']>;\n  totalSeeds_gt?: InputMaybe<Scalars['BigInt']>;\n  totalSeeds_gte?: InputMaybe<Scalars['BigInt']>;\n  totalSeeds_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  totalSeeds_lt?: InputMaybe<Scalars['BigInt']>;\n  totalSeeds_lte?: InputMaybe<Scalars['BigInt']>;\n  totalSeeds_not?: InputMaybe<Scalars['BigInt']>;\n  totalSeeds_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  totalStalk?: InputMaybe<Scalars['BigInt']>;\n  totalStalk_gt?: InputMaybe<Scalars['BigInt']>;\n  totalStalk_gte?: InputMaybe<Scalars['BigInt']>;\n  totalStalk_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  totalStalk_lt?: InputMaybe<Scalars['BigInt']>;\n  totalStalk_lte?: InputMaybe<Scalars['BigInt']>;\n  totalStalk_not?: InputMaybe<Scalars['BigInt']>;\n  totalStalk_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  totalValueLockedUSD?: InputMaybe<Scalars['BigDecimal']>;\n  totalValueLockedUSD_gt?: InputMaybe<Scalars['BigDecimal']>;\n  totalValueLockedUSD_gte?: InputMaybe<Scalars['BigDecimal']>;\n  totalValueLockedUSD_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n  totalValueLockedUSD_lt?: InputMaybe<Scalars['BigDecimal']>;\n  totalValueLockedUSD_lte?: InputMaybe<Scalars['BigDecimal']>;\n  totalValueLockedUSD_not?: InputMaybe<Scalars['BigDecimal']>;\n  totalValueLockedUSD_not_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n};\n\nexport enum SiloAsset_OrderBy {\n  CumulativeDepositedUsd = 'cumulativeDepositedUSD',\n  DailySnapshots = 'dailySnapshots',\n  HourlySnapshots = 'hourlySnapshots',\n  Id = 'id',\n  Silo = 'silo',\n  Token = 'token',\n  TotalDepositedAmount = 'totalDepositedAmount',\n  TotalDepositedBdv = 'totalDepositedBDV',\n  TotalFarmAmount = 'totalFarmAmount',\n  TotalSeeds = 'totalSeeds',\n  TotalStalk = 'totalStalk',\n  TotalValueLockedUsd = 'totalValueLockedUSD'\n}\n\nexport type SiloDailySnapshot = {\n  __typename?: 'SiloDailySnapshot';\n  beansPerStalk: Scalars['BigInt'];\n  blockNumber: Scalars['BigInt'];\n  cumulativeDepositedUSD: Scalars['BigDecimal'];\n  dailyBeanMints: Scalars['BigInt'];\n  dailyClaimableBDV: Scalars['BigInt'];\n  dailyDepositedBDV: Scalars['BigInt'];\n  dailyDepositedUSD: Scalars['BigDecimal'];\n  dailyFarmers: Scalars['Int'];\n  dailyPlantableStalkDelta: Scalars['BigInt'];\n  dailyRootsDelta: Scalars['BigInt'];\n  dailySeedsDelta: Scalars['BigInt'];\n  dailyStalkDelta: Scalars['BigInt'];\n  dailyWithdrawnBDV: Scalars['BigInt'];\n  id: Scalars['ID'];\n  lastUpdated: Scalars['BigInt'];\n  season: Scalars['Int'];\n  silo: Silo;\n  timestamp: Scalars['BigInt'];\n  totalBeanMints: Scalars['BigInt'];\n  totalDepositedBDV: Scalars['BigInt'];\n  totalFarmers: Scalars['Int'];\n  totalPlantableStalk: Scalars['BigInt'];\n  totalRoots: Scalars['BigInt'];\n  totalSeeds: Scalars['BigInt'];\n  totalStalk: Scalars['BigInt'];\n  totalValueLockedUSD: Scalars['BigDecimal'];\n};\n\nexport type SiloDailySnapshot_Filter = {\n  /** Filter for the block changed event. */\n  _change_block?: InputMaybe<BlockChangedFilter>;\n  beansPerStalk?: InputMaybe<Scalars['BigInt']>;\n  beansPerStalk_gt?: InputMaybe<Scalars['BigInt']>;\n  beansPerStalk_gte?: InputMaybe<Scalars['BigInt']>;\n  beansPerStalk_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  beansPerStalk_lt?: InputMaybe<Scalars['BigInt']>;\n  beansPerStalk_lte?: InputMaybe<Scalars['BigInt']>;\n  beansPerStalk_not?: InputMaybe<Scalars['BigInt']>;\n  beansPerStalk_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  blockNumber?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_gt?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_gte?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  blockNumber_lt?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_lte?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_not?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  cumulativeDepositedUSD?: InputMaybe<Scalars['BigDecimal']>;\n  cumulativeDepositedUSD_gt?: InputMaybe<Scalars['BigDecimal']>;\n  cumulativeDepositedUSD_gte?: InputMaybe<Scalars['BigDecimal']>;\n  cumulativeDepositedUSD_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n  cumulativeDepositedUSD_lt?: InputMaybe<Scalars['BigDecimal']>;\n  cumulativeDepositedUSD_lte?: InputMaybe<Scalars['BigDecimal']>;\n  cumulativeDepositedUSD_not?: InputMaybe<Scalars['BigDecimal']>;\n  cumulativeDepositedUSD_not_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n  dailyBeanMints?: InputMaybe<Scalars['BigInt']>;\n  dailyBeanMints_gt?: InputMaybe<Scalars['BigInt']>;\n  dailyBeanMints_gte?: InputMaybe<Scalars['BigInt']>;\n  dailyBeanMints_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  dailyBeanMints_lt?: InputMaybe<Scalars['BigInt']>;\n  dailyBeanMints_lte?: InputMaybe<Scalars['BigInt']>;\n  dailyBeanMints_not?: InputMaybe<Scalars['BigInt']>;\n  dailyBeanMints_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  dailyClaimableBDV?: InputMaybe<Scalars['BigInt']>;\n  dailyClaimableBDV_gt?: InputMaybe<Scalars['BigInt']>;\n  dailyClaimableBDV_gte?: InputMaybe<Scalars['BigInt']>;\n  dailyClaimableBDV_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  dailyClaimableBDV_lt?: InputMaybe<Scalars['BigInt']>;\n  dailyClaimableBDV_lte?: InputMaybe<Scalars['BigInt']>;\n  dailyClaimableBDV_not?: InputMaybe<Scalars['BigInt']>;\n  dailyClaimableBDV_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  dailyDepositedBDV?: InputMaybe<Scalars['BigInt']>;\n  dailyDepositedBDV_gt?: InputMaybe<Scalars['BigInt']>;\n  dailyDepositedBDV_gte?: InputMaybe<Scalars['BigInt']>;\n  dailyDepositedBDV_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  dailyDepositedBDV_lt?: InputMaybe<Scalars['BigInt']>;\n  dailyDepositedBDV_lte?: InputMaybe<Scalars['BigInt']>;\n  dailyDepositedBDV_not?: InputMaybe<Scalars['BigInt']>;\n  dailyDepositedBDV_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  dailyDepositedUSD?: InputMaybe<Scalars['BigDecimal']>;\n  dailyDepositedUSD_gt?: InputMaybe<Scalars['BigDecimal']>;\n  dailyDepositedUSD_gte?: InputMaybe<Scalars['BigDecimal']>;\n  dailyDepositedUSD_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n  dailyDepositedUSD_lt?: InputMaybe<Scalars['BigDecimal']>;\n  dailyDepositedUSD_lte?: InputMaybe<Scalars['BigDecimal']>;\n  dailyDepositedUSD_not?: InputMaybe<Scalars['BigDecimal']>;\n  dailyDepositedUSD_not_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n  dailyFarmers?: InputMaybe<Scalars['Int']>;\n  dailyFarmers_gt?: InputMaybe<Scalars['Int']>;\n  dailyFarmers_gte?: InputMaybe<Scalars['Int']>;\n  dailyFarmers_in?: InputMaybe<Array<Scalars['Int']>>;\n  dailyFarmers_lt?: InputMaybe<Scalars['Int']>;\n  dailyFarmers_lte?: InputMaybe<Scalars['Int']>;\n  dailyFarmers_not?: InputMaybe<Scalars['Int']>;\n  dailyFarmers_not_in?: InputMaybe<Array<Scalars['Int']>>;\n  dailyPlantableStalkDelta?: InputMaybe<Scalars['BigInt']>;\n  dailyPlantableStalkDelta_gt?: InputMaybe<Scalars['BigInt']>;\n  dailyPlantableStalkDelta_gte?: InputMaybe<Scalars['BigInt']>;\n  dailyPlantableStalkDelta_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  dailyPlantableStalkDelta_lt?: InputMaybe<Scalars['BigInt']>;\n  dailyPlantableStalkDelta_lte?: InputMaybe<Scalars['BigInt']>;\n  dailyPlantableStalkDelta_not?: InputMaybe<Scalars['BigInt']>;\n  dailyPlantableStalkDelta_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  dailyRootsDelta?: InputMaybe<Scalars['BigInt']>;\n  dailyRootsDelta_gt?: InputMaybe<Scalars['BigInt']>;\n  dailyRootsDelta_gte?: InputMaybe<Scalars['BigInt']>;\n  dailyRootsDelta_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  dailyRootsDelta_lt?: InputMaybe<Scalars['BigInt']>;\n  dailyRootsDelta_lte?: InputMaybe<Scalars['BigInt']>;\n  dailyRootsDelta_not?: InputMaybe<Scalars['BigInt']>;\n  dailyRootsDelta_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  dailySeedsDelta?: InputMaybe<Scalars['BigInt']>;\n  dailySeedsDelta_gt?: InputMaybe<Scalars['BigInt']>;\n  dailySeedsDelta_gte?: InputMaybe<Scalars['BigInt']>;\n  dailySeedsDelta_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  dailySeedsDelta_lt?: InputMaybe<Scalars['BigInt']>;\n  dailySeedsDelta_lte?: InputMaybe<Scalars['BigInt']>;\n  dailySeedsDelta_not?: InputMaybe<Scalars['BigInt']>;\n  dailySeedsDelta_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  dailyStalkDelta?: InputMaybe<Scalars['BigInt']>;\n  dailyStalkDelta_gt?: InputMaybe<Scalars['BigInt']>;\n  dailyStalkDelta_gte?: InputMaybe<Scalars['BigInt']>;\n  dailyStalkDelta_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  dailyStalkDelta_lt?: InputMaybe<Scalars['BigInt']>;\n  dailyStalkDelta_lte?: InputMaybe<Scalars['BigInt']>;\n  dailyStalkDelta_not?: InputMaybe<Scalars['BigInt']>;\n  dailyStalkDelta_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  dailyWithdrawnBDV?: InputMaybe<Scalars['BigInt']>;\n  dailyWithdrawnBDV_gt?: InputMaybe<Scalars['BigInt']>;\n  dailyWithdrawnBDV_gte?: InputMaybe<Scalars['BigInt']>;\n  dailyWithdrawnBDV_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  dailyWithdrawnBDV_lt?: InputMaybe<Scalars['BigInt']>;\n  dailyWithdrawnBDV_lte?: InputMaybe<Scalars['BigInt']>;\n  dailyWithdrawnBDV_not?: InputMaybe<Scalars['BigInt']>;\n  dailyWithdrawnBDV_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  id?: InputMaybe<Scalars['ID']>;\n  id_gt?: InputMaybe<Scalars['ID']>;\n  id_gte?: InputMaybe<Scalars['ID']>;\n  id_in?: InputMaybe<Array<Scalars['ID']>>;\n  id_lt?: InputMaybe<Scalars['ID']>;\n  id_lte?: InputMaybe<Scalars['ID']>;\n  id_not?: InputMaybe<Scalars['ID']>;\n  id_not_in?: InputMaybe<Array<Scalars['ID']>>;\n  lastUpdated?: InputMaybe<Scalars['BigInt']>;\n  lastUpdated_gt?: InputMaybe<Scalars['BigInt']>;\n  lastUpdated_gte?: InputMaybe<Scalars['BigInt']>;\n  lastUpdated_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  lastUpdated_lt?: InputMaybe<Scalars['BigInt']>;\n  lastUpdated_lte?: InputMaybe<Scalars['BigInt']>;\n  lastUpdated_not?: InputMaybe<Scalars['BigInt']>;\n  lastUpdated_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  season?: InputMaybe<Scalars['Int']>;\n  season_gt?: InputMaybe<Scalars['Int']>;\n  season_gte?: InputMaybe<Scalars['Int']>;\n  season_in?: InputMaybe<Array<Scalars['Int']>>;\n  season_lt?: InputMaybe<Scalars['Int']>;\n  season_lte?: InputMaybe<Scalars['Int']>;\n  season_not?: InputMaybe<Scalars['Int']>;\n  season_not_in?: InputMaybe<Array<Scalars['Int']>>;\n  silo?: InputMaybe<Scalars['String']>;\n  silo_?: InputMaybe<Silo_Filter>;\n  silo_contains?: InputMaybe<Scalars['String']>;\n  silo_contains_nocase?: InputMaybe<Scalars['String']>;\n  silo_ends_with?: InputMaybe<Scalars['String']>;\n  silo_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  silo_gt?: InputMaybe<Scalars['String']>;\n  silo_gte?: InputMaybe<Scalars['String']>;\n  silo_in?: InputMaybe<Array<Scalars['String']>>;\n  silo_lt?: InputMaybe<Scalars['String']>;\n  silo_lte?: InputMaybe<Scalars['String']>;\n  silo_not?: InputMaybe<Scalars['String']>;\n  silo_not_contains?: InputMaybe<Scalars['String']>;\n  silo_not_contains_nocase?: InputMaybe<Scalars['String']>;\n  silo_not_ends_with?: InputMaybe<Scalars['String']>;\n  silo_not_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  silo_not_in?: InputMaybe<Array<Scalars['String']>>;\n  silo_not_starts_with?: InputMaybe<Scalars['String']>;\n  silo_not_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  silo_starts_with?: InputMaybe<Scalars['String']>;\n  silo_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  timestamp?: InputMaybe<Scalars['BigInt']>;\n  timestamp_gt?: InputMaybe<Scalars['BigInt']>;\n  timestamp_gte?: InputMaybe<Scalars['BigInt']>;\n  timestamp_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  timestamp_lt?: InputMaybe<Scalars['BigInt']>;\n  timestamp_lte?: InputMaybe<Scalars['BigInt']>;\n  timestamp_not?: InputMaybe<Scalars['BigInt']>;\n  timestamp_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  totalBeanMints?: InputMaybe<Scalars['BigInt']>;\n  totalBeanMints_gt?: InputMaybe<Scalars['BigInt']>;\n  totalBeanMints_gte?: InputMaybe<Scalars['BigInt']>;\n  totalBeanMints_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  totalBeanMints_lt?: InputMaybe<Scalars['BigInt']>;\n  totalBeanMints_lte?: InputMaybe<Scalars['BigInt']>;\n  totalBeanMints_not?: InputMaybe<Scalars['BigInt']>;\n  totalBeanMints_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  totalDepositedBDV?: InputMaybe<Scalars['BigInt']>;\n  totalDepositedBDV_gt?: InputMaybe<Scalars['BigInt']>;\n  totalDepositedBDV_gte?: InputMaybe<Scalars['BigInt']>;\n  totalDepositedBDV_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  totalDepositedBDV_lt?: InputMaybe<Scalars['BigInt']>;\n  totalDepositedBDV_lte?: InputMaybe<Scalars['BigInt']>;\n  totalDepositedBDV_not?: InputMaybe<Scalars['BigInt']>;\n  totalDepositedBDV_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  totalFarmers?: InputMaybe<Scalars['Int']>;\n  totalFarmers_gt?: InputMaybe<Scalars['Int']>;\n  totalFarmers_gte?: InputMaybe<Scalars['Int']>;\n  totalFarmers_in?: InputMaybe<Array<Scalars['Int']>>;\n  totalFarmers_lt?: InputMaybe<Scalars['Int']>;\n  totalFarmers_lte?: InputMaybe<Scalars['Int']>;\n  totalFarmers_not?: InputMaybe<Scalars['Int']>;\n  totalFarmers_not_in?: InputMaybe<Array<Scalars['Int']>>;\n  totalPlantableStalk?: InputMaybe<Scalars['BigInt']>;\n  totalPlantableStalk_gt?: InputMaybe<Scalars['BigInt']>;\n  totalPlantableStalk_gte?: InputMaybe<Scalars['BigInt']>;\n  totalPlantableStalk_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  totalPlantableStalk_lt?: InputMaybe<Scalars['BigInt']>;\n  totalPlantableStalk_lte?: InputMaybe<Scalars['BigInt']>;\n  totalPlantableStalk_not?: InputMaybe<Scalars['BigInt']>;\n  totalPlantableStalk_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  totalRoots?: InputMaybe<Scalars['BigInt']>;\n  totalRoots_gt?: InputMaybe<Scalars['BigInt']>;\n  totalRoots_gte?: InputMaybe<Scalars['BigInt']>;\n  totalRoots_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  totalRoots_lt?: InputMaybe<Scalars['BigInt']>;\n  totalRoots_lte?: InputMaybe<Scalars['BigInt']>;\n  totalRoots_not?: InputMaybe<Scalars['BigInt']>;\n  totalRoots_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  totalSeeds?: InputMaybe<Scalars['BigInt']>;\n  totalSeeds_gt?: InputMaybe<Scalars['BigInt']>;\n  totalSeeds_gte?: InputMaybe<Scalars['BigInt']>;\n  totalSeeds_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  totalSeeds_lt?: InputMaybe<Scalars['BigInt']>;\n  totalSeeds_lte?: InputMaybe<Scalars['BigInt']>;\n  totalSeeds_not?: InputMaybe<Scalars['BigInt']>;\n  totalSeeds_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  totalStalk?: InputMaybe<Scalars['BigInt']>;\n  totalStalk_gt?: InputMaybe<Scalars['BigInt']>;\n  totalStalk_gte?: InputMaybe<Scalars['BigInt']>;\n  totalStalk_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  totalStalk_lt?: InputMaybe<Scalars['BigInt']>;\n  totalStalk_lte?: InputMaybe<Scalars['BigInt']>;\n  totalStalk_not?: InputMaybe<Scalars['BigInt']>;\n  totalStalk_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  totalValueLockedUSD?: InputMaybe<Scalars['BigDecimal']>;\n  totalValueLockedUSD_gt?: InputMaybe<Scalars['BigDecimal']>;\n  totalValueLockedUSD_gte?: InputMaybe<Scalars['BigDecimal']>;\n  totalValueLockedUSD_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n  totalValueLockedUSD_lt?: InputMaybe<Scalars['BigDecimal']>;\n  totalValueLockedUSD_lte?: InputMaybe<Scalars['BigDecimal']>;\n  totalValueLockedUSD_not?: InputMaybe<Scalars['BigDecimal']>;\n  totalValueLockedUSD_not_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n};\n\nexport enum SiloDailySnapshot_OrderBy {\n  BeansPerStalk = 'beansPerStalk',\n  BlockNumber = 'blockNumber',\n  CumulativeDepositedUsd = 'cumulativeDepositedUSD',\n  DailyBeanMints = 'dailyBeanMints',\n  DailyClaimableBdv = 'dailyClaimableBDV',\n  DailyDepositedBdv = 'dailyDepositedBDV',\n  DailyDepositedUsd = 'dailyDepositedUSD',\n  DailyFarmers = 'dailyFarmers',\n  DailyPlantableStalkDelta = 'dailyPlantableStalkDelta',\n  DailyRootsDelta = 'dailyRootsDelta',\n  DailySeedsDelta = 'dailySeedsDelta',\n  DailyStalkDelta = 'dailyStalkDelta',\n  DailyWithdrawnBdv = 'dailyWithdrawnBDV',\n  Id = 'id',\n  LastUpdated = 'lastUpdated',\n  Season = 'season',\n  Silo = 'silo',\n  Timestamp = 'timestamp',\n  TotalBeanMints = 'totalBeanMints',\n  TotalDepositedBdv = 'totalDepositedBDV',\n  TotalFarmers = 'totalFarmers',\n  TotalPlantableStalk = 'totalPlantableStalk',\n  TotalRoots = 'totalRoots',\n  TotalSeeds = 'totalSeeds',\n  TotalStalk = 'totalStalk',\n  TotalValueLockedUsd = 'totalValueLockedUSD'\n}\n\nexport type SiloDeposit = {\n  __typename?: 'SiloDeposit';\n  amount: Scalars['BigInt'];\n  amountAdded: Scalars['BigInt'];\n  amountRemoved: Scalars['BigInt'];\n  bdv: Scalars['BigInt'];\n  bdvAdded: Scalars['BigInt'];\n  bdvRemoved: Scalars['BigInt'];\n  createdAt: Scalars['BigInt'];\n  farmer: Farmer;\n  hashes: Array<Scalars['String']>;\n  /** Account - Token Address - Season */\n  id: Scalars['ID'];\n  season: Scalars['Int'];\n  seeds: Scalars['BigInt'];\n  stalk: Scalars['BigInt'];\n  token: Scalars['String'];\n  updatedAt: Scalars['BigInt'];\n};\n\nexport type SiloDeposit_Filter = {\n  /** Filter for the block changed event. */\n  _change_block?: InputMaybe<BlockChangedFilter>;\n  amount?: InputMaybe<Scalars['BigInt']>;\n  amountAdded?: InputMaybe<Scalars['BigInt']>;\n  amountAdded_gt?: InputMaybe<Scalars['BigInt']>;\n  amountAdded_gte?: InputMaybe<Scalars['BigInt']>;\n  amountAdded_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  amountAdded_lt?: InputMaybe<Scalars['BigInt']>;\n  amountAdded_lte?: InputMaybe<Scalars['BigInt']>;\n  amountAdded_not?: InputMaybe<Scalars['BigInt']>;\n  amountAdded_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  amountRemoved?: InputMaybe<Scalars['BigInt']>;\n  amountRemoved_gt?: InputMaybe<Scalars['BigInt']>;\n  amountRemoved_gte?: InputMaybe<Scalars['BigInt']>;\n  amountRemoved_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  amountRemoved_lt?: InputMaybe<Scalars['BigInt']>;\n  amountRemoved_lte?: InputMaybe<Scalars['BigInt']>;\n  amountRemoved_not?: InputMaybe<Scalars['BigInt']>;\n  amountRemoved_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  amount_gt?: InputMaybe<Scalars['BigInt']>;\n  amount_gte?: InputMaybe<Scalars['BigInt']>;\n  amount_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  amount_lt?: InputMaybe<Scalars['BigInt']>;\n  amount_lte?: InputMaybe<Scalars['BigInt']>;\n  amount_not?: InputMaybe<Scalars['BigInt']>;\n  amount_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  bdv?: InputMaybe<Scalars['BigInt']>;\n  bdvAdded?: InputMaybe<Scalars['BigInt']>;\n  bdvAdded_gt?: InputMaybe<Scalars['BigInt']>;\n  bdvAdded_gte?: InputMaybe<Scalars['BigInt']>;\n  bdvAdded_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  bdvAdded_lt?: InputMaybe<Scalars['BigInt']>;\n  bdvAdded_lte?: InputMaybe<Scalars['BigInt']>;\n  bdvAdded_not?: InputMaybe<Scalars['BigInt']>;\n  bdvAdded_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  bdvRemoved?: InputMaybe<Scalars['BigInt']>;\n  bdvRemoved_gt?: InputMaybe<Scalars['BigInt']>;\n  bdvRemoved_gte?: InputMaybe<Scalars['BigInt']>;\n  bdvRemoved_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  bdvRemoved_lt?: InputMaybe<Scalars['BigInt']>;\n  bdvRemoved_lte?: InputMaybe<Scalars['BigInt']>;\n  bdvRemoved_not?: InputMaybe<Scalars['BigInt']>;\n  bdvRemoved_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  bdv_gt?: InputMaybe<Scalars['BigInt']>;\n  bdv_gte?: InputMaybe<Scalars['BigInt']>;\n  bdv_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  bdv_lt?: InputMaybe<Scalars['BigInt']>;\n  bdv_lte?: InputMaybe<Scalars['BigInt']>;\n  bdv_not?: InputMaybe<Scalars['BigInt']>;\n  bdv_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  createdAt?: InputMaybe<Scalars['BigInt']>;\n  createdAt_gt?: InputMaybe<Scalars['BigInt']>;\n  createdAt_gte?: InputMaybe<Scalars['BigInt']>;\n  createdAt_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  createdAt_lt?: InputMaybe<Scalars['BigInt']>;\n  createdAt_lte?: InputMaybe<Scalars['BigInt']>;\n  createdAt_not?: InputMaybe<Scalars['BigInt']>;\n  createdAt_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  farmer?: InputMaybe<Scalars['String']>;\n  farmer_?: InputMaybe<Farmer_Filter>;\n  farmer_contains?: InputMaybe<Scalars['String']>;\n  farmer_contains_nocase?: InputMaybe<Scalars['String']>;\n  farmer_ends_with?: InputMaybe<Scalars['String']>;\n  farmer_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  farmer_gt?: InputMaybe<Scalars['String']>;\n  farmer_gte?: InputMaybe<Scalars['String']>;\n  farmer_in?: InputMaybe<Array<Scalars['String']>>;\n  farmer_lt?: InputMaybe<Scalars['String']>;\n  farmer_lte?: InputMaybe<Scalars['String']>;\n  farmer_not?: InputMaybe<Scalars['String']>;\n  farmer_not_contains?: InputMaybe<Scalars['String']>;\n  farmer_not_contains_nocase?: InputMaybe<Scalars['String']>;\n  farmer_not_ends_with?: InputMaybe<Scalars['String']>;\n  farmer_not_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  farmer_not_in?: InputMaybe<Array<Scalars['String']>>;\n  farmer_not_starts_with?: InputMaybe<Scalars['String']>;\n  farmer_not_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  farmer_starts_with?: InputMaybe<Scalars['String']>;\n  farmer_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  hashes?: InputMaybe<Array<Scalars['String']>>;\n  hashes_contains?: InputMaybe<Array<Scalars['String']>>;\n  hashes_contains_nocase?: InputMaybe<Array<Scalars['String']>>;\n  hashes_not?: InputMaybe<Array<Scalars['String']>>;\n  hashes_not_contains?: InputMaybe<Array<Scalars['String']>>;\n  hashes_not_contains_nocase?: InputMaybe<Array<Scalars['String']>>;\n  id?: InputMaybe<Scalars['ID']>;\n  id_gt?: InputMaybe<Scalars['ID']>;\n  id_gte?: InputMaybe<Scalars['ID']>;\n  id_in?: InputMaybe<Array<Scalars['ID']>>;\n  id_lt?: InputMaybe<Scalars['ID']>;\n  id_lte?: InputMaybe<Scalars['ID']>;\n  id_not?: InputMaybe<Scalars['ID']>;\n  id_not_in?: InputMaybe<Array<Scalars['ID']>>;\n  season?: InputMaybe<Scalars['Int']>;\n  season_gt?: InputMaybe<Scalars['Int']>;\n  season_gte?: InputMaybe<Scalars['Int']>;\n  season_in?: InputMaybe<Array<Scalars['Int']>>;\n  season_lt?: InputMaybe<Scalars['Int']>;\n  season_lte?: InputMaybe<Scalars['Int']>;\n  season_not?: InputMaybe<Scalars['Int']>;\n  season_not_in?: InputMaybe<Array<Scalars['Int']>>;\n  seeds?: InputMaybe<Scalars['BigInt']>;\n  seeds_gt?: InputMaybe<Scalars['BigInt']>;\n  seeds_gte?: InputMaybe<Scalars['BigInt']>;\n  seeds_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  seeds_lt?: InputMaybe<Scalars['BigInt']>;\n  seeds_lte?: InputMaybe<Scalars['BigInt']>;\n  seeds_not?: InputMaybe<Scalars['BigInt']>;\n  seeds_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  stalk?: InputMaybe<Scalars['BigInt']>;\n  stalk_gt?: InputMaybe<Scalars['BigInt']>;\n  stalk_gte?: InputMaybe<Scalars['BigInt']>;\n  stalk_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  stalk_lt?: InputMaybe<Scalars['BigInt']>;\n  stalk_lte?: InputMaybe<Scalars['BigInt']>;\n  stalk_not?: InputMaybe<Scalars['BigInt']>;\n  stalk_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  token?: InputMaybe<Scalars['String']>;\n  token_contains?: InputMaybe<Scalars['String']>;\n  token_contains_nocase?: InputMaybe<Scalars['String']>;\n  token_ends_with?: InputMaybe<Scalars['String']>;\n  token_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  token_gt?: InputMaybe<Scalars['String']>;\n  token_gte?: InputMaybe<Scalars['String']>;\n  token_in?: InputMaybe<Array<Scalars['String']>>;\n  token_lt?: InputMaybe<Scalars['String']>;\n  token_lte?: InputMaybe<Scalars['String']>;\n  token_not?: InputMaybe<Scalars['String']>;\n  token_not_contains?: InputMaybe<Scalars['String']>;\n  token_not_contains_nocase?: InputMaybe<Scalars['String']>;\n  token_not_ends_with?: InputMaybe<Scalars['String']>;\n  token_not_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  token_not_in?: InputMaybe<Array<Scalars['String']>>;\n  token_not_starts_with?: InputMaybe<Scalars['String']>;\n  token_not_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  token_starts_with?: InputMaybe<Scalars['String']>;\n  token_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  updatedAt?: InputMaybe<Scalars['BigInt']>;\n  updatedAt_gt?: InputMaybe<Scalars['BigInt']>;\n  updatedAt_gte?: InputMaybe<Scalars['BigInt']>;\n  updatedAt_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  updatedAt_lt?: InputMaybe<Scalars['BigInt']>;\n  updatedAt_lte?: InputMaybe<Scalars['BigInt']>;\n  updatedAt_not?: InputMaybe<Scalars['BigInt']>;\n  updatedAt_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n};\n\nexport enum SiloDeposit_OrderBy {\n  Amount = 'amount',\n  AmountAdded = 'amountAdded',\n  AmountRemoved = 'amountRemoved',\n  Bdv = 'bdv',\n  BdvAdded = 'bdvAdded',\n  BdvRemoved = 'bdvRemoved',\n  CreatedAt = 'createdAt',\n  Farmer = 'farmer',\n  Hashes = 'hashes',\n  Id = 'id',\n  Season = 'season',\n  Seeds = 'seeds',\n  Stalk = 'stalk',\n  Token = 'token',\n  UpdatedAt = 'updatedAt'\n}\n\nexport type SiloEvent = {\n  /**  Block number of this event  */\n  blockNumber: Scalars['BigInt'];\n  /**  Transaction hash of the transaction that emitted this event  */\n  hash: Scalars['String'];\n  /**  { Event type }-{ Transaction hash }-{ Log index }  */\n  id: Scalars['ID'];\n  /**  Event log index. For transactions that don't emit event, create arbitrary index starting from 0  */\n  logIndex: Scalars['Int'];\n  /**  The protocol this transaction belongs to  */\n  protocol: Beanstalk;\n  /**  Timestamp of this event  */\n  timestamp: Scalars['BigInt'];\n};\n\nexport type SiloEvent_Filter = {\n  /** Filter for the block changed event. */\n  _change_block?: InputMaybe<BlockChangedFilter>;\n  blockNumber?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_gt?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_gte?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  blockNumber_lt?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_lte?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_not?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  hash?: InputMaybe<Scalars['String']>;\n  hash_contains?: InputMaybe<Scalars['String']>;\n  hash_contains_nocase?: InputMaybe<Scalars['String']>;\n  hash_ends_with?: InputMaybe<Scalars['String']>;\n  hash_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  hash_gt?: InputMaybe<Scalars['String']>;\n  hash_gte?: InputMaybe<Scalars['String']>;\n  hash_in?: InputMaybe<Array<Scalars['String']>>;\n  hash_lt?: InputMaybe<Scalars['String']>;\n  hash_lte?: InputMaybe<Scalars['String']>;\n  hash_not?: InputMaybe<Scalars['String']>;\n  hash_not_contains?: InputMaybe<Scalars['String']>;\n  hash_not_contains_nocase?: InputMaybe<Scalars['String']>;\n  hash_not_ends_with?: InputMaybe<Scalars['String']>;\n  hash_not_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  hash_not_in?: InputMaybe<Array<Scalars['String']>>;\n  hash_not_starts_with?: InputMaybe<Scalars['String']>;\n  hash_not_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  hash_starts_with?: InputMaybe<Scalars['String']>;\n  hash_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  id?: InputMaybe<Scalars['ID']>;\n  id_gt?: InputMaybe<Scalars['ID']>;\n  id_gte?: InputMaybe<Scalars['ID']>;\n  id_in?: InputMaybe<Array<Scalars['ID']>>;\n  id_lt?: InputMaybe<Scalars['ID']>;\n  id_lte?: InputMaybe<Scalars['ID']>;\n  id_not?: InputMaybe<Scalars['ID']>;\n  id_not_in?: InputMaybe<Array<Scalars['ID']>>;\n  logIndex?: InputMaybe<Scalars['Int']>;\n  logIndex_gt?: InputMaybe<Scalars['Int']>;\n  logIndex_gte?: InputMaybe<Scalars['Int']>;\n  logIndex_in?: InputMaybe<Array<Scalars['Int']>>;\n  logIndex_lt?: InputMaybe<Scalars['Int']>;\n  logIndex_lte?: InputMaybe<Scalars['Int']>;\n  logIndex_not?: InputMaybe<Scalars['Int']>;\n  logIndex_not_in?: InputMaybe<Array<Scalars['Int']>>;\n  protocol?: InputMaybe<Scalars['String']>;\n  protocol_?: InputMaybe<Beanstalk_Filter>;\n  protocol_contains?: InputMaybe<Scalars['String']>;\n  protocol_contains_nocase?: InputMaybe<Scalars['String']>;\n  protocol_ends_with?: InputMaybe<Scalars['String']>;\n  protocol_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  protocol_gt?: InputMaybe<Scalars['String']>;\n  protocol_gte?: InputMaybe<Scalars['String']>;\n  protocol_in?: InputMaybe<Array<Scalars['String']>>;\n  protocol_lt?: InputMaybe<Scalars['String']>;\n  protocol_lte?: InputMaybe<Scalars['String']>;\n  protocol_not?: InputMaybe<Scalars['String']>;\n  protocol_not_contains?: InputMaybe<Scalars['String']>;\n  protocol_not_contains_nocase?: InputMaybe<Scalars['String']>;\n  protocol_not_ends_with?: InputMaybe<Scalars['String']>;\n  protocol_not_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  protocol_not_in?: InputMaybe<Array<Scalars['String']>>;\n  protocol_not_starts_with?: InputMaybe<Scalars['String']>;\n  protocol_not_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  protocol_starts_with?: InputMaybe<Scalars['String']>;\n  protocol_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  timestamp?: InputMaybe<Scalars['BigInt']>;\n  timestamp_gt?: InputMaybe<Scalars['BigInt']>;\n  timestamp_gte?: InputMaybe<Scalars['BigInt']>;\n  timestamp_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  timestamp_lt?: InputMaybe<Scalars['BigInt']>;\n  timestamp_lte?: InputMaybe<Scalars['BigInt']>;\n  timestamp_not?: InputMaybe<Scalars['BigInt']>;\n  timestamp_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n};\n\nexport enum SiloEvent_OrderBy {\n  BlockNumber = 'blockNumber',\n  Hash = 'hash',\n  Id = 'id',\n  LogIndex = 'logIndex',\n  Protocol = 'protocol',\n  Timestamp = 'timestamp'\n}\n\nexport type SiloHourlySnapshot = {\n  __typename?: 'SiloHourlySnapshot';\n  beansPerStalk: Scalars['BigInt'];\n  blockNumber: Scalars['BigInt'];\n  cumulativeDepositedUSD: Scalars['BigDecimal'];\n  hourlyBeanMints: Scalars['BigInt'];\n  hourlyClaimableBDV: Scalars['BigInt'];\n  hourlyDepositedBDV: Scalars['BigInt'];\n  hourlyDepositedUSD: Scalars['BigDecimal'];\n  hourlyFarmers: Scalars['Int'];\n  hourlyPlantableStalkDelta: Scalars['BigInt'];\n  hourlyRootsDelta: Scalars['BigInt'];\n  hourlySeedsDelta: Scalars['BigInt'];\n  hourlyStalkDelta: Scalars['BigInt'];\n  hourlyWithdrawnBDV: Scalars['BigInt'];\n  id: Scalars['ID'];\n  lastUpdated: Scalars['BigInt'];\n  season: Scalars['Int'];\n  silo: Silo;\n  timestamp: Scalars['BigInt'];\n  totalBeanMints: Scalars['BigInt'];\n  totalDepositedBDV: Scalars['BigInt'];\n  totalFarmers: Scalars['Int'];\n  totalPlantableStalk: Scalars['BigInt'];\n  totalRoots: Scalars['BigInt'];\n  totalSeeds: Scalars['BigInt'];\n  totalStalk: Scalars['BigInt'];\n  totalValueLockedUSD: Scalars['BigDecimal'];\n};\n\nexport type SiloHourlySnapshot_Filter = {\n  /** Filter for the block changed event. */\n  _change_block?: InputMaybe<BlockChangedFilter>;\n  beansPerStalk?: InputMaybe<Scalars['BigInt']>;\n  beansPerStalk_gt?: InputMaybe<Scalars['BigInt']>;\n  beansPerStalk_gte?: InputMaybe<Scalars['BigInt']>;\n  beansPerStalk_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  beansPerStalk_lt?: InputMaybe<Scalars['BigInt']>;\n  beansPerStalk_lte?: InputMaybe<Scalars['BigInt']>;\n  beansPerStalk_not?: InputMaybe<Scalars['BigInt']>;\n  beansPerStalk_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  blockNumber?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_gt?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_gte?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  blockNumber_lt?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_lte?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_not?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  cumulativeDepositedUSD?: InputMaybe<Scalars['BigDecimal']>;\n  cumulativeDepositedUSD_gt?: InputMaybe<Scalars['BigDecimal']>;\n  cumulativeDepositedUSD_gte?: InputMaybe<Scalars['BigDecimal']>;\n  cumulativeDepositedUSD_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n  cumulativeDepositedUSD_lt?: InputMaybe<Scalars['BigDecimal']>;\n  cumulativeDepositedUSD_lte?: InputMaybe<Scalars['BigDecimal']>;\n  cumulativeDepositedUSD_not?: InputMaybe<Scalars['BigDecimal']>;\n  cumulativeDepositedUSD_not_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n  hourlyBeanMints?: InputMaybe<Scalars['BigInt']>;\n  hourlyBeanMints_gt?: InputMaybe<Scalars['BigInt']>;\n  hourlyBeanMints_gte?: InputMaybe<Scalars['BigInt']>;\n  hourlyBeanMints_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  hourlyBeanMints_lt?: InputMaybe<Scalars['BigInt']>;\n  hourlyBeanMints_lte?: InputMaybe<Scalars['BigInt']>;\n  hourlyBeanMints_not?: InputMaybe<Scalars['BigInt']>;\n  hourlyBeanMints_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  hourlyClaimableBDV?: InputMaybe<Scalars['BigInt']>;\n  hourlyClaimableBDV_gt?: InputMaybe<Scalars['BigInt']>;\n  hourlyClaimableBDV_gte?: InputMaybe<Scalars['BigInt']>;\n  hourlyClaimableBDV_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  hourlyClaimableBDV_lt?: InputMaybe<Scalars['BigInt']>;\n  hourlyClaimableBDV_lte?: InputMaybe<Scalars['BigInt']>;\n  hourlyClaimableBDV_not?: InputMaybe<Scalars['BigInt']>;\n  hourlyClaimableBDV_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  hourlyDepositedBDV?: InputMaybe<Scalars['BigInt']>;\n  hourlyDepositedBDV_gt?: InputMaybe<Scalars['BigInt']>;\n  hourlyDepositedBDV_gte?: InputMaybe<Scalars['BigInt']>;\n  hourlyDepositedBDV_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  hourlyDepositedBDV_lt?: InputMaybe<Scalars['BigInt']>;\n  hourlyDepositedBDV_lte?: InputMaybe<Scalars['BigInt']>;\n  hourlyDepositedBDV_not?: InputMaybe<Scalars['BigInt']>;\n  hourlyDepositedBDV_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  hourlyDepositedUSD?: InputMaybe<Scalars['BigDecimal']>;\n  hourlyDepositedUSD_gt?: InputMaybe<Scalars['BigDecimal']>;\n  hourlyDepositedUSD_gte?: InputMaybe<Scalars['BigDecimal']>;\n  hourlyDepositedUSD_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n  hourlyDepositedUSD_lt?: InputMaybe<Scalars['BigDecimal']>;\n  hourlyDepositedUSD_lte?: InputMaybe<Scalars['BigDecimal']>;\n  hourlyDepositedUSD_not?: InputMaybe<Scalars['BigDecimal']>;\n  hourlyDepositedUSD_not_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n  hourlyFarmers?: InputMaybe<Scalars['Int']>;\n  hourlyFarmers_gt?: InputMaybe<Scalars['Int']>;\n  hourlyFarmers_gte?: InputMaybe<Scalars['Int']>;\n  hourlyFarmers_in?: InputMaybe<Array<Scalars['Int']>>;\n  hourlyFarmers_lt?: InputMaybe<Scalars['Int']>;\n  hourlyFarmers_lte?: InputMaybe<Scalars['Int']>;\n  hourlyFarmers_not?: InputMaybe<Scalars['Int']>;\n  hourlyFarmers_not_in?: InputMaybe<Array<Scalars['Int']>>;\n  hourlyPlantableStalkDelta?: InputMaybe<Scalars['BigInt']>;\n  hourlyPlantableStalkDelta_gt?: InputMaybe<Scalars['BigInt']>;\n  hourlyPlantableStalkDelta_gte?: InputMaybe<Scalars['BigInt']>;\n  hourlyPlantableStalkDelta_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  hourlyPlantableStalkDelta_lt?: InputMaybe<Scalars['BigInt']>;\n  hourlyPlantableStalkDelta_lte?: InputMaybe<Scalars['BigInt']>;\n  hourlyPlantableStalkDelta_not?: InputMaybe<Scalars['BigInt']>;\n  hourlyPlantableStalkDelta_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  hourlyRootsDelta?: InputMaybe<Scalars['BigInt']>;\n  hourlyRootsDelta_gt?: InputMaybe<Scalars['BigInt']>;\n  hourlyRootsDelta_gte?: InputMaybe<Scalars['BigInt']>;\n  hourlyRootsDelta_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  hourlyRootsDelta_lt?: InputMaybe<Scalars['BigInt']>;\n  hourlyRootsDelta_lte?: InputMaybe<Scalars['BigInt']>;\n  hourlyRootsDelta_not?: InputMaybe<Scalars['BigInt']>;\n  hourlyRootsDelta_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  hourlySeedsDelta?: InputMaybe<Scalars['BigInt']>;\n  hourlySeedsDelta_gt?: InputMaybe<Scalars['BigInt']>;\n  hourlySeedsDelta_gte?: InputMaybe<Scalars['BigInt']>;\n  hourlySeedsDelta_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  hourlySeedsDelta_lt?: InputMaybe<Scalars['BigInt']>;\n  hourlySeedsDelta_lte?: InputMaybe<Scalars['BigInt']>;\n  hourlySeedsDelta_not?: InputMaybe<Scalars['BigInt']>;\n  hourlySeedsDelta_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  hourlyStalkDelta?: InputMaybe<Scalars['BigInt']>;\n  hourlyStalkDelta_gt?: InputMaybe<Scalars['BigInt']>;\n  hourlyStalkDelta_gte?: InputMaybe<Scalars['BigInt']>;\n  hourlyStalkDelta_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  hourlyStalkDelta_lt?: InputMaybe<Scalars['BigInt']>;\n  hourlyStalkDelta_lte?: InputMaybe<Scalars['BigInt']>;\n  hourlyStalkDelta_not?: InputMaybe<Scalars['BigInt']>;\n  hourlyStalkDelta_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  hourlyWithdrawnBDV?: InputMaybe<Scalars['BigInt']>;\n  hourlyWithdrawnBDV_gt?: InputMaybe<Scalars['BigInt']>;\n  hourlyWithdrawnBDV_gte?: InputMaybe<Scalars['BigInt']>;\n  hourlyWithdrawnBDV_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  hourlyWithdrawnBDV_lt?: InputMaybe<Scalars['BigInt']>;\n  hourlyWithdrawnBDV_lte?: InputMaybe<Scalars['BigInt']>;\n  hourlyWithdrawnBDV_not?: InputMaybe<Scalars['BigInt']>;\n  hourlyWithdrawnBDV_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  id?: InputMaybe<Scalars['ID']>;\n  id_gt?: InputMaybe<Scalars['ID']>;\n  id_gte?: InputMaybe<Scalars['ID']>;\n  id_in?: InputMaybe<Array<Scalars['ID']>>;\n  id_lt?: InputMaybe<Scalars['ID']>;\n  id_lte?: InputMaybe<Scalars['ID']>;\n  id_not?: InputMaybe<Scalars['ID']>;\n  id_not_in?: InputMaybe<Array<Scalars['ID']>>;\n  lastUpdated?: InputMaybe<Scalars['BigInt']>;\n  lastUpdated_gt?: InputMaybe<Scalars['BigInt']>;\n  lastUpdated_gte?: InputMaybe<Scalars['BigInt']>;\n  lastUpdated_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  lastUpdated_lt?: InputMaybe<Scalars['BigInt']>;\n  lastUpdated_lte?: InputMaybe<Scalars['BigInt']>;\n  lastUpdated_not?: InputMaybe<Scalars['BigInt']>;\n  lastUpdated_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  season?: InputMaybe<Scalars['Int']>;\n  season_gt?: InputMaybe<Scalars['Int']>;\n  season_gte?: InputMaybe<Scalars['Int']>;\n  season_in?: InputMaybe<Array<Scalars['Int']>>;\n  season_lt?: InputMaybe<Scalars['Int']>;\n  season_lte?: InputMaybe<Scalars['Int']>;\n  season_not?: InputMaybe<Scalars['Int']>;\n  season_not_in?: InputMaybe<Array<Scalars['Int']>>;\n  silo?: InputMaybe<Scalars['String']>;\n  silo_?: InputMaybe<Silo_Filter>;\n  silo_contains?: InputMaybe<Scalars['String']>;\n  silo_contains_nocase?: InputMaybe<Scalars['String']>;\n  silo_ends_with?: InputMaybe<Scalars['String']>;\n  silo_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  silo_gt?: InputMaybe<Scalars['String']>;\n  silo_gte?: InputMaybe<Scalars['String']>;\n  silo_in?: InputMaybe<Array<Scalars['String']>>;\n  silo_lt?: InputMaybe<Scalars['String']>;\n  silo_lte?: InputMaybe<Scalars['String']>;\n  silo_not?: InputMaybe<Scalars['String']>;\n  silo_not_contains?: InputMaybe<Scalars['String']>;\n  silo_not_contains_nocase?: InputMaybe<Scalars['String']>;\n  silo_not_ends_with?: InputMaybe<Scalars['String']>;\n  silo_not_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  silo_not_in?: InputMaybe<Array<Scalars['String']>>;\n  silo_not_starts_with?: InputMaybe<Scalars['String']>;\n  silo_not_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  silo_starts_with?: InputMaybe<Scalars['String']>;\n  silo_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  timestamp?: InputMaybe<Scalars['BigInt']>;\n  timestamp_gt?: InputMaybe<Scalars['BigInt']>;\n  timestamp_gte?: InputMaybe<Scalars['BigInt']>;\n  timestamp_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  timestamp_lt?: InputMaybe<Scalars['BigInt']>;\n  timestamp_lte?: InputMaybe<Scalars['BigInt']>;\n  timestamp_not?: InputMaybe<Scalars['BigInt']>;\n  timestamp_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  totalBeanMints?: InputMaybe<Scalars['BigInt']>;\n  totalBeanMints_gt?: InputMaybe<Scalars['BigInt']>;\n  totalBeanMints_gte?: InputMaybe<Scalars['BigInt']>;\n  totalBeanMints_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  totalBeanMints_lt?: InputMaybe<Scalars['BigInt']>;\n  totalBeanMints_lte?: InputMaybe<Scalars['BigInt']>;\n  totalBeanMints_not?: InputMaybe<Scalars['BigInt']>;\n  totalBeanMints_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  totalDepositedBDV?: InputMaybe<Scalars['BigInt']>;\n  totalDepositedBDV_gt?: InputMaybe<Scalars['BigInt']>;\n  totalDepositedBDV_gte?: InputMaybe<Scalars['BigInt']>;\n  totalDepositedBDV_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  totalDepositedBDV_lt?: InputMaybe<Scalars['BigInt']>;\n  totalDepositedBDV_lte?: InputMaybe<Scalars['BigInt']>;\n  totalDepositedBDV_not?: InputMaybe<Scalars['BigInt']>;\n  totalDepositedBDV_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  totalFarmers?: InputMaybe<Scalars['Int']>;\n  totalFarmers_gt?: InputMaybe<Scalars['Int']>;\n  totalFarmers_gte?: InputMaybe<Scalars['Int']>;\n  totalFarmers_in?: InputMaybe<Array<Scalars['Int']>>;\n  totalFarmers_lt?: InputMaybe<Scalars['Int']>;\n  totalFarmers_lte?: InputMaybe<Scalars['Int']>;\n  totalFarmers_not?: InputMaybe<Scalars['Int']>;\n  totalFarmers_not_in?: InputMaybe<Array<Scalars['Int']>>;\n  totalPlantableStalk?: InputMaybe<Scalars['BigInt']>;\n  totalPlantableStalk_gt?: InputMaybe<Scalars['BigInt']>;\n  totalPlantableStalk_gte?: InputMaybe<Scalars['BigInt']>;\n  totalPlantableStalk_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  totalPlantableStalk_lt?: InputMaybe<Scalars['BigInt']>;\n  totalPlantableStalk_lte?: InputMaybe<Scalars['BigInt']>;\n  totalPlantableStalk_not?: InputMaybe<Scalars['BigInt']>;\n  totalPlantableStalk_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  totalRoots?: InputMaybe<Scalars['BigInt']>;\n  totalRoots_gt?: InputMaybe<Scalars['BigInt']>;\n  totalRoots_gte?: InputMaybe<Scalars['BigInt']>;\n  totalRoots_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  totalRoots_lt?: InputMaybe<Scalars['BigInt']>;\n  totalRoots_lte?: InputMaybe<Scalars['BigInt']>;\n  totalRoots_not?: InputMaybe<Scalars['BigInt']>;\n  totalRoots_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  totalSeeds?: InputMaybe<Scalars['BigInt']>;\n  totalSeeds_gt?: InputMaybe<Scalars['BigInt']>;\n  totalSeeds_gte?: InputMaybe<Scalars['BigInt']>;\n  totalSeeds_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  totalSeeds_lt?: InputMaybe<Scalars['BigInt']>;\n  totalSeeds_lte?: InputMaybe<Scalars['BigInt']>;\n  totalSeeds_not?: InputMaybe<Scalars['BigInt']>;\n  totalSeeds_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  totalStalk?: InputMaybe<Scalars['BigInt']>;\n  totalStalk_gt?: InputMaybe<Scalars['BigInt']>;\n  totalStalk_gte?: InputMaybe<Scalars['BigInt']>;\n  totalStalk_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  totalStalk_lt?: InputMaybe<Scalars['BigInt']>;\n  totalStalk_lte?: InputMaybe<Scalars['BigInt']>;\n  totalStalk_not?: InputMaybe<Scalars['BigInt']>;\n  totalStalk_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  totalValueLockedUSD?: InputMaybe<Scalars['BigDecimal']>;\n  totalValueLockedUSD_gt?: InputMaybe<Scalars['BigDecimal']>;\n  totalValueLockedUSD_gte?: InputMaybe<Scalars['BigDecimal']>;\n  totalValueLockedUSD_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n  totalValueLockedUSD_lt?: InputMaybe<Scalars['BigDecimal']>;\n  totalValueLockedUSD_lte?: InputMaybe<Scalars['BigDecimal']>;\n  totalValueLockedUSD_not?: InputMaybe<Scalars['BigDecimal']>;\n  totalValueLockedUSD_not_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n};\n\nexport enum SiloHourlySnapshot_OrderBy {\n  BeansPerStalk = 'beansPerStalk',\n  BlockNumber = 'blockNumber',\n  CumulativeDepositedUsd = 'cumulativeDepositedUSD',\n  HourlyBeanMints = 'hourlyBeanMints',\n  HourlyClaimableBdv = 'hourlyClaimableBDV',\n  HourlyDepositedBdv = 'hourlyDepositedBDV',\n  HourlyDepositedUsd = 'hourlyDepositedUSD',\n  HourlyFarmers = 'hourlyFarmers',\n  HourlyPlantableStalkDelta = 'hourlyPlantableStalkDelta',\n  HourlyRootsDelta = 'hourlyRootsDelta',\n  HourlySeedsDelta = 'hourlySeedsDelta',\n  HourlyStalkDelta = 'hourlyStalkDelta',\n  HourlyWithdrawnBdv = 'hourlyWithdrawnBDV',\n  Id = 'id',\n  LastUpdated = 'lastUpdated',\n  Season = 'season',\n  Silo = 'silo',\n  Timestamp = 'timestamp',\n  TotalBeanMints = 'totalBeanMints',\n  TotalDepositedBdv = 'totalDepositedBDV',\n  TotalFarmers = 'totalFarmers',\n  TotalPlantableStalk = 'totalPlantableStalk',\n  TotalRoots = 'totalRoots',\n  TotalSeeds = 'totalSeeds',\n  TotalStalk = 'totalStalk',\n  TotalValueLockedUsd = 'totalValueLockedUSD'\n}\n\nexport type SiloWithdraw = {\n  __typename?: 'SiloWithdraw';\n  amount: Scalars['BigInt'];\n  claimableSeason: Scalars['Int'];\n  claimed: Scalars['Boolean'];\n  createdAt: Scalars['BigInt'];\n  farmer: Farmer;\n  hash: Scalars['String'];\n  /** Account - Deposit Token - Current Season */\n  id: Scalars['ID'];\n  token: Scalars['String'];\n  withdrawSeason: Scalars['Int'];\n};\n\nexport type SiloWithdraw_Filter = {\n  /** Filter for the block changed event. */\n  _change_block?: InputMaybe<BlockChangedFilter>;\n  amount?: InputMaybe<Scalars['BigInt']>;\n  amount_gt?: InputMaybe<Scalars['BigInt']>;\n  amount_gte?: InputMaybe<Scalars['BigInt']>;\n  amount_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  amount_lt?: InputMaybe<Scalars['BigInt']>;\n  amount_lte?: InputMaybe<Scalars['BigInt']>;\n  amount_not?: InputMaybe<Scalars['BigInt']>;\n  amount_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  claimableSeason?: InputMaybe<Scalars['Int']>;\n  claimableSeason_gt?: InputMaybe<Scalars['Int']>;\n  claimableSeason_gte?: InputMaybe<Scalars['Int']>;\n  claimableSeason_in?: InputMaybe<Array<Scalars['Int']>>;\n  claimableSeason_lt?: InputMaybe<Scalars['Int']>;\n  claimableSeason_lte?: InputMaybe<Scalars['Int']>;\n  claimableSeason_not?: InputMaybe<Scalars['Int']>;\n  claimableSeason_not_in?: InputMaybe<Array<Scalars['Int']>>;\n  claimed?: InputMaybe<Scalars['Boolean']>;\n  claimed_in?: InputMaybe<Array<Scalars['Boolean']>>;\n  claimed_not?: InputMaybe<Scalars['Boolean']>;\n  claimed_not_in?: InputMaybe<Array<Scalars['Boolean']>>;\n  createdAt?: InputMaybe<Scalars['BigInt']>;\n  createdAt_gt?: InputMaybe<Scalars['BigInt']>;\n  createdAt_gte?: InputMaybe<Scalars['BigInt']>;\n  createdAt_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  createdAt_lt?: InputMaybe<Scalars['BigInt']>;\n  createdAt_lte?: InputMaybe<Scalars['BigInt']>;\n  createdAt_not?: InputMaybe<Scalars['BigInt']>;\n  createdAt_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  farmer?: InputMaybe<Scalars['String']>;\n  farmer_?: InputMaybe<Farmer_Filter>;\n  farmer_contains?: InputMaybe<Scalars['String']>;\n  farmer_contains_nocase?: InputMaybe<Scalars['String']>;\n  farmer_ends_with?: InputMaybe<Scalars['String']>;\n  farmer_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  farmer_gt?: InputMaybe<Scalars['String']>;\n  farmer_gte?: InputMaybe<Scalars['String']>;\n  farmer_in?: InputMaybe<Array<Scalars['String']>>;\n  farmer_lt?: InputMaybe<Scalars['String']>;\n  farmer_lte?: InputMaybe<Scalars['String']>;\n  farmer_not?: InputMaybe<Scalars['String']>;\n  farmer_not_contains?: InputMaybe<Scalars['String']>;\n  farmer_not_contains_nocase?: InputMaybe<Scalars['String']>;\n  farmer_not_ends_with?: InputMaybe<Scalars['String']>;\n  farmer_not_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  farmer_not_in?: InputMaybe<Array<Scalars['String']>>;\n  farmer_not_starts_with?: InputMaybe<Scalars['String']>;\n  farmer_not_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  farmer_starts_with?: InputMaybe<Scalars['String']>;\n  farmer_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  hash?: InputMaybe<Scalars['String']>;\n  hash_contains?: InputMaybe<Scalars['String']>;\n  hash_contains_nocase?: InputMaybe<Scalars['String']>;\n  hash_ends_with?: InputMaybe<Scalars['String']>;\n  hash_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  hash_gt?: InputMaybe<Scalars['String']>;\n  hash_gte?: InputMaybe<Scalars['String']>;\n  hash_in?: InputMaybe<Array<Scalars['String']>>;\n  hash_lt?: InputMaybe<Scalars['String']>;\n  hash_lte?: InputMaybe<Scalars['String']>;\n  hash_not?: InputMaybe<Scalars['String']>;\n  hash_not_contains?: InputMaybe<Scalars['String']>;\n  hash_not_contains_nocase?: InputMaybe<Scalars['String']>;\n  hash_not_ends_with?: InputMaybe<Scalars['String']>;\n  hash_not_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  hash_not_in?: InputMaybe<Array<Scalars['String']>>;\n  hash_not_starts_with?: InputMaybe<Scalars['String']>;\n  hash_not_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  hash_starts_with?: InputMaybe<Scalars['String']>;\n  hash_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  id?: InputMaybe<Scalars['ID']>;\n  id_gt?: InputMaybe<Scalars['ID']>;\n  id_gte?: InputMaybe<Scalars['ID']>;\n  id_in?: InputMaybe<Array<Scalars['ID']>>;\n  id_lt?: InputMaybe<Scalars['ID']>;\n  id_lte?: InputMaybe<Scalars['ID']>;\n  id_not?: InputMaybe<Scalars['ID']>;\n  id_not_in?: InputMaybe<Array<Scalars['ID']>>;\n  token?: InputMaybe<Scalars['String']>;\n  token_contains?: InputMaybe<Scalars['String']>;\n  token_contains_nocase?: InputMaybe<Scalars['String']>;\n  token_ends_with?: InputMaybe<Scalars['String']>;\n  token_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  token_gt?: InputMaybe<Scalars['String']>;\n  token_gte?: InputMaybe<Scalars['String']>;\n  token_in?: InputMaybe<Array<Scalars['String']>>;\n  token_lt?: InputMaybe<Scalars['String']>;\n  token_lte?: InputMaybe<Scalars['String']>;\n  token_not?: InputMaybe<Scalars['String']>;\n  token_not_contains?: InputMaybe<Scalars['String']>;\n  token_not_contains_nocase?: InputMaybe<Scalars['String']>;\n  token_not_ends_with?: InputMaybe<Scalars['String']>;\n  token_not_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  token_not_in?: InputMaybe<Array<Scalars['String']>>;\n  token_not_starts_with?: InputMaybe<Scalars['String']>;\n  token_not_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  token_starts_with?: InputMaybe<Scalars['String']>;\n  token_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  withdrawSeason?: InputMaybe<Scalars['Int']>;\n  withdrawSeason_gt?: InputMaybe<Scalars['Int']>;\n  withdrawSeason_gte?: InputMaybe<Scalars['Int']>;\n  withdrawSeason_in?: InputMaybe<Array<Scalars['Int']>>;\n  withdrawSeason_lt?: InputMaybe<Scalars['Int']>;\n  withdrawSeason_lte?: InputMaybe<Scalars['Int']>;\n  withdrawSeason_not?: InputMaybe<Scalars['Int']>;\n  withdrawSeason_not_in?: InputMaybe<Array<Scalars['Int']>>;\n};\n\nexport enum SiloWithdraw_OrderBy {\n  Amount = 'amount',\n  ClaimableSeason = 'claimableSeason',\n  Claimed = 'claimed',\n  CreatedAt = 'createdAt',\n  Farmer = 'farmer',\n  Hash = 'hash',\n  Id = 'id',\n  Token = 'token',\n  WithdrawSeason = 'withdrawSeason'\n}\n\nexport type SiloYield = {\n  __typename?: 'SiloYield';\n  beansPerSeasonEMA: Scalars['BigDecimal'];\n  beta: Scalars['BigDecimal'];\n  fourSeedBeanAPY: Scalars['BigDecimal'];\n  fourSeedStalkAPY: Scalars['BigDecimal'];\n  /** Season of data points */\n  id: Scalars['ID'];\n  season: Scalars['Int'];\n  timestamp: Scalars['BigInt'];\n  twoSeedBeanAPY: Scalars['BigDecimal'];\n  twoSeedStalkAPY: Scalars['BigDecimal'];\n  u: Scalars['Int'];\n};\n\nexport type SiloYield_Filter = {\n  /** Filter for the block changed event. */\n  _change_block?: InputMaybe<BlockChangedFilter>;\n  beansPerSeasonEMA?: InputMaybe<Scalars['BigDecimal']>;\n  beansPerSeasonEMA_gt?: InputMaybe<Scalars['BigDecimal']>;\n  beansPerSeasonEMA_gte?: InputMaybe<Scalars['BigDecimal']>;\n  beansPerSeasonEMA_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n  beansPerSeasonEMA_lt?: InputMaybe<Scalars['BigDecimal']>;\n  beansPerSeasonEMA_lte?: InputMaybe<Scalars['BigDecimal']>;\n  beansPerSeasonEMA_not?: InputMaybe<Scalars['BigDecimal']>;\n  beansPerSeasonEMA_not_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n  beta?: InputMaybe<Scalars['BigDecimal']>;\n  beta_gt?: InputMaybe<Scalars['BigDecimal']>;\n  beta_gte?: InputMaybe<Scalars['BigDecimal']>;\n  beta_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n  beta_lt?: InputMaybe<Scalars['BigDecimal']>;\n  beta_lte?: InputMaybe<Scalars['BigDecimal']>;\n  beta_not?: InputMaybe<Scalars['BigDecimal']>;\n  beta_not_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n  fourSeedBeanAPY?: InputMaybe<Scalars['BigDecimal']>;\n  fourSeedBeanAPY_gt?: InputMaybe<Scalars['BigDecimal']>;\n  fourSeedBeanAPY_gte?: InputMaybe<Scalars['BigDecimal']>;\n  fourSeedBeanAPY_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n  fourSeedBeanAPY_lt?: InputMaybe<Scalars['BigDecimal']>;\n  fourSeedBeanAPY_lte?: InputMaybe<Scalars['BigDecimal']>;\n  fourSeedBeanAPY_not?: InputMaybe<Scalars['BigDecimal']>;\n  fourSeedBeanAPY_not_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n  fourSeedStalkAPY?: InputMaybe<Scalars['BigDecimal']>;\n  fourSeedStalkAPY_gt?: InputMaybe<Scalars['BigDecimal']>;\n  fourSeedStalkAPY_gte?: InputMaybe<Scalars['BigDecimal']>;\n  fourSeedStalkAPY_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n  fourSeedStalkAPY_lt?: InputMaybe<Scalars['BigDecimal']>;\n  fourSeedStalkAPY_lte?: InputMaybe<Scalars['BigDecimal']>;\n  fourSeedStalkAPY_not?: InputMaybe<Scalars['BigDecimal']>;\n  fourSeedStalkAPY_not_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n  id?: InputMaybe<Scalars['ID']>;\n  id_gt?: InputMaybe<Scalars['ID']>;\n  id_gte?: InputMaybe<Scalars['ID']>;\n  id_in?: InputMaybe<Array<Scalars['ID']>>;\n  id_lt?: InputMaybe<Scalars['ID']>;\n  id_lte?: InputMaybe<Scalars['ID']>;\n  id_not?: InputMaybe<Scalars['ID']>;\n  id_not_in?: InputMaybe<Array<Scalars['ID']>>;\n  season?: InputMaybe<Scalars['Int']>;\n  season_gt?: InputMaybe<Scalars['Int']>;\n  season_gte?: InputMaybe<Scalars['Int']>;\n  season_in?: InputMaybe<Array<Scalars['Int']>>;\n  season_lt?: InputMaybe<Scalars['Int']>;\n  season_lte?: InputMaybe<Scalars['Int']>;\n  season_not?: InputMaybe<Scalars['Int']>;\n  season_not_in?: InputMaybe<Array<Scalars['Int']>>;\n  timestamp?: InputMaybe<Scalars['BigInt']>;\n  timestamp_gt?: InputMaybe<Scalars['BigInt']>;\n  timestamp_gte?: InputMaybe<Scalars['BigInt']>;\n  timestamp_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  timestamp_lt?: InputMaybe<Scalars['BigInt']>;\n  timestamp_lte?: InputMaybe<Scalars['BigInt']>;\n  timestamp_not?: InputMaybe<Scalars['BigInt']>;\n  timestamp_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  twoSeedBeanAPY?: InputMaybe<Scalars['BigDecimal']>;\n  twoSeedBeanAPY_gt?: InputMaybe<Scalars['BigDecimal']>;\n  twoSeedBeanAPY_gte?: InputMaybe<Scalars['BigDecimal']>;\n  twoSeedBeanAPY_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n  twoSeedBeanAPY_lt?: InputMaybe<Scalars['BigDecimal']>;\n  twoSeedBeanAPY_lte?: InputMaybe<Scalars['BigDecimal']>;\n  twoSeedBeanAPY_not?: InputMaybe<Scalars['BigDecimal']>;\n  twoSeedBeanAPY_not_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n  twoSeedStalkAPY?: InputMaybe<Scalars['BigDecimal']>;\n  twoSeedStalkAPY_gt?: InputMaybe<Scalars['BigDecimal']>;\n  twoSeedStalkAPY_gte?: InputMaybe<Scalars['BigDecimal']>;\n  twoSeedStalkAPY_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n  twoSeedStalkAPY_lt?: InputMaybe<Scalars['BigDecimal']>;\n  twoSeedStalkAPY_lte?: InputMaybe<Scalars['BigDecimal']>;\n  twoSeedStalkAPY_not?: InputMaybe<Scalars['BigDecimal']>;\n  twoSeedStalkAPY_not_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n  u?: InputMaybe<Scalars['Int']>;\n  u_gt?: InputMaybe<Scalars['Int']>;\n  u_gte?: InputMaybe<Scalars['Int']>;\n  u_in?: InputMaybe<Array<Scalars['Int']>>;\n  u_lt?: InputMaybe<Scalars['Int']>;\n  u_lte?: InputMaybe<Scalars['Int']>;\n  u_not?: InputMaybe<Scalars['Int']>;\n  u_not_in?: InputMaybe<Array<Scalars['Int']>>;\n};\n\nexport enum SiloYield_OrderBy {\n  BeansPerSeasonEma = 'beansPerSeasonEMA',\n  Beta = 'beta',\n  FourSeedBeanApy = 'fourSeedBeanAPY',\n  FourSeedStalkApy = 'fourSeedStalkAPY',\n  Id = 'id',\n  Season = 'season',\n  Timestamp = 'timestamp',\n  TwoSeedBeanApy = 'twoSeedBeanAPY',\n  TwoSeedStalkApy = 'twoSeedStalkAPY',\n  U = 'u'\n}\n\nexport type Silo_Filter = {\n  /** Filter for the block changed event. */\n  _change_block?: InputMaybe<BlockChangedFilter>;\n  assets_?: InputMaybe<SiloAsset_Filter>;\n  beanstalk?: InputMaybe<Scalars['String']>;\n  beanstalk_?: InputMaybe<Beanstalk_Filter>;\n  beanstalk_contains?: InputMaybe<Scalars['String']>;\n  beanstalk_contains_nocase?: InputMaybe<Scalars['String']>;\n  beanstalk_ends_with?: InputMaybe<Scalars['String']>;\n  beanstalk_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  beanstalk_gt?: InputMaybe<Scalars['String']>;\n  beanstalk_gte?: InputMaybe<Scalars['String']>;\n  beanstalk_in?: InputMaybe<Array<Scalars['String']>>;\n  beanstalk_lt?: InputMaybe<Scalars['String']>;\n  beanstalk_lte?: InputMaybe<Scalars['String']>;\n  beanstalk_not?: InputMaybe<Scalars['String']>;\n  beanstalk_not_contains?: InputMaybe<Scalars['String']>;\n  beanstalk_not_contains_nocase?: InputMaybe<Scalars['String']>;\n  beanstalk_not_ends_with?: InputMaybe<Scalars['String']>;\n  beanstalk_not_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  beanstalk_not_in?: InputMaybe<Array<Scalars['String']>>;\n  beanstalk_not_starts_with?: InputMaybe<Scalars['String']>;\n  beanstalk_not_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  beanstalk_starts_with?: InputMaybe<Scalars['String']>;\n  beanstalk_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  dailySnapshots_?: InputMaybe<SiloDailySnapshot_Filter>;\n  farmer?: InputMaybe<Scalars['String']>;\n  farmer_?: InputMaybe<Farmer_Filter>;\n  farmer_contains?: InputMaybe<Scalars['String']>;\n  farmer_contains_nocase?: InputMaybe<Scalars['String']>;\n  farmer_ends_with?: InputMaybe<Scalars['String']>;\n  farmer_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  farmer_gt?: InputMaybe<Scalars['String']>;\n  farmer_gte?: InputMaybe<Scalars['String']>;\n  farmer_in?: InputMaybe<Array<Scalars['String']>>;\n  farmer_lt?: InputMaybe<Scalars['String']>;\n  farmer_lte?: InputMaybe<Scalars['String']>;\n  farmer_not?: InputMaybe<Scalars['String']>;\n  farmer_not_contains?: InputMaybe<Scalars['String']>;\n  farmer_not_contains_nocase?: InputMaybe<Scalars['String']>;\n  farmer_not_ends_with?: InputMaybe<Scalars['String']>;\n  farmer_not_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  farmer_not_in?: InputMaybe<Array<Scalars['String']>>;\n  farmer_not_starts_with?: InputMaybe<Scalars['String']>;\n  farmer_not_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  farmer_starts_with?: InputMaybe<Scalars['String']>;\n  farmer_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  hourlySnapshots_?: InputMaybe<SiloHourlySnapshot_Filter>;\n  id?: InputMaybe<Scalars['ID']>;\n  id_gt?: InputMaybe<Scalars['ID']>;\n  id_gte?: InputMaybe<Scalars['ID']>;\n  id_in?: InputMaybe<Array<Scalars['ID']>>;\n  id_lt?: InputMaybe<Scalars['ID']>;\n  id_lte?: InputMaybe<Scalars['ID']>;\n  id_not?: InputMaybe<Scalars['ID']>;\n  id_not_in?: InputMaybe<Array<Scalars['ID']>>;\n  totalBeanMints?: InputMaybe<Scalars['BigInt']>;\n  totalBeanMints_gt?: InputMaybe<Scalars['BigInt']>;\n  totalBeanMints_gte?: InputMaybe<Scalars['BigInt']>;\n  totalBeanMints_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  totalBeanMints_lt?: InputMaybe<Scalars['BigInt']>;\n  totalBeanMints_lte?: InputMaybe<Scalars['BigInt']>;\n  totalBeanMints_not?: InputMaybe<Scalars['BigInt']>;\n  totalBeanMints_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  totalDepositedBDV?: InputMaybe<Scalars['BigInt']>;\n  totalDepositedBDV_gt?: InputMaybe<Scalars['BigInt']>;\n  totalDepositedBDV_gte?: InputMaybe<Scalars['BigInt']>;\n  totalDepositedBDV_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  totalDepositedBDV_lt?: InputMaybe<Scalars['BigInt']>;\n  totalDepositedBDV_lte?: InputMaybe<Scalars['BigInt']>;\n  totalDepositedBDV_not?: InputMaybe<Scalars['BigInt']>;\n  totalDepositedBDV_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  totalFarmers?: InputMaybe<Scalars['Int']>;\n  totalFarmers_gt?: InputMaybe<Scalars['Int']>;\n  totalFarmers_gte?: InputMaybe<Scalars['Int']>;\n  totalFarmers_in?: InputMaybe<Array<Scalars['Int']>>;\n  totalFarmers_lt?: InputMaybe<Scalars['Int']>;\n  totalFarmers_lte?: InputMaybe<Scalars['Int']>;\n  totalFarmers_not?: InputMaybe<Scalars['Int']>;\n  totalFarmers_not_in?: InputMaybe<Array<Scalars['Int']>>;\n  totalPlantableStalk?: InputMaybe<Scalars['BigInt']>;\n  totalPlantableStalk_gt?: InputMaybe<Scalars['BigInt']>;\n  totalPlantableStalk_gte?: InputMaybe<Scalars['BigInt']>;\n  totalPlantableStalk_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  totalPlantableStalk_lt?: InputMaybe<Scalars['BigInt']>;\n  totalPlantableStalk_lte?: InputMaybe<Scalars['BigInt']>;\n  totalPlantableStalk_not?: InputMaybe<Scalars['BigInt']>;\n  totalPlantableStalk_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  totalRoots?: InputMaybe<Scalars['BigInt']>;\n  totalRoots_gt?: InputMaybe<Scalars['BigInt']>;\n  totalRoots_gte?: InputMaybe<Scalars['BigInt']>;\n  totalRoots_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  totalRoots_lt?: InputMaybe<Scalars['BigInt']>;\n  totalRoots_lte?: InputMaybe<Scalars['BigInt']>;\n  totalRoots_not?: InputMaybe<Scalars['BigInt']>;\n  totalRoots_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  totalSeeds?: InputMaybe<Scalars['BigInt']>;\n  totalSeeds_gt?: InputMaybe<Scalars['BigInt']>;\n  totalSeeds_gte?: InputMaybe<Scalars['BigInt']>;\n  totalSeeds_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  totalSeeds_lt?: InputMaybe<Scalars['BigInt']>;\n  totalSeeds_lte?: InputMaybe<Scalars['BigInt']>;\n  totalSeeds_not?: InputMaybe<Scalars['BigInt']>;\n  totalSeeds_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  totalStalk?: InputMaybe<Scalars['BigInt']>;\n  totalStalk_gt?: InputMaybe<Scalars['BigInt']>;\n  totalStalk_gte?: InputMaybe<Scalars['BigInt']>;\n  totalStalk_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  totalStalk_lt?: InputMaybe<Scalars['BigInt']>;\n  totalStalk_lte?: InputMaybe<Scalars['BigInt']>;\n  totalStalk_not?: InputMaybe<Scalars['BigInt']>;\n  totalStalk_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  totalValueLockedUSD?: InputMaybe<Scalars['BigDecimal']>;\n  totalValueLockedUSD_gt?: InputMaybe<Scalars['BigDecimal']>;\n  totalValueLockedUSD_gte?: InputMaybe<Scalars['BigDecimal']>;\n  totalValueLockedUSD_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n  totalValueLockedUSD_lt?: InputMaybe<Scalars['BigDecimal']>;\n  totalValueLockedUSD_lte?: InputMaybe<Scalars['BigDecimal']>;\n  totalValueLockedUSD_not?: InputMaybe<Scalars['BigDecimal']>;\n  totalValueLockedUSD_not_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n  whitelistedTokens?: InputMaybe<Array<Scalars['String']>>;\n  whitelistedTokens_contains?: InputMaybe<Array<Scalars['String']>>;\n  whitelistedTokens_contains_nocase?: InputMaybe<Array<Scalars['String']>>;\n  whitelistedTokens_not?: InputMaybe<Array<Scalars['String']>>;\n  whitelistedTokens_not_contains?: InputMaybe<Array<Scalars['String']>>;\n  whitelistedTokens_not_contains_nocase?: InputMaybe<Array<Scalars['String']>>;\n};\n\nexport enum Silo_OrderBy {\n  Assets = 'assets',\n  Beanstalk = 'beanstalk',\n  DailySnapshots = 'dailySnapshots',\n  Farmer = 'farmer',\n  HourlySnapshots = 'hourlySnapshots',\n  Id = 'id',\n  TotalBeanMints = 'totalBeanMints',\n  TotalDepositedBdv = 'totalDepositedBDV',\n  TotalFarmers = 'totalFarmers',\n  TotalPlantableStalk = 'totalPlantableStalk',\n  TotalRoots = 'totalRoots',\n  TotalSeeds = 'totalSeeds',\n  TotalStalk = 'totalStalk',\n  TotalValueLockedUsd = 'totalValueLockedUSD',\n  WhitelistedTokens = 'whitelistedTokens'\n}\n\nexport type StalkChange = SiloEvent & {\n  __typename?: 'StalkChange';\n  /**  Account removing deposit */\n  account: Scalars['String'];\n  /**  Block number of this event  */\n  blockNumber: Scalars['BigInt'];\n  /**  Token removed */\n  delta: Scalars['BigInt'];\n  /**  Transaction hash of the transaction that emitted this event  */\n  hash: Scalars['String'];\n  /** stalkChange-{ Transaction hash }-{ Log index } */\n  id: Scalars['ID'];\n  /**  Event log index. For transactions that don't emit event, create arbitrary index starting from 0  */\n  logIndex: Scalars['Int'];\n  /**  The protocol this transaction belongs to  */\n  protocol: Beanstalk;\n  /**  Season when the change happened  */\n  season: Scalars['Int'];\n  /**  Timestamp of this event  */\n  timestamp: Scalars['BigInt'];\n};\n\nexport type StalkChange_Filter = {\n  /** Filter for the block changed event. */\n  _change_block?: InputMaybe<BlockChangedFilter>;\n  account?: InputMaybe<Scalars['String']>;\n  account_contains?: InputMaybe<Scalars['String']>;\n  account_contains_nocase?: InputMaybe<Scalars['String']>;\n  account_ends_with?: InputMaybe<Scalars['String']>;\n  account_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  account_gt?: InputMaybe<Scalars['String']>;\n  account_gte?: InputMaybe<Scalars['String']>;\n  account_in?: InputMaybe<Array<Scalars['String']>>;\n  account_lt?: InputMaybe<Scalars['String']>;\n  account_lte?: InputMaybe<Scalars['String']>;\n  account_not?: InputMaybe<Scalars['String']>;\n  account_not_contains?: InputMaybe<Scalars['String']>;\n  account_not_contains_nocase?: InputMaybe<Scalars['String']>;\n  account_not_ends_with?: InputMaybe<Scalars['String']>;\n  account_not_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  account_not_in?: InputMaybe<Array<Scalars['String']>>;\n  account_not_starts_with?: InputMaybe<Scalars['String']>;\n  account_not_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  account_starts_with?: InputMaybe<Scalars['String']>;\n  account_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  blockNumber?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_gt?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_gte?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  blockNumber_lt?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_lte?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_not?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  delta?: InputMaybe<Scalars['BigInt']>;\n  delta_gt?: InputMaybe<Scalars['BigInt']>;\n  delta_gte?: InputMaybe<Scalars['BigInt']>;\n  delta_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  delta_lt?: InputMaybe<Scalars['BigInt']>;\n  delta_lte?: InputMaybe<Scalars['BigInt']>;\n  delta_not?: InputMaybe<Scalars['BigInt']>;\n  delta_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  hash?: InputMaybe<Scalars['String']>;\n  hash_contains?: InputMaybe<Scalars['String']>;\n  hash_contains_nocase?: InputMaybe<Scalars['String']>;\n  hash_ends_with?: InputMaybe<Scalars['String']>;\n  hash_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  hash_gt?: InputMaybe<Scalars['String']>;\n  hash_gte?: InputMaybe<Scalars['String']>;\n  hash_in?: InputMaybe<Array<Scalars['String']>>;\n  hash_lt?: InputMaybe<Scalars['String']>;\n  hash_lte?: InputMaybe<Scalars['String']>;\n  hash_not?: InputMaybe<Scalars['String']>;\n  hash_not_contains?: InputMaybe<Scalars['String']>;\n  hash_not_contains_nocase?: InputMaybe<Scalars['String']>;\n  hash_not_ends_with?: InputMaybe<Scalars['String']>;\n  hash_not_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  hash_not_in?: InputMaybe<Array<Scalars['String']>>;\n  hash_not_starts_with?: InputMaybe<Scalars['String']>;\n  hash_not_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  hash_starts_with?: InputMaybe<Scalars['String']>;\n  hash_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  id?: InputMaybe<Scalars['ID']>;\n  id_gt?: InputMaybe<Scalars['ID']>;\n  id_gte?: InputMaybe<Scalars['ID']>;\n  id_in?: InputMaybe<Array<Scalars['ID']>>;\n  id_lt?: InputMaybe<Scalars['ID']>;\n  id_lte?: InputMaybe<Scalars['ID']>;\n  id_not?: InputMaybe<Scalars['ID']>;\n  id_not_in?: InputMaybe<Array<Scalars['ID']>>;\n  logIndex?: InputMaybe<Scalars['Int']>;\n  logIndex_gt?: InputMaybe<Scalars['Int']>;\n  logIndex_gte?: InputMaybe<Scalars['Int']>;\n  logIndex_in?: InputMaybe<Array<Scalars['Int']>>;\n  logIndex_lt?: InputMaybe<Scalars['Int']>;\n  logIndex_lte?: InputMaybe<Scalars['Int']>;\n  logIndex_not?: InputMaybe<Scalars['Int']>;\n  logIndex_not_in?: InputMaybe<Array<Scalars['Int']>>;\n  protocol?: InputMaybe<Scalars['String']>;\n  protocol_?: InputMaybe<Beanstalk_Filter>;\n  protocol_contains?: InputMaybe<Scalars['String']>;\n  protocol_contains_nocase?: InputMaybe<Scalars['String']>;\n  protocol_ends_with?: InputMaybe<Scalars['String']>;\n  protocol_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  protocol_gt?: InputMaybe<Scalars['String']>;\n  protocol_gte?: InputMaybe<Scalars['String']>;\n  protocol_in?: InputMaybe<Array<Scalars['String']>>;\n  protocol_lt?: InputMaybe<Scalars['String']>;\n  protocol_lte?: InputMaybe<Scalars['String']>;\n  protocol_not?: InputMaybe<Scalars['String']>;\n  protocol_not_contains?: InputMaybe<Scalars['String']>;\n  protocol_not_contains_nocase?: InputMaybe<Scalars['String']>;\n  protocol_not_ends_with?: InputMaybe<Scalars['String']>;\n  protocol_not_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  protocol_not_in?: InputMaybe<Array<Scalars['String']>>;\n  protocol_not_starts_with?: InputMaybe<Scalars['String']>;\n  protocol_not_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  protocol_starts_with?: InputMaybe<Scalars['String']>;\n  protocol_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  season?: InputMaybe<Scalars['Int']>;\n  season_gt?: InputMaybe<Scalars['Int']>;\n  season_gte?: InputMaybe<Scalars['Int']>;\n  season_in?: InputMaybe<Array<Scalars['Int']>>;\n  season_lt?: InputMaybe<Scalars['Int']>;\n  season_lte?: InputMaybe<Scalars['Int']>;\n  season_not?: InputMaybe<Scalars['Int']>;\n  season_not_in?: InputMaybe<Array<Scalars['Int']>>;\n  timestamp?: InputMaybe<Scalars['BigInt']>;\n  timestamp_gt?: InputMaybe<Scalars['BigInt']>;\n  timestamp_gte?: InputMaybe<Scalars['BigInt']>;\n  timestamp_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  timestamp_lt?: InputMaybe<Scalars['BigInt']>;\n  timestamp_lte?: InputMaybe<Scalars['BigInt']>;\n  timestamp_not?: InputMaybe<Scalars['BigInt']>;\n  timestamp_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n};\n\nexport enum StalkChange_OrderBy {\n  Account = 'account',\n  BlockNumber = 'blockNumber',\n  Delta = 'delta',\n  Hash = 'hash',\n  Id = 'id',\n  LogIndex = 'logIndex',\n  Protocol = 'protocol',\n  Season = 'season',\n  Timestamp = 'timestamp'\n}\n\nexport type Subscription = {\n  __typename?: 'Subscription';\n  /** Access to subgraph metadata */\n  _meta?: Maybe<_Meta_>;\n  addDeposit?: Maybe<AddDeposit>;\n  addDeposits: Array<AddDeposit>;\n  beanstalk?: Maybe<Beanstalk>;\n  beanstalks: Array<Beanstalk>;\n  chop?: Maybe<Chop>;\n  chops: Array<Chop>;\n  dewhitelistToken?: Maybe<DewhitelistToken>;\n  dewhitelistTokens: Array<DewhitelistToken>;\n  event?: Maybe<Event>;\n  events: Array<Event>;\n  farmer?: Maybe<Farmer>;\n  farmers: Array<Farmer>;\n  fertilizer?: Maybe<Fertilizer>;\n  fertilizerBalance?: Maybe<FertilizerBalance>;\n  fertilizerBalances: Array<FertilizerBalance>;\n  fertilizerToken?: Maybe<FertilizerToken>;\n  fertilizerTokens: Array<FertilizerToken>;\n  fertilizers: Array<Fertilizer>;\n  field?: Maybe<Field>;\n  fieldDailySnapshot?: Maybe<FieldDailySnapshot>;\n  fieldDailySnapshots: Array<FieldDailySnapshot>;\n  fieldEvent?: Maybe<FieldEvent>;\n  fieldEvents: Array<FieldEvent>;\n  fieldHourlySnapshot?: Maybe<FieldHourlySnapshot>;\n  fieldHourlySnapshots: Array<FieldHourlySnapshot>;\n  fields: Array<Field>;\n  harvest?: Maybe<Harvest>;\n  harvests: Array<Harvest>;\n  incentive?: Maybe<Incentive>;\n  incentives: Array<Incentive>;\n  marketplaceEvent?: Maybe<MarketplaceEvent>;\n  marketplaceEvents: Array<MarketplaceEvent>;\n  metapoolOracle?: Maybe<MetapoolOracle>;\n  metapoolOracles: Array<MetapoolOracle>;\n  plot?: Maybe<Plot>;\n  plots: Array<Plot>;\n  podFill?: Maybe<PodFill>;\n  podFills: Array<PodFill>;\n  podListing?: Maybe<PodListing>;\n  podListingCancelled?: Maybe<PodListingCancelled>;\n  podListingCancelleds: Array<PodListingCancelled>;\n  podListingCreated?: Maybe<PodListingCreated>;\n  podListingCreateds: Array<PodListingCreated>;\n  podListingFilled?: Maybe<PodListingFilled>;\n  podListingFilleds: Array<PodListingFilled>;\n  podListings: Array<PodListing>;\n  podMarketplace?: Maybe<PodMarketplace>;\n  podMarketplaceDailySnapshot?: Maybe<PodMarketplaceDailySnapshot>;\n  podMarketplaceDailySnapshots: Array<PodMarketplaceDailySnapshot>;\n  podMarketplaceHourlySnapshot?: Maybe<PodMarketplaceHourlySnapshot>;\n  podMarketplaceHourlySnapshots: Array<PodMarketplaceHourlySnapshot>;\n  podMarketplaces: Array<PodMarketplace>;\n  podOrder?: Maybe<PodOrder>;\n  podOrderCancelled?: Maybe<PodOrderCancelled>;\n  podOrderCancelleds: Array<PodOrderCancelled>;\n  podOrderCreated?: Maybe<PodOrderCreated>;\n  podOrderCreateds: Array<PodOrderCreated>;\n  podOrderFilled?: Maybe<PodOrderFilled>;\n  podOrderFilleds: Array<PodOrderFilled>;\n  podOrders: Array<PodOrder>;\n  podTransfer?: Maybe<PodTransfer>;\n  podTransfers: Array<PodTransfer>;\n  removeDeposit?: Maybe<RemoveDeposit>;\n  removeDeposits: Array<RemoveDeposit>;\n  reward?: Maybe<Reward>;\n  rewardToken?: Maybe<RewardToken>;\n  rewardTokens: Array<RewardToken>;\n  rewards: Array<Reward>;\n  season?: Maybe<Season>;\n  seasons: Array<Season>;\n  seedChange?: Maybe<SeedChange>;\n  seedChanges: Array<SeedChange>;\n  silo?: Maybe<Silo>;\n  siloAsset?: Maybe<SiloAsset>;\n  siloAssetDailySnapshot?: Maybe<SiloAssetDailySnapshot>;\n  siloAssetDailySnapshots: Array<SiloAssetDailySnapshot>;\n  siloAssetHourlySnapshot?: Maybe<SiloAssetHourlySnapshot>;\n  siloAssetHourlySnapshots: Array<SiloAssetHourlySnapshot>;\n  siloAssets: Array<SiloAsset>;\n  siloDailySnapshot?: Maybe<SiloDailySnapshot>;\n  siloDailySnapshots: Array<SiloDailySnapshot>;\n  siloDeposit?: Maybe<SiloDeposit>;\n  siloDeposits: Array<SiloDeposit>;\n  siloEvent?: Maybe<SiloEvent>;\n  siloEvents: Array<SiloEvent>;\n  siloHourlySnapshot?: Maybe<SiloHourlySnapshot>;\n  siloHourlySnapshots: Array<SiloHourlySnapshot>;\n  siloWithdraw?: Maybe<SiloWithdraw>;\n  siloWithdraws: Array<SiloWithdraw>;\n  siloYield?: Maybe<SiloYield>;\n  siloYields: Array<SiloYield>;\n  silos: Array<Silo>;\n  stalkChange?: Maybe<StalkChange>;\n  stalkChanges: Array<StalkChange>;\n  token?: Maybe<Token>;\n  tokens: Array<Token>;\n  transaction?: Maybe<Transaction>;\n  transactions: Array<Transaction>;\n  whitelistToken?: Maybe<WhitelistToken>;\n  whitelistTokens: Array<WhitelistToken>;\n};\n\n\nexport type Subscription_MetaArgs = {\n  block?: InputMaybe<Block_Height>;\n};\n\n\nexport type SubscriptionAddDepositArgs = {\n  block?: InputMaybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type SubscriptionAddDepositsArgs = {\n  block?: InputMaybe<Block_Height>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<AddDeposit_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: InputMaybe<AddDeposit_Filter>;\n};\n\n\nexport type SubscriptionBeanstalkArgs = {\n  block?: InputMaybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type SubscriptionBeanstalksArgs = {\n  block?: InputMaybe<Block_Height>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<Beanstalk_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: InputMaybe<Beanstalk_Filter>;\n};\n\n\nexport type SubscriptionChopArgs = {\n  block?: InputMaybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type SubscriptionChopsArgs = {\n  block?: InputMaybe<Block_Height>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<Chop_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: InputMaybe<Chop_Filter>;\n};\n\n\nexport type SubscriptionDewhitelistTokenArgs = {\n  block?: InputMaybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type SubscriptionDewhitelistTokensArgs = {\n  block?: InputMaybe<Block_Height>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<DewhitelistToken_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: InputMaybe<DewhitelistToken_Filter>;\n};\n\n\nexport type SubscriptionEventArgs = {\n  block?: InputMaybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type SubscriptionEventsArgs = {\n  block?: InputMaybe<Block_Height>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<Event_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: InputMaybe<Event_Filter>;\n};\n\n\nexport type SubscriptionFarmerArgs = {\n  block?: InputMaybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type SubscriptionFarmersArgs = {\n  block?: InputMaybe<Block_Height>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<Farmer_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: InputMaybe<Farmer_Filter>;\n};\n\n\nexport type SubscriptionFertilizerArgs = {\n  block?: InputMaybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type SubscriptionFertilizerBalanceArgs = {\n  block?: InputMaybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type SubscriptionFertilizerBalancesArgs = {\n  block?: InputMaybe<Block_Height>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<FertilizerBalance_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: InputMaybe<FertilizerBalance_Filter>;\n};\n\n\nexport type SubscriptionFertilizerTokenArgs = {\n  block?: InputMaybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type SubscriptionFertilizerTokensArgs = {\n  block?: InputMaybe<Block_Height>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<FertilizerToken_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: InputMaybe<FertilizerToken_Filter>;\n};\n\n\nexport type SubscriptionFertilizersArgs = {\n  block?: InputMaybe<Block_Height>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<Fertilizer_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: InputMaybe<Fertilizer_Filter>;\n};\n\n\nexport type SubscriptionFieldArgs = {\n  block?: InputMaybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type SubscriptionFieldDailySnapshotArgs = {\n  block?: InputMaybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type SubscriptionFieldDailySnapshotsArgs = {\n  block?: InputMaybe<Block_Height>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<FieldDailySnapshot_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: InputMaybe<FieldDailySnapshot_Filter>;\n};\n\n\nexport type SubscriptionFieldEventArgs = {\n  block?: InputMaybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type SubscriptionFieldEventsArgs = {\n  block?: InputMaybe<Block_Height>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<FieldEvent_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: InputMaybe<FieldEvent_Filter>;\n};\n\n\nexport type SubscriptionFieldHourlySnapshotArgs = {\n  block?: InputMaybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type SubscriptionFieldHourlySnapshotsArgs = {\n  block?: InputMaybe<Block_Height>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<FieldHourlySnapshot_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: InputMaybe<FieldHourlySnapshot_Filter>;\n};\n\n\nexport type SubscriptionFieldsArgs = {\n  block?: InputMaybe<Block_Height>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<Field_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: InputMaybe<Field_Filter>;\n};\n\n\nexport type SubscriptionHarvestArgs = {\n  block?: InputMaybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type SubscriptionHarvestsArgs = {\n  block?: InputMaybe<Block_Height>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<Harvest_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: InputMaybe<Harvest_Filter>;\n};\n\n\nexport type SubscriptionIncentiveArgs = {\n  block?: InputMaybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type SubscriptionIncentivesArgs = {\n  block?: InputMaybe<Block_Height>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<Incentive_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: InputMaybe<Incentive_Filter>;\n};\n\n\nexport type SubscriptionMarketplaceEventArgs = {\n  block?: InputMaybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type SubscriptionMarketplaceEventsArgs = {\n  block?: InputMaybe<Block_Height>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<MarketplaceEvent_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: InputMaybe<MarketplaceEvent_Filter>;\n};\n\n\nexport type SubscriptionMetapoolOracleArgs = {\n  block?: InputMaybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type SubscriptionMetapoolOraclesArgs = {\n  block?: InputMaybe<Block_Height>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<MetapoolOracle_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: InputMaybe<MetapoolOracle_Filter>;\n};\n\n\nexport type SubscriptionPlotArgs = {\n  block?: InputMaybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type SubscriptionPlotsArgs = {\n  block?: InputMaybe<Block_Height>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<Plot_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: InputMaybe<Plot_Filter>;\n};\n\n\nexport type SubscriptionPodFillArgs = {\n  block?: InputMaybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type SubscriptionPodFillsArgs = {\n  block?: InputMaybe<Block_Height>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<PodFill_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: InputMaybe<PodFill_Filter>;\n};\n\n\nexport type SubscriptionPodListingArgs = {\n  block?: InputMaybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type SubscriptionPodListingCancelledArgs = {\n  block?: InputMaybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type SubscriptionPodListingCancelledsArgs = {\n  block?: InputMaybe<Block_Height>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<PodListingCancelled_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: InputMaybe<PodListingCancelled_Filter>;\n};\n\n\nexport type SubscriptionPodListingCreatedArgs = {\n  block?: InputMaybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type SubscriptionPodListingCreatedsArgs = {\n  block?: InputMaybe<Block_Height>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<PodListingCreated_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: InputMaybe<PodListingCreated_Filter>;\n};\n\n\nexport type SubscriptionPodListingFilledArgs = {\n  block?: InputMaybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type SubscriptionPodListingFilledsArgs = {\n  block?: InputMaybe<Block_Height>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<PodListingFilled_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: InputMaybe<PodListingFilled_Filter>;\n};\n\n\nexport type SubscriptionPodListingsArgs = {\n  block?: InputMaybe<Block_Height>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<PodListing_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: InputMaybe<PodListing_Filter>;\n};\n\n\nexport type SubscriptionPodMarketplaceArgs = {\n  block?: InputMaybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type SubscriptionPodMarketplaceDailySnapshotArgs = {\n  block?: InputMaybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type SubscriptionPodMarketplaceDailySnapshotsArgs = {\n  block?: InputMaybe<Block_Height>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<PodMarketplaceDailySnapshot_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: InputMaybe<PodMarketplaceDailySnapshot_Filter>;\n};\n\n\nexport type SubscriptionPodMarketplaceHourlySnapshotArgs = {\n  block?: InputMaybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type SubscriptionPodMarketplaceHourlySnapshotsArgs = {\n  block?: InputMaybe<Block_Height>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<PodMarketplaceHourlySnapshot_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: InputMaybe<PodMarketplaceHourlySnapshot_Filter>;\n};\n\n\nexport type SubscriptionPodMarketplacesArgs = {\n  block?: InputMaybe<Block_Height>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<PodMarketplace_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: InputMaybe<PodMarketplace_Filter>;\n};\n\n\nexport type SubscriptionPodOrderArgs = {\n  block?: InputMaybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type SubscriptionPodOrderCancelledArgs = {\n  block?: InputMaybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type SubscriptionPodOrderCancelledsArgs = {\n  block?: InputMaybe<Block_Height>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<PodOrderCancelled_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: InputMaybe<PodOrderCancelled_Filter>;\n};\n\n\nexport type SubscriptionPodOrderCreatedArgs = {\n  block?: InputMaybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type SubscriptionPodOrderCreatedsArgs = {\n  block?: InputMaybe<Block_Height>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<PodOrderCreated_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: InputMaybe<PodOrderCreated_Filter>;\n};\n\n\nexport type SubscriptionPodOrderFilledArgs = {\n  block?: InputMaybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type SubscriptionPodOrderFilledsArgs = {\n  block?: InputMaybe<Block_Height>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<PodOrderFilled_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: InputMaybe<PodOrderFilled_Filter>;\n};\n\n\nexport type SubscriptionPodOrdersArgs = {\n  block?: InputMaybe<Block_Height>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<PodOrder_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: InputMaybe<PodOrder_Filter>;\n};\n\n\nexport type SubscriptionPodTransferArgs = {\n  block?: InputMaybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type SubscriptionPodTransfersArgs = {\n  block?: InputMaybe<Block_Height>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<PodTransfer_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: InputMaybe<PodTransfer_Filter>;\n};\n\n\nexport type SubscriptionRemoveDepositArgs = {\n  block?: InputMaybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type SubscriptionRemoveDepositsArgs = {\n  block?: InputMaybe<Block_Height>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<RemoveDeposit_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: InputMaybe<RemoveDeposit_Filter>;\n};\n\n\nexport type SubscriptionRewardArgs = {\n  block?: InputMaybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type SubscriptionRewardTokenArgs = {\n  block?: InputMaybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type SubscriptionRewardTokensArgs = {\n  block?: InputMaybe<Block_Height>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<RewardToken_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: InputMaybe<RewardToken_Filter>;\n};\n\n\nexport type SubscriptionRewardsArgs = {\n  block?: InputMaybe<Block_Height>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<Reward_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: InputMaybe<Reward_Filter>;\n};\n\n\nexport type SubscriptionSeasonArgs = {\n  block?: InputMaybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type SubscriptionSeasonsArgs = {\n  block?: InputMaybe<Block_Height>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<Season_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: InputMaybe<Season_Filter>;\n};\n\n\nexport type SubscriptionSeedChangeArgs = {\n  block?: InputMaybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type SubscriptionSeedChangesArgs = {\n  block?: InputMaybe<Block_Height>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<SeedChange_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: InputMaybe<SeedChange_Filter>;\n};\n\n\nexport type SubscriptionSiloArgs = {\n  block?: InputMaybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type SubscriptionSiloAssetArgs = {\n  block?: InputMaybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type SubscriptionSiloAssetDailySnapshotArgs = {\n  block?: InputMaybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type SubscriptionSiloAssetDailySnapshotsArgs = {\n  block?: InputMaybe<Block_Height>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<SiloAssetDailySnapshot_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: InputMaybe<SiloAssetDailySnapshot_Filter>;\n};\n\n\nexport type SubscriptionSiloAssetHourlySnapshotArgs = {\n  block?: InputMaybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type SubscriptionSiloAssetHourlySnapshotsArgs = {\n  block?: InputMaybe<Block_Height>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<SiloAssetHourlySnapshot_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: InputMaybe<SiloAssetHourlySnapshot_Filter>;\n};\n\n\nexport type SubscriptionSiloAssetsArgs = {\n  block?: InputMaybe<Block_Height>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<SiloAsset_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: InputMaybe<SiloAsset_Filter>;\n};\n\n\nexport type SubscriptionSiloDailySnapshotArgs = {\n  block?: InputMaybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type SubscriptionSiloDailySnapshotsArgs = {\n  block?: InputMaybe<Block_Height>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<SiloDailySnapshot_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: InputMaybe<SiloDailySnapshot_Filter>;\n};\n\n\nexport type SubscriptionSiloDepositArgs = {\n  block?: InputMaybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type SubscriptionSiloDepositsArgs = {\n  block?: InputMaybe<Block_Height>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<SiloDeposit_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: InputMaybe<SiloDeposit_Filter>;\n};\n\n\nexport type SubscriptionSiloEventArgs = {\n  block?: InputMaybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type SubscriptionSiloEventsArgs = {\n  block?: InputMaybe<Block_Height>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<SiloEvent_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: InputMaybe<SiloEvent_Filter>;\n};\n\n\nexport type SubscriptionSiloHourlySnapshotArgs = {\n  block?: InputMaybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type SubscriptionSiloHourlySnapshotsArgs = {\n  block?: InputMaybe<Block_Height>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<SiloHourlySnapshot_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: InputMaybe<SiloHourlySnapshot_Filter>;\n};\n\n\nexport type SubscriptionSiloWithdrawArgs = {\n  block?: InputMaybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type SubscriptionSiloWithdrawsArgs = {\n  block?: InputMaybe<Block_Height>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<SiloWithdraw_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: InputMaybe<SiloWithdraw_Filter>;\n};\n\n\nexport type SubscriptionSiloYieldArgs = {\n  block?: InputMaybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type SubscriptionSiloYieldsArgs = {\n  block?: InputMaybe<Block_Height>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<SiloYield_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: InputMaybe<SiloYield_Filter>;\n};\n\n\nexport type SubscriptionSilosArgs = {\n  block?: InputMaybe<Block_Height>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<Silo_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: InputMaybe<Silo_Filter>;\n};\n\n\nexport type SubscriptionStalkChangeArgs = {\n  block?: InputMaybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type SubscriptionStalkChangesArgs = {\n  block?: InputMaybe<Block_Height>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<StalkChange_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: InputMaybe<StalkChange_Filter>;\n};\n\n\nexport type SubscriptionTokenArgs = {\n  block?: InputMaybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type SubscriptionTokensArgs = {\n  block?: InputMaybe<Block_Height>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<Token_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: InputMaybe<Token_Filter>;\n};\n\n\nexport type SubscriptionTransactionArgs = {\n  block?: InputMaybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type SubscriptionTransactionsArgs = {\n  block?: InputMaybe<Block_Height>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<Transaction_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: InputMaybe<Transaction_Filter>;\n};\n\n\nexport type SubscriptionWhitelistTokenArgs = {\n  block?: InputMaybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type SubscriptionWhitelistTokensArgs = {\n  block?: InputMaybe<Block_Height>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<WhitelistToken_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: InputMaybe<WhitelistToken_Filter>;\n};\n\nexport type Token = {\n  __typename?: 'Token';\n  /**  The number of decimal places this token uses, default to 18  */\n  decimals: Scalars['Int'];\n  /**  Smart contract address of the token  */\n  id: Scalars['ID'];\n  /**  Optional field to track the block number of the last token price  */\n  lastPriceBlockNumber?: Maybe<Scalars['BigInt']>;\n  /**  Optional field to track the price of a token, mostly for caching purposes  */\n  lastPriceUSD?: Maybe<Scalars['BigDecimal']>;\n  /**  Name of the token, mirrored from the smart contract  */\n  name: Scalars['String'];\n  /**  Symbol of the token, mirrored from the smart contract  */\n  symbol: Scalars['String'];\n};\n\nexport type Token_Filter = {\n  /** Filter for the block changed event. */\n  _change_block?: InputMaybe<BlockChangedFilter>;\n  decimals?: InputMaybe<Scalars['Int']>;\n  decimals_gt?: InputMaybe<Scalars['Int']>;\n  decimals_gte?: InputMaybe<Scalars['Int']>;\n  decimals_in?: InputMaybe<Array<Scalars['Int']>>;\n  decimals_lt?: InputMaybe<Scalars['Int']>;\n  decimals_lte?: InputMaybe<Scalars['Int']>;\n  decimals_not?: InputMaybe<Scalars['Int']>;\n  decimals_not_in?: InputMaybe<Array<Scalars['Int']>>;\n  id?: InputMaybe<Scalars['ID']>;\n  id_gt?: InputMaybe<Scalars['ID']>;\n  id_gte?: InputMaybe<Scalars['ID']>;\n  id_in?: InputMaybe<Array<Scalars['ID']>>;\n  id_lt?: InputMaybe<Scalars['ID']>;\n  id_lte?: InputMaybe<Scalars['ID']>;\n  id_not?: InputMaybe<Scalars['ID']>;\n  id_not_in?: InputMaybe<Array<Scalars['ID']>>;\n  lastPriceBlockNumber?: InputMaybe<Scalars['BigInt']>;\n  lastPriceBlockNumber_gt?: InputMaybe<Scalars['BigInt']>;\n  lastPriceBlockNumber_gte?: InputMaybe<Scalars['BigInt']>;\n  lastPriceBlockNumber_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  lastPriceBlockNumber_lt?: InputMaybe<Scalars['BigInt']>;\n  lastPriceBlockNumber_lte?: InputMaybe<Scalars['BigInt']>;\n  lastPriceBlockNumber_not?: InputMaybe<Scalars['BigInt']>;\n  lastPriceBlockNumber_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  lastPriceUSD?: InputMaybe<Scalars['BigDecimal']>;\n  lastPriceUSD_gt?: InputMaybe<Scalars['BigDecimal']>;\n  lastPriceUSD_gte?: InputMaybe<Scalars['BigDecimal']>;\n  lastPriceUSD_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n  lastPriceUSD_lt?: InputMaybe<Scalars['BigDecimal']>;\n  lastPriceUSD_lte?: InputMaybe<Scalars['BigDecimal']>;\n  lastPriceUSD_not?: InputMaybe<Scalars['BigDecimal']>;\n  lastPriceUSD_not_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n  name?: InputMaybe<Scalars['String']>;\n  name_contains?: InputMaybe<Scalars['String']>;\n  name_contains_nocase?: InputMaybe<Scalars['String']>;\n  name_ends_with?: InputMaybe<Scalars['String']>;\n  name_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  name_gt?: InputMaybe<Scalars['String']>;\n  name_gte?: InputMaybe<Scalars['String']>;\n  name_in?: InputMaybe<Array<Scalars['String']>>;\n  name_lt?: InputMaybe<Scalars['String']>;\n  name_lte?: InputMaybe<Scalars['String']>;\n  name_not?: InputMaybe<Scalars['String']>;\n  name_not_contains?: InputMaybe<Scalars['String']>;\n  name_not_contains_nocase?: InputMaybe<Scalars['String']>;\n  name_not_ends_with?: InputMaybe<Scalars['String']>;\n  name_not_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  name_not_in?: InputMaybe<Array<Scalars['String']>>;\n  name_not_starts_with?: InputMaybe<Scalars['String']>;\n  name_not_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  name_starts_with?: InputMaybe<Scalars['String']>;\n  name_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  symbol?: InputMaybe<Scalars['String']>;\n  symbol_contains?: InputMaybe<Scalars['String']>;\n  symbol_contains_nocase?: InputMaybe<Scalars['String']>;\n  symbol_ends_with?: InputMaybe<Scalars['String']>;\n  symbol_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  symbol_gt?: InputMaybe<Scalars['String']>;\n  symbol_gte?: InputMaybe<Scalars['String']>;\n  symbol_in?: InputMaybe<Array<Scalars['String']>>;\n  symbol_lt?: InputMaybe<Scalars['String']>;\n  symbol_lte?: InputMaybe<Scalars['String']>;\n  symbol_not?: InputMaybe<Scalars['String']>;\n  symbol_not_contains?: InputMaybe<Scalars['String']>;\n  symbol_not_contains_nocase?: InputMaybe<Scalars['String']>;\n  symbol_not_ends_with?: InputMaybe<Scalars['String']>;\n  symbol_not_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  symbol_not_in?: InputMaybe<Array<Scalars['String']>>;\n  symbol_not_starts_with?: InputMaybe<Scalars['String']>;\n  symbol_not_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  symbol_starts_with?: InputMaybe<Scalars['String']>;\n  symbol_starts_with_nocase?: InputMaybe<Scalars['String']>;\n};\n\nexport enum Token_OrderBy {\n  Decimals = 'decimals',\n  Id = 'id',\n  LastPriceBlockNumber = 'lastPriceBlockNumber',\n  LastPriceUsd = 'lastPriceUSD',\n  Name = 'name',\n  Symbol = 'symbol'\n}\n\nexport type Transaction = {\n  __typename?: 'Transaction';\n  blockNumber: Scalars['BigInt'];\n  from: Scalars['Bytes'];\n  id: Scalars['ID'];\n  timestamp: Scalars['BigInt'];\n  to?: Maybe<Scalars['Bytes']>;\n};\n\nexport type Transaction_Filter = {\n  /** Filter for the block changed event. */\n  _change_block?: InputMaybe<BlockChangedFilter>;\n  blockNumber?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_gt?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_gte?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  blockNumber_lt?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_lte?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_not?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  from?: InputMaybe<Scalars['Bytes']>;\n  from_contains?: InputMaybe<Scalars['Bytes']>;\n  from_in?: InputMaybe<Array<Scalars['Bytes']>>;\n  from_not?: InputMaybe<Scalars['Bytes']>;\n  from_not_contains?: InputMaybe<Scalars['Bytes']>;\n  from_not_in?: InputMaybe<Array<Scalars['Bytes']>>;\n  id?: InputMaybe<Scalars['ID']>;\n  id_gt?: InputMaybe<Scalars['ID']>;\n  id_gte?: InputMaybe<Scalars['ID']>;\n  id_in?: InputMaybe<Array<Scalars['ID']>>;\n  id_lt?: InputMaybe<Scalars['ID']>;\n  id_lte?: InputMaybe<Scalars['ID']>;\n  id_not?: InputMaybe<Scalars['ID']>;\n  id_not_in?: InputMaybe<Array<Scalars['ID']>>;\n  timestamp?: InputMaybe<Scalars['BigInt']>;\n  timestamp_gt?: InputMaybe<Scalars['BigInt']>;\n  timestamp_gte?: InputMaybe<Scalars['BigInt']>;\n  timestamp_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  timestamp_lt?: InputMaybe<Scalars['BigInt']>;\n  timestamp_lte?: InputMaybe<Scalars['BigInt']>;\n  timestamp_not?: InputMaybe<Scalars['BigInt']>;\n  timestamp_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  to?: InputMaybe<Scalars['Bytes']>;\n  to_contains?: InputMaybe<Scalars['Bytes']>;\n  to_in?: InputMaybe<Array<Scalars['Bytes']>>;\n  to_not?: InputMaybe<Scalars['Bytes']>;\n  to_not_contains?: InputMaybe<Scalars['Bytes']>;\n  to_not_in?: InputMaybe<Array<Scalars['Bytes']>>;\n};\n\nexport enum Transaction_OrderBy {\n  BlockNumber = 'blockNumber',\n  From = 'from',\n  Id = 'id',\n  Timestamp = 'timestamp',\n  To = 'to'\n}\n\nexport type WhitelistToken = SiloEvent & {\n  __typename?: 'WhitelistToken';\n  /**  Block number of this event  */\n  blockNumber: Scalars['BigInt'];\n  /**  Transaction hash of the transaction that emitted this event  */\n  hash: Scalars['String'];\n  /** whitelistToken-{ Transaction hash }-{ Log index } */\n  id: Scalars['ID'];\n  /**  Event log index. For transactions that don't emit event, create arbitrary index starting from 0  */\n  logIndex: Scalars['Int'];\n  /**  The protocol this transaction belongs to  */\n  protocol: Beanstalk;\n  /** Seeds per BDV */\n  seeds: Scalars['BigInt'];\n  /** Selector for token */\n  selector: Scalars['String'];\n  /** Stalk per BDV */\n  stalk: Scalars['BigInt'];\n  /**  Timestamp of this event  */\n  timestamp: Scalars['BigInt'];\n  /** Token address whitelisted */\n  token: Scalars['String'];\n};\n\nexport type WhitelistToken_Filter = {\n  /** Filter for the block changed event. */\n  _change_block?: InputMaybe<BlockChangedFilter>;\n  blockNumber?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_gt?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_gte?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  blockNumber_lt?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_lte?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_not?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  hash?: InputMaybe<Scalars['String']>;\n  hash_contains?: InputMaybe<Scalars['String']>;\n  hash_contains_nocase?: InputMaybe<Scalars['String']>;\n  hash_ends_with?: InputMaybe<Scalars['String']>;\n  hash_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  hash_gt?: InputMaybe<Scalars['String']>;\n  hash_gte?: InputMaybe<Scalars['String']>;\n  hash_in?: InputMaybe<Array<Scalars['String']>>;\n  hash_lt?: InputMaybe<Scalars['String']>;\n  hash_lte?: InputMaybe<Scalars['String']>;\n  hash_not?: InputMaybe<Scalars['String']>;\n  hash_not_contains?: InputMaybe<Scalars['String']>;\n  hash_not_contains_nocase?: InputMaybe<Scalars['String']>;\n  hash_not_ends_with?: InputMaybe<Scalars['String']>;\n  hash_not_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  hash_not_in?: InputMaybe<Array<Scalars['String']>>;\n  hash_not_starts_with?: InputMaybe<Scalars['String']>;\n  hash_not_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  hash_starts_with?: InputMaybe<Scalars['String']>;\n  hash_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  id?: InputMaybe<Scalars['ID']>;\n  id_gt?: InputMaybe<Scalars['ID']>;\n  id_gte?: InputMaybe<Scalars['ID']>;\n  id_in?: InputMaybe<Array<Scalars['ID']>>;\n  id_lt?: InputMaybe<Scalars['ID']>;\n  id_lte?: InputMaybe<Scalars['ID']>;\n  id_not?: InputMaybe<Scalars['ID']>;\n  id_not_in?: InputMaybe<Array<Scalars['ID']>>;\n  logIndex?: InputMaybe<Scalars['Int']>;\n  logIndex_gt?: InputMaybe<Scalars['Int']>;\n  logIndex_gte?: InputMaybe<Scalars['Int']>;\n  logIndex_in?: InputMaybe<Array<Scalars['Int']>>;\n  logIndex_lt?: InputMaybe<Scalars['Int']>;\n  logIndex_lte?: InputMaybe<Scalars['Int']>;\n  logIndex_not?: InputMaybe<Scalars['Int']>;\n  logIndex_not_in?: InputMaybe<Array<Scalars['Int']>>;\n  protocol?: InputMaybe<Scalars['String']>;\n  protocol_?: InputMaybe<Beanstalk_Filter>;\n  protocol_contains?: InputMaybe<Scalars['String']>;\n  protocol_contains_nocase?: InputMaybe<Scalars['String']>;\n  protocol_ends_with?: InputMaybe<Scalars['String']>;\n  protocol_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  protocol_gt?: InputMaybe<Scalars['String']>;\n  protocol_gte?: InputMaybe<Scalars['String']>;\n  protocol_in?: InputMaybe<Array<Scalars['String']>>;\n  protocol_lt?: InputMaybe<Scalars['String']>;\n  protocol_lte?: InputMaybe<Scalars['String']>;\n  protocol_not?: InputMaybe<Scalars['String']>;\n  protocol_not_contains?: InputMaybe<Scalars['String']>;\n  protocol_not_contains_nocase?: InputMaybe<Scalars['String']>;\n  protocol_not_ends_with?: InputMaybe<Scalars['String']>;\n  protocol_not_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  protocol_not_in?: InputMaybe<Array<Scalars['String']>>;\n  protocol_not_starts_with?: InputMaybe<Scalars['String']>;\n  protocol_not_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  protocol_starts_with?: InputMaybe<Scalars['String']>;\n  protocol_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  seeds?: InputMaybe<Scalars['BigInt']>;\n  seeds_gt?: InputMaybe<Scalars['BigInt']>;\n  seeds_gte?: InputMaybe<Scalars['BigInt']>;\n  seeds_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  seeds_lt?: InputMaybe<Scalars['BigInt']>;\n  seeds_lte?: InputMaybe<Scalars['BigInt']>;\n  seeds_not?: InputMaybe<Scalars['BigInt']>;\n  seeds_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  selector?: InputMaybe<Scalars['String']>;\n  selector_contains?: InputMaybe<Scalars['String']>;\n  selector_contains_nocase?: InputMaybe<Scalars['String']>;\n  selector_ends_with?: InputMaybe<Scalars['String']>;\n  selector_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  selector_gt?: InputMaybe<Scalars['String']>;\n  selector_gte?: InputMaybe<Scalars['String']>;\n  selector_in?: InputMaybe<Array<Scalars['String']>>;\n  selector_lt?: InputMaybe<Scalars['String']>;\n  selector_lte?: InputMaybe<Scalars['String']>;\n  selector_not?: InputMaybe<Scalars['String']>;\n  selector_not_contains?: InputMaybe<Scalars['String']>;\n  selector_not_contains_nocase?: InputMaybe<Scalars['String']>;\n  selector_not_ends_with?: InputMaybe<Scalars['String']>;\n  selector_not_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  selector_not_in?: InputMaybe<Array<Scalars['String']>>;\n  selector_not_starts_with?: InputMaybe<Scalars['String']>;\n  selector_not_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  selector_starts_with?: InputMaybe<Scalars['String']>;\n  selector_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  stalk?: InputMaybe<Scalars['BigInt']>;\n  stalk_gt?: InputMaybe<Scalars['BigInt']>;\n  stalk_gte?: InputMaybe<Scalars['BigInt']>;\n  stalk_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  stalk_lt?: InputMaybe<Scalars['BigInt']>;\n  stalk_lte?: InputMaybe<Scalars['BigInt']>;\n  stalk_not?: InputMaybe<Scalars['BigInt']>;\n  stalk_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  timestamp?: InputMaybe<Scalars['BigInt']>;\n  timestamp_gt?: InputMaybe<Scalars['BigInt']>;\n  timestamp_gte?: InputMaybe<Scalars['BigInt']>;\n  timestamp_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  timestamp_lt?: InputMaybe<Scalars['BigInt']>;\n  timestamp_lte?: InputMaybe<Scalars['BigInt']>;\n  timestamp_not?: InputMaybe<Scalars['BigInt']>;\n  timestamp_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  token?: InputMaybe<Scalars['String']>;\n  token_contains?: InputMaybe<Scalars['String']>;\n  token_contains_nocase?: InputMaybe<Scalars['String']>;\n  token_ends_with?: InputMaybe<Scalars['String']>;\n  token_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  token_gt?: InputMaybe<Scalars['String']>;\n  token_gte?: InputMaybe<Scalars['String']>;\n  token_in?: InputMaybe<Array<Scalars['String']>>;\n  token_lt?: InputMaybe<Scalars['String']>;\n  token_lte?: InputMaybe<Scalars['String']>;\n  token_not?: InputMaybe<Scalars['String']>;\n  token_not_contains?: InputMaybe<Scalars['String']>;\n  token_not_contains_nocase?: InputMaybe<Scalars['String']>;\n  token_not_ends_with?: InputMaybe<Scalars['String']>;\n  token_not_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  token_not_in?: InputMaybe<Array<Scalars['String']>>;\n  token_not_starts_with?: InputMaybe<Scalars['String']>;\n  token_not_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  token_starts_with?: InputMaybe<Scalars['String']>;\n  token_starts_with_nocase?: InputMaybe<Scalars['String']>;\n};\n\nexport enum WhitelistToken_OrderBy {\n  BlockNumber = 'blockNumber',\n  Hash = 'hash',\n  Id = 'id',\n  LogIndex = 'logIndex',\n  Protocol = 'protocol',\n  Seeds = 'seeds',\n  Selector = 'selector',\n  Stalk = 'stalk',\n  Timestamp = 'timestamp',\n  Token = 'token'\n}\n\nexport type _Block_ = {\n  __typename?: '_Block_';\n  /** The hash of the block */\n  hash?: Maybe<Scalars['Bytes']>;\n  /** The block number */\n  number: Scalars['Int'];\n};\n\n/** The type for the top-level _meta field */\nexport type _Meta_ = {\n  __typename?: '_Meta_';\n  /**\n   * Information about a specific subgraph block. The hash of the block\n   * will be null if the _meta field has a block constraint that asks for\n   * a block number. It will be filled if the _meta field has no block constraint\n   * and therefore asks for the latest  block\n   *\n   */\n  block: _Block_;\n  /** The deployment ID */\n  deployment: Scalars['String'];\n  /** If `true`, the subgraph encountered indexing errors at some past block */\n  hasIndexingErrors: Scalars['Boolean'];\n};\n\nexport enum _SubgraphErrorPolicy_ {\n  /** Data will be returned even if the subgraph has indexing errors */\n  Allow = 'allow',\n  /** If the subgraph has indexing errors, data will be omitted. The default. */\n  Deny = 'deny'\n}\n\nexport type PodListingFragment = { __typename?: 'PodListing', id: string, index: any, createdAt: any, updatedAt: any, status: MarketStatus, originalIndex: any, amount: any, totalAmount: any, remainingAmount: any, start: any, pricePerPod: number, maxHarvestableIndex: any, mode: number };\n\nexport type GetListingByIndexQueryVariables = Exact<{\n  index?: InputMaybe<Scalars['BigInt']>;\n}>;\n\n\nexport type GetListingByIndexQuery = { __typename?: 'Query', podListings: Array<{ __typename?: 'PodListing', id: string, index: any, createdAt: any, updatedAt: any, status: MarketStatus, originalIndex: any, amount: any, totalAmount: any, remainingAmount: any, start: any, pricePerPod: number, maxHarvestableIndex: any, mode: number }> };\n\nexport type GetSiloBalanceQueryVariables = Exact<{\n  token?: InputMaybe<Scalars['String']>;\n  account: Scalars['ID'];\n  season: Scalars['Int'];\n}>;\n\n\nexport type GetSiloBalanceQuery = { __typename?: 'Query', farmer?: { __typename?: 'Farmer', deposited: Array<{ __typename?: 'SiloDeposit', season: number, token: string, amount: any, bdv: any }>, withdrawn: Array<{ __typename?: 'SiloWithdraw', token: string, amount: any, season: number }>, claimable: Array<{ __typename?: 'SiloWithdraw', token: string, amount: any, season: number }> } | null };\n\nexport type GetSiloBalancesQueryVariables = Exact<{\n  account: Scalars['ID'];\n  season: Scalars['Int'];\n}>;\n\n\nexport type GetSiloBalancesQuery = { __typename?: 'Query', farmer?: { __typename?: 'Farmer', deposited: Array<{ __typename?: 'SiloDeposit', season: number, token: string, amount: any, bdv: any }>, withdrawn: Array<{ __typename?: 'SiloWithdraw', token: string, amount: any, season: number }>, claimable: Array<{ __typename?: 'SiloWithdraw', token: string, amount: any, season: number }> } | null };\n\nexport type GetSiloWhitelistQueryVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type GetSiloWhitelistQuery = { __typename?: 'Query', whitelistTokens: Array<{ __typename?: 'WhitelistToken', token: string, stalk: any, seeds: any }> };\n\nexport const PodListingFragmentDoc = gql`\n    fragment PodListing on PodListing {\n  id\n  index\n  createdAt\n  updatedAt\n  status\n  originalIndex\n  amount\n  totalAmount\n  remainingAmount\n  start\n  pricePerPod\n  maxHarvestableIndex\n  mode\n}\n    `;\nexport const GetListingByIndexDocument = gql`\n    query getListingByIndex($index: BigInt) {\n  podListings(\n    where: {index: $index}\n    first: 1\n    orderBy: createdAt\n    orderDirection: desc\n  ) {\n    ...PodListing\n  }\n}\n    ${PodListingFragmentDoc}`;\nexport const GetSiloBalanceDocument = gql`\n    query getSiloBalance($token: String, $account: ID!, $season: Int!) {\n  farmer(id: $account) {\n    deposited: deposits(\n      orderBy: season\n      orderDirection: asc\n      where: {token: $token, amount_gt: 0}\n    ) {\n      season\n      token\n      amount\n      bdv\n    }\n    withdrawn: withdraws(\n      orderBy: withdrawSeason\n      orderDirection: asc\n      where: {token: $token, claimableSeason_gt: $season, claimed: false}\n    ) {\n      season: withdrawSeason\n      token\n      amount\n    }\n    claimable: withdraws(\n      orderBy: withdrawSeason\n      orderDirection: asc\n      where: {token: $token, claimableSeason_lte: $season, claimed: false}\n    ) {\n      season: withdrawSeason\n      token\n      amount\n    }\n  }\n}\n    `;\nexport const GetSiloBalancesDocument = gql`\n    query getSiloBalances($account: ID!, $season: Int!) {\n  farmer(id: $account) {\n    deposited: deposits(orderBy: season, orderDirection: asc, where: {amount_gt: 0}) {\n      season\n      token\n      amount\n      bdv\n    }\n    withdrawn: withdraws(\n      orderBy: withdrawSeason\n      orderDirection: asc\n      where: {claimableSeason_gt: $season, claimed: false}\n    ) {\n      season: withdrawSeason\n      token\n      amount\n    }\n    claimable: withdraws(\n      orderBy: withdrawSeason\n      orderDirection: asc\n      where: {claimableSeason_lte: $season, claimed: false}\n    ) {\n      season: withdrawSeason\n      token\n      amount\n    }\n  }\n}\n    `;\nexport const GetSiloWhitelistDocument = gql`\n    query getSiloWhitelist {\n  whitelistTokens {\n    token\n    stalk\n    seeds\n  }\n}\n    `;\n\nexport type SdkFunctionWrapper = <T>(action: (requestHeaders?:Record<string, string>) => Promise<T>, operationName: string, operationType?: string) => Promise<T>;\n\n\nconst defaultWrapper: SdkFunctionWrapper = (action, _operationName, _operationType) => action();\n\nexport function getSdk(client: GraphQLClient, withWrapper: SdkFunctionWrapper = defaultWrapper) {\n  return {\n    getListingByIndex(variables?: GetListingByIndexQueryVariables, requestHeaders?: Dom.RequestInit[\"headers\"]): Promise<GetListingByIndexQuery> {\n      return withWrapper((wrappedRequestHeaders) => client.request<GetListingByIndexQuery>(GetListingByIndexDocument, variables, {...requestHeaders, ...wrappedRequestHeaders}), 'getListingByIndex', 'query');\n    },\n    getSiloBalance(variables: GetSiloBalanceQueryVariables, requestHeaders?: Dom.RequestInit[\"headers\"]): Promise<GetSiloBalanceQuery> {\n      return withWrapper((wrappedRequestHeaders) => client.request<GetSiloBalanceQuery>(GetSiloBalanceDocument, variables, {...requestHeaders, ...wrappedRequestHeaders}), 'getSiloBalance', 'query');\n    },\n    getSiloBalances(variables: GetSiloBalancesQueryVariables, requestHeaders?: Dom.RequestInit[\"headers\"]): Promise<GetSiloBalancesQuery> {\n      return withWrapper((wrappedRequestHeaders) => client.request<GetSiloBalancesQuery>(GetSiloBalancesDocument, variables, {...requestHeaders, ...wrappedRequestHeaders}), 'getSiloBalances', 'query');\n    },\n    getSiloWhitelist(variables?: GetSiloWhitelistQueryVariables, requestHeaders?: Dom.RequestInit[\"headers\"]): Promise<GetSiloWhitelistQuery> {\n      return withWrapper((wrappedRequestHeaders) => client.request<GetSiloWhitelistQuery>(GetSiloWhitelistDocument, variables, {...requestHeaders, ...wrappedRequestHeaders}), 'getSiloWhitelist', 'query');\n    }\n  };\n}\nexport type Sdk = ReturnType<typeof getSdk>;","import { BigNumber, ethers } from 'ethers';\nimport { Token } from '../../classes/Token';\nimport { BeanstalkSDK } from '../BeanstalkSDK';\n\nexport enum FarmFromMode {\n  EXTERNAL = '0',\n  INTERNAL = '1',\n  INTERNAL_EXTERNAL = '2',\n  INTERNAL_TOLERANT = '3',\n}\nexport enum FarmToMode {\n  EXTERNAL = '0',\n  INTERNAL = '1',\n}\n\nexport class BaseAction {\n  static sdk: BeanstalkSDK;\n\n  public setSDK(sdk: BeanstalkSDK) {\n    BaseAction.sdk = sdk;\n  }\n\n  protected direction(_x1: Token, _x2: Token, _forward: boolean): Token[] {\n    return _forward ? [_x1, _x2] : [_x2, _x1];\n  }\n}\n\nexport type ActionFunction = (amountIn: BigNumber, forward?: boolean) => Promise<string | ActionResult>;\n\nexport interface Action extends BaseAction {\n  name: string;\n  run(amountInStep: ethers.BigNumber, forward: boolean): Promise<ActionResult>;\n}\n\nexport type ActionResult = {\n  name: string;\n  amountOut: ethers.BigNumber;\n  value?: ethers.BigNumber;\n  data?: any;\n  encode: (minAmountOut: ethers.BigNumber) => string;\n  decode: (data: string) => Record<string, any>;\n};\n","import { BigNumber, ContractTransaction, ethers } from 'ethers';\nimport { BeanstalkSDK } from '../BeanstalkSDK';\nimport { Action, ActionFunction, ActionResult, BaseAction } from './types';\n\nexport class Work {\n  static SLIPPAGE_PRECISION = 10 ** 6;\n  static sdk: BeanstalkSDK;\n  private steps: (Action | ActionFunction)[] = [];\n  private stepResults: ActionResult[] = [];\n  private value: ethers.BigNumber = ethers.BigNumber.from(0);\n\n  constructor(sdk: BeanstalkSDK) {\n    Work.sdk = sdk;\n  }\n\n  //////////////////////// Utilities ////////////////////////\n\n  /**\n   * Apply slippage to an amount.\n   * @param _amount ethers.BigNumber\n   * @param _slippage slippage as a decimal; i.e. _slippage = 0.001 means 0.1%\n   */\n  private static slip(_amount: ethers.BigNumber, _slippage: number) {\n    return _amount.mul(Math.floor(Work.SLIPPAGE_PRECISION * (1 - _slippage))).div(Work.SLIPPAGE_PRECISION);\n  }\n\n  //////////////////////// Steps ////////////////////////\n\n  addStep(action: Action | ActionFunction) {\n    if (action instanceof BaseAction) {\n      console.log(`action`);\n      action.setSDK(Work.sdk);\n      this.steps.push(action);\n    } else if (action instanceof Function) {\n      this.steps.push(action);\n      console.log('A Function');\n    } else {\n      throw new Error('Received action that is of unknown type');\n    }\n  }\n\n  addSteps(actions: (Action | Action[] | ActionFunction)[]) {\n    for (const action of actions) {\n      Array.isArray(action) ? this.addSteps(action) : this.addStep(action);\n    }\n  }\n\n  copy() {\n    const copy = new Work(Work.sdk);\n    copy.addSteps([...this.steps]);\n    return copy;\n  }\n\n  //////////////////////// Run Actions ////////////////////////\n\n  /**\n   *\n   */\n  private async runAction(action: Action | ActionFunction, input: ethers.BigNumber, forward: boolean) {\n    let result;\n    try {\n      if (action instanceof BaseAction) {\n        result = await action.run(input, forward);\n        if (result.value) this.value = this.value.add(result.value);\n        this.stepResults.push(result);\n\n        return result.amountOut;\n      } else if (action instanceof Function) {\n        const result = await action.call(this, input, forward);\n        if (typeof result === 'string') {\n          const actionResult: ActionResult = {\n            name: 'ActionFunction',\n            amountOut: BigNumber.from('0'),\n            encode: () => result,\n            decode: data => ({}),\n          };\n          this.stepResults.push(actionResult);\n\n          return actionResult.amountOut;\n        } else {\n          if (result.value) this.value = this.value.add(result.value);\n          this.stepResults.push(result);\n\n          return result.amountOut;\n        }\n      } else {\n        throw new Error('Received action that is of unknown type');\n      }\n    } catch (e) {\n      console.log(`[farm/estimate] Failed to estimate step ${action.name}`, input.toString(), forward);\n      console.error(e);\n      throw e;\n    }\n  }\n\n  //////////////////////// Estimate ////////////////////////\n\n  /**\n   * Estimate what the workflow would output given this amountIn is the input.\n   * For ex, if we are trading ETH -> BEAN, and you want to spend exactly 5 ETH, estimate()\n   * would tell how much BEAN you'd receive for 5 ETH\n   * @param amountIn Amount to send to workflow as input for estimation\n   * @returns Promise of BigNumber\n   */\n  async estimate(amountIn: ethers.BigNumber): Promise<ethers.BigNumber> {\n    let nextAmount = amountIn;\n\n    // clear any previous results\n    this.stepResults = [];\n\n    for (let i = 0; i < this.steps.length; i += 1) {\n      nextAmount = await this.runAction(this.steps[i], nextAmount, true);\n    }\n\n    return nextAmount;\n  }\n\n  /**\n   * Estimate the min amount to input to the workflow to receive the desiredAmountOut output\n   * For ex, if we are trading ETH -> Bean, and I want exactly 500 BEAN, estimateReversed()\n   * tell me how much ETH will result in 500 BEAN\n   * @param desiredAmountOut The end amount you want the workflow to output\n   * @returns Promise of BigNumber\n   */\n  async estimateReversed(desiredAmountOut: ethers.BigNumber): Promise<ethers.BigNumber> {\n    let nextAmount = desiredAmountOut;\n\n    // clear any previous results\n    this.stepResults = [];\n\n    for (let i = this.steps.length - 1; i >= 0; i -= 1) {\n      nextAmount = await this.runAction(this.steps[i], nextAmount, false);\n    }\n\n    return nextAmount;\n  }\n\n  //////////////////////// Encode ////////////////////////\n\n  /**\n   * Loop over a sequence of pre-estimated steps and encode their\n   * calldata with a slippage value applied to amountOut.\n   *\n   * @fixme throw if this.stepResults is currently empty\n   * @fixme statelessness of individual workflows\n   */\n  private encodeStepsWithSlippage(_slippage: number) {\n    const fnData: string[] = [];\n    for (let i = 0; i < this.stepResults.length; i += 1) {\n      const amountOut = this.stepResults[i].amountOut;\n      const minAmountOut = Work.slip(amountOut, _slippage);\n      /// If the step doesn't have slippage (for ex, wrapping ETH),\n      /// then `encode` should ignore minAmountOut\n      const encoded = this.stepResults[i].encode(minAmountOut);\n      fnData.push(encoded);\n      Work.sdk.debug(`[chain] encoding step ${i}: expected amountOut = ${amountOut}, minAmountOut = ${minAmountOut}`);\n    }\n    return fnData;\n  }\n\n  //////////////////////// Execute ////////////////////////\n\n  /**\n   *\n   * @param amountIn Amount to use as first input to Work\n   * @param slippage A human readable percent value. Ex: 0.1 would mean 0.1% slippage\n   * @returns Promise of a Transaction\n   */\n  async execute(amountIn: ethers.BigNumber, slippage: number): Promise<ContractTransaction> {\n    await this.estimate(amountIn);\n    const data = this.encodeStepsWithSlippage(slippage / 100);\n    const txn = await Work.sdk.contracts.beanstalk.farm(data, { value: this.value });\n\n    return txn;\n  }\n\n  /**\n   * CallStatic version of the execute method. Allows testing the execution of the workflow.\n   * @param amountIn Amount to use as first input to workflow\n   * @param slippage A human readable percent value. Ex: 0.1 would mean 0.1% slippage\n   * @returns Promise of a Transaction\n   */\n  async callStatic(amountIn: ethers.BigNumber, slippage: number): Promise<string[]> {\n    await this.estimate(amountIn);\n    const data = this.encodeStepsWithSlippage(slippage / 100);\n    const txn = await Work.sdk.contracts.beanstalk.callStatic.farm(data, { value: this.value });\n\n    return txn;\n  }\n}\n","import { ethers } from 'ethers';\nimport { Token } from '../../../classes/Token';\nimport { CurveMetaPool__factory, CurvePlainPool__factory } from '../../../constants/generated';\nimport { FarmFromMode, FarmToMode } from '../types';\nimport { Action, ActionResult, BaseAction } from '../types';\n\nexport class Exchange extends BaseAction implements Action {\n  public name: string = 'exchange';\n\n  constructor(\n    private pool: string,\n    private registry: string,\n    private tokenIn: Token,\n    private tokenOut: Token,\n    private fromMode: FarmFromMode = FarmFromMode.INTERNAL_TOLERANT,\n    private toMode: FarmToMode = FarmToMode.INTERNAL\n  ) {\n    super();\n  }\n\n  async run(_amountInStep: ethers.BigNumber, _forward: boolean = true): Promise<ActionResult> {\n    Exchange.sdk.debug(`[workflow:exchange] ${_amountInStep.toString()} ${this.tokenIn.symbol} -> ${this.tokenOut.symbol} ${_forward}`);\n    const [tokenIn, tokenOut] = this.direction(this.tokenIn, this.tokenOut, _forward);\n\n    const registry = Exchange.sdk.contracts.curve.registries[this.registry];\n    if (!registry) throw new Error(`Unknown registry: ${this.registry}`);\n\n    const [i, j] = await registry.callStatic.get_coin_indices(this.pool, tokenIn.address, tokenOut.address, {\n      gasLimit: 10000000,\n    });\n\n    /// Get amount out based on the selected pool\n    const poolAddr = this.pool.toLowerCase();\n    const pools = Exchange.sdk.contracts.curve.pools;\n    let amountOut: ethers.BigNumber | undefined;\n\n    if (poolAddr === pools.tricrypto2.address.toLowerCase()) {\n      amountOut = await pools.tricrypto2.callStatic.get_dy(i, j, _amountInStep, { gasLimit: 10000000 });\n    } else if (poolAddr === pools.pool3.address.toLowerCase()) {\n      amountOut = await pools.pool3.callStatic.get_dy(i, j, _amountInStep, { gasLimit: 10000000 });\n    } else if (this.registry === Exchange.sdk.contracts.curve.registries.metaFactory.address) {\n      amountOut = await CurveMetaPool__factory.connect(this.pool, Exchange.sdk.provider).callStatic['get_dy(int128,int128,uint256)'](\n        i,\n        j,\n        _amountInStep,\n        { gasLimit: 10000000 }\n      );\n    } else if (this.registry === Exchange.sdk.contracts.curve.registries.cryptoFactory.address) {\n      amountOut = await CurvePlainPool__factory.connect(this.pool, Exchange.sdk.provider).callStatic.get_dy(i, j, _amountInStep, {\n        gasLimit: 10000000,\n      });\n    }\n\n    if (!amountOut) throw new Error('No supported pool found');\n\n    return {\n      name: this.name,\n      amountOut,\n      encode: (minAmountOut: ethers.BigNumber) =>\n        Exchange.sdk.contracts.beanstalk.interface.encodeFunctionData('exchange', [\n          this.pool,\n          this.registry,\n          tokenIn.address,\n          tokenOut.address,\n          _amountInStep,\n          minAmountOut,\n          this.fromMode,\n          this.toMode,\n        ]),\n      decode: (data: string) => Exchange.sdk.contracts.beanstalk.interface.decodeFunctionData('exchange', data),\n      data: {\n        pool: this.pool,\n        registry: this.registry,\n        tokenIn: tokenIn.address,\n        tokenOut: tokenOut.address,\n        fromMode: this.fromMode,\n        toMode: this.toMode,\n      },\n    };\n  }\n}\n","import { ethers } from 'ethers';\nimport { Token } from '../../../classes/Token';\nimport { CurveMetaPool, CurveMetaPool__factory,  } from '../../../constants/generated';\nimport { FarmFromMode, FarmToMode } from '../types';\nimport { Action, ActionResult, BaseAction } from '../types';\n\nexport class ExchangeUnderlying extends BaseAction implements Action {\n  public name: string = 'exchangeUnderlying';\n\n  constructor(\n    private pool: string,\n    private tokenIn: Token,\n    private tokenOut: Token,\n    private fromMode: FarmFromMode = FarmFromMode.INTERNAL_TOLERANT,\n    private toMode: FarmToMode = FarmToMode.INTERNAL\n  ) {\n    super();\n  }\n\n  async run(_amountInStep: ethers.BigNumber, forward: boolean = true): Promise<ActionResult> {\n    const [tokenIn, tokenOut] = this.direction(this.tokenIn, this.tokenOut, forward);\n    ExchangeUnderlying.sdk.debug(`[step@exchangeUnderlying] run [${forward ? 'forward' : 'backward'}]`, {\n      pool: this.pool,\n      tokenIn,\n      tokenOut,\n      forward,\n      fromMode: this.fromMode,\n      toMode: this.toMode,\n      _amountInStep,\n    });\n\n    const registry = ExchangeUnderlying.sdk.contracts.curve.registries.metaFactory;\n    const [i, j] = await registry.get_coin_indices(this.pool, tokenIn.address, tokenOut.address, { gasLimit: 1000000 });\n\n    /// Only MetaPools have the ability to exchange_underlying\n    /// FIXME: 3pool also has a single get_dy_underlying method, will we ever use this?\n    const amountOut = await CurveMetaPool__factory.connect(this.pool, ExchangeUnderlying.sdk.provider).callStatic['get_dy_underlying(int128,int128,uint256)'](\n      i, // i = USDT = coins[3] ([0=BEAN, 1=CRV3] => [0=BEAN, 1=DAI, 2=USDC, 3=USDT])\n      j, // j = BEAN = coins[0]\n      _amountInStep,\n      { gasLimit: 10000000 }\n    );\n\n    if (!amountOut) throw new Error('Unexpected missing amountOut');\n\n    return {\n      name: this.name,\n      amountOut,\n      encode: (minAmountOut: ethers.BigNumber) =>\n        ExchangeUnderlying.sdk.contracts.beanstalk.interface.encodeFunctionData('exchangeUnderlying', [\n          this.pool,\n          tokenIn.address,\n          tokenOut.address,\n          _amountInStep,\n          minAmountOut,\n          this.fromMode,\n          this.toMode,\n        ]),\n      decode: (data: string) => ExchangeUnderlying.sdk.contracts.beanstalk.interface.decodeFunctionData('exchangeUnderlying', data),\n      data: {\n        pool: this.pool,\n        tokenIn: this.tokenIn.address,\n        tokenOut: this.tokenOut.address,\n        fromMode: this.fromMode,\n        toMode: this.toMode,\n      },\n    };\n  }\n}\n","import { ethers } from 'ethers';\nimport { FarmToMode } from '../types';\nimport { Action, ActionResult, BaseAction } from '../types';\n\nexport class WrapEth extends BaseAction implements Action {\n  public name: string = 'wrapEth';\n\n  constructor(private toMode: FarmToMode = FarmToMode.INTERNAL) {\n    super();\n  }\n\n  async run(_amountInStep: ethers.BigNumber, _forward: boolean = true): Promise<ActionResult> {\n    return {\n      name: this.name,\n      amountOut: _amountInStep, // amountInStep should be an amount of ETH.\n      value: _amountInStep, // need to use this amount in the txn.\n      encode: (_: ethers.BigNumber) =>\n        WrapEth.sdk.contracts.beanstalk.interface.encodeFunctionData('wrapEth', [\n          _amountInStep, // ignore minAmountOut since there is no slippage\n          this.toMode,\n        ]),\n      decode: (data: string) => WrapEth.sdk.contracts.beanstalk.interface.decodeFunctionData('wrapEth', data),\n    };\n  }\n}\n","import { ethers } from 'ethers';\nimport { FarmToMode } from '../types';\nimport { Action, ActionResult, BaseAction } from '../types';\n\nexport class UnwrapEth extends BaseAction implements Action {\n  public name: string = 'unwrapEth';\n\n  constructor(private toMode: FarmToMode = FarmToMode.EXTERNAL) {\n    super();\n  }\n\n  async run(_amountInStep: ethers.BigNumber, _forward: boolean = true): Promise<ActionResult> {\n    return {\n      name: this.name,\n      amountOut: _amountInStep, // amountInStep should be an amount of ETH.\n      value: _amountInStep, // need to use this amount in the txn.\n      encode: (_: ethers.BigNumber) =>\n        UnwrapEth.sdk.contracts.beanstalk.interface.encodeFunctionData('unwrapEth', [\n          _amountInStep, // ignore minAmountOut since there is no slippage\n          this.toMode,\n        ]),\n      decode: (data: string) => UnwrapEth.sdk.contracts.beanstalk.interface.decodeFunctionData('unwrapEth', data),\n    };\n  }\n}\n","import { ethers } from 'ethers';\nimport { CurveMetaPool__factory, CurvePlainPool__factory } from '../../../constants/generated';\nimport { assert } from '../../../utils';\nimport { FarmFromMode, FarmToMode } from '../types';\nimport { Action, ActionResult, BaseAction } from '../types';\n\nexport class AddLiquidity extends BaseAction implements Action {\n  public name: string = 'addLiquidity';\n\n  constructor(\n    private _pool: string,\n    private _registry: string,\n    private _amounts: readonly [number, number] | readonly [number, number, number],\n    private _fromMode: FarmFromMode = FarmFromMode.INTERNAL_TOLERANT,\n    private _toMode: FarmToMode = FarmToMode.INTERNAL\n  ) {\n    super();\n  }\n\n  async run(_amountInStep: ethers.BigNumber, _forward: boolean = true): Promise<ActionResult> {\n    AddLiquidity.sdk.debug('[step@addLiquidity] run: ', {\n      _pool: this._pool,\n      _registry: this._registry,\n      _amounts: this._amounts,\n      _fromMode: this._fromMode,\n      _toMode: this._toMode,\n      _amountInStep,\n    });\n\n    /// [0, 0, 1] => [0, 0, amountIn]\n    const amountInStep = this._amounts.map(k => (k === 1 ? _amountInStep : ethers.BigNumber.from(0)));\n\n    /// Get amount out based on the selected pool\n    const poolAddr = this._pool.toLowerCase();\n    const pools = AddLiquidity.sdk.contracts.curve.pools;\n    let amountOut;\n\n    /// Case: tricrypto2\n    if (poolAddr === pools.tricrypto2.address.toLowerCase()) {\n      assert(amountInStep.length === 3);\n      amountOut = await pools.tricrypto2.callStatic.calc_token_amount(\n        amountInStep as [any, any, any], // [DAI, USDC, USDT]; assumes that amountInStep is USDT\n        true, // _is_deposit\n        { gasLimit: 10000000 }\n      );\n    } \n    \n    /// Case: 3Pool\n    else if (poolAddr === pools.pool3.address.toLowerCase()) {\n      assert(amountInStep.length === 3);\n      amountOut = await pools.pool3.callStatic.calc_token_amount(\n        amountInStep as [any, any, any],\n        true, // _is_deposit\n        { gasLimit: 10000000 }\n      );\n    } \n    \n    /// Case: Metapools\n    else if (this._registry === AddLiquidity.sdk.contracts.curve.registries.metaFactory.address) {\n      assert(amountInStep.length === 2);\n      amountOut = await CurveMetaPool__factory.connect(this._pool, AddLiquidity.sdk.provider).callStatic['calc_token_amount(uint256[2],bool)'](\n        amountInStep as [any, any],\n        true, // _is_deposit\n        { gasLimit: 10000000 }\n      );\n    } else if (this._registry === AddLiquidity.sdk.contracts.curve.registries.cryptoFactory.address) {\n      assert(amountInStep.length === 2);\n      amountOut = await CurvePlainPool__factory.connect(this._pool, AddLiquidity.sdk.provider).callStatic.calc_token_amount(\n        amountInStep as [any, any],\n        true, // _is_deposit\n        { gasLimit: 10000000 }\n      );\n    }\n\n    if (!amountOut) throw new Error('No supported pool found');\n    AddLiquidity.sdk.debug('[step@addLiquidity] finish: ', {\n      amountInStep: amountInStep.toString(),\n      amountOut: amountOut.toString(),\n    });\n\n    return {\n      name: this.name,\n      amountOut,\n      encode: (minAmountOut: ethers.BigNumber) =>\n        AddLiquidity.sdk.contracts.beanstalk.interface.encodeFunctionData('addLiquidity', [\n          this._pool,\n          this._registry,\n          amountInStep as any[], // could be 2 or 3 elems\n          minAmountOut,\n          this._fromMode,\n          this._toMode,\n        ]),\n      decode: (data: string) => AddLiquidity.sdk.contracts.beanstalk.interface.decodeFunctionData('addLiquidity', data),\n      data: {\n        pool: this._pool,\n        registry: this._registry,\n        fromMode: this._fromMode,\n        toMode: this._toMode,\n      },\n    };\n  }\n}\n","import { ethers } from 'ethers';\nimport { CurveMetaPool__factory, CurvePlainPool__factory } from '../../../constants/generated';\nimport { FarmFromMode, FarmToMode } from '../types';\nimport { Action, ActionResult, BaseAction } from '../types';\n\nexport class RemoveLiquidityOneToken extends BaseAction implements Action {\n  public name: string = 'RemoveLiquidityOneToken';\n\n  constructor(\n    private _pool: string,\n    private _registry: string,\n    private _tokenOut: string,\n    private _fromMode: FarmFromMode = FarmFromMode.INTERNAL_TOLERANT,\n    private _toMode: FarmToMode = FarmToMode.INTERNAL\n  ) {\n    super();\n  }\n\n  async run(_amountInStep: ethers.BigNumber, _forward: boolean = true): Promise<ActionResult> {\n    const registry = RemoveLiquidityOneToken.sdk.contracts.curve.registries.metaFactory;\n    const coins = await registry.callStatic.get_coins(this._pool, { gasLimit: 10000000 });\n    const i = coins.findIndex(addr => addr.toLowerCase() === this._tokenOut.toLowerCase());\n\n    /// FIXME: only difference between this and addLiquidity is the boolean\n    /// Get amount out based on the selected pool\n    const poolAddr = this._pool.toLowerCase();\n    const pools = RemoveLiquidityOneToken.sdk.contracts.curve.pools;\n\n    let amountOut;\n    if (poolAddr === pools.tricrypto2.address.toLowerCase()) {\n      amountOut = await pools.tricrypto2.callStatic.calc_withdraw_one_coin(_amountInStep, i, { gasLimit: 10000000 });\n    } else if (poolAddr === pools.pool3.address.toLowerCase()) {\n      amountOut = await pools.pool3.callStatic.calc_withdraw_one_coin(_amountInStep, i, { gasLimit: 10000000 });\n    } else if (this._registry === RemoveLiquidityOneToken.sdk.contracts.curve.registries.metaFactory.address) {\n      amountOut = await CurveMetaPool__factory.connect(this._pool, RemoveLiquidityOneToken.sdk.provider).callStatic[\n        'calc_withdraw_one_coin(uint256,int128)'\n      ](_amountInStep, i, { gasLimit: 10000000 });\n    } else if (this._registry === RemoveLiquidityOneToken.sdk.contracts.curve.registries.cryptoFactory.address) {\n      amountOut = await CurvePlainPool__factory.connect(this._pool, RemoveLiquidityOneToken.sdk.provider).callStatic.calc_withdraw_one_coin(_amountInStep, i, {\n        gasLimit: 10000000,\n      });\n    }\n\n    if (!amountOut) throw new Error('No supported pool found');\n    RemoveLiquidityOneToken.sdk.debug(`[step@removeLiquidity] amountOut=${amountOut.toString()}`);\n\n    return {\n      name: this.name,\n      amountOut,\n      encode: (minAmountOut: ethers.BigNumber) =>\n        RemoveLiquidityOneToken.sdk.contracts.beanstalk.interface.encodeFunctionData('removeLiquidityOneToken', [\n          this._pool,\n          this._registry,\n          this._tokenOut,\n          _amountInStep,\n          minAmountOut,\n          this._fromMode,\n          this._toMode,\n        ]),\n      decode: (data: string) => RemoveLiquidityOneToken.sdk.contracts.beanstalk.interface.decodeFunctionData('removeLiquidityOneToken', data),\n      data: {},\n    };\n  }\n}\n","import { ethers } from 'ethers';\nimport { FarmFromMode, FarmToMode } from '../types';\nimport { Action, ActionResult, BaseAction } from '../types';\n\nexport class TransferToken extends BaseAction implements Action {\n  public name: string = 'transferToken';\n\n  constructor(\n    private _tokenIn: string,\n    private _recipient: string,\n    private _fromMode: FarmFromMode = FarmFromMode.INTERNAL_TOLERANT,\n    private _toMode: FarmToMode = FarmToMode.INTERNAL\n  ) {\n    super();\n  }\n\n  async run(_amountInStep: ethers.BigNumber, _forward: boolean = true): Promise<ActionResult> {\n    TransferToken.sdk.debug('[step@transferToken] run', {\n      _fromMode: this._fromMode,\n      _toMode: this._toMode,\n      _amountInStep,\n    });\n    return {\n      name: this.name,\n      amountOut: _amountInStep, // transfer exact amount\n      encode: (_: ethers.BigNumber) =>\n        TransferToken.sdk.contracts.beanstalk.interface.encodeFunctionData('transferToken', [\n          this._tokenIn, //\n          this._recipient, //\n          _amountInStep, // ignore minAmountOut since there is no slippage\n          this._fromMode, //\n          this._toMode, //\n        ]),\n      decode: (data: string) => TransferToken.sdk.contracts.beanstalk.interface.decodeFunctionData('transferToken', data),\n    };\n  }\n}\n","import { BeanstalkSDK } from '../BeanstalkSDK';\nimport { FarmFromMode, FarmToMode } from '../farm/types';\nimport { Exchange, ExchangeUnderlying } from './actions/index';\n\nimport { Action } from './types';\n\ntype ActionBuilder = (fromMode?: FarmFromMode, toMode?: FarmToMode) => Action | Action[];\n\nexport class LibraryPresets {\n  static sdk: BeanstalkSDK;\n  public readonly weth2usdt: ActionBuilder;\n  public readonly usdt2bean: ActionBuilder;\n  public readonly usdt2weth: ActionBuilder;\n  public readonly bean2usdt: ActionBuilder;\n  public readonly weth2bean: ActionBuilder;\n  public readonly bean2weth: ActionBuilder;\n\n  constructor(sdk: BeanstalkSDK) {\n    ///////// WETH <> USDT ///////////\n    this.weth2usdt = (fromMode?: FarmFromMode, toMode?: FarmToMode) =>\n      new Exchange(\n        sdk.contracts.curve.pools.tricrypto2.address,\n        sdk.contracts.curve.registries.cryptoFactory.address,\n        sdk.tokens.WETH,\n        sdk.tokens.USDT,\n        fromMode,\n        toMode\n      );\n\n    this.usdt2weth = (fromMode?: FarmFromMode, toMode?: FarmToMode) =>\n      new Exchange(\n        sdk.contracts.curve.pools.tricrypto2.address,\n        sdk.contracts.curve.registries.cryptoFactory.address,\n        sdk.tokens.USDT,\n        sdk.tokens.WETH,\n        fromMode,\n        toMode\n      );\n\n    ///////// BEAN <> USDT ///////////\n    this.usdt2bean = (fromMode?: FarmFromMode, toMode?: FarmToMode) =>\n      new ExchangeUnderlying(sdk.contracts.curve.pools.beanCrv3.address, sdk.tokens.USDT, sdk.tokens.BEAN, fromMode, toMode);\n\n    this.bean2usdt = (fromMode?: FarmFromMode, toMode?: FarmToMode) =>\n      new ExchangeUnderlying(sdk.contracts.curve.pools.beanCrv3.address, sdk.tokens.BEAN, sdk.tokens.USDT, fromMode, toMode);\n\n    //////// WETH <> BEAN\n    this.weth2bean = (fromMode?: FarmFromMode, toMode?: FarmToMode) => [\n      this.weth2usdt(fromMode, FarmToMode.INTERNAL) as Action,\n      this.usdt2bean(FarmFromMode.INTERNAL, toMode) as Action,\n    ];\n    this.bean2weth = (fromMode?: FarmFromMode, toMode?: FarmToMode) => [\n      this.bean2usdt(fromMode, FarmToMode.INTERNAL) as Action,\n      this.usdt2weth(FarmFromMode.INTERNAL, toMode) as Action,\n    ];\n  }\n}\n","import { Work } from './farm/Work';\n\nimport { BeanstalkSDK } from './BeanstalkSDK';\nimport * as ActionLibrary from './farm/actions';\nimport { LibraryPresets } from './farm/LibraryPresets';\n\n// This is the namespace holder for sdk.Works.whatever\nexport class Farm {\n  static sdk: BeanstalkSDK;\n  public readonly actions: typeof ActionLibrary;\n  public presets: LibraryPresets;\n\n  constructor(sdk: BeanstalkSDK) {\n    Farm.sdk = sdk;\n    this.actions = ActionLibrary;\n    this.presets = new LibraryPresets(Farm.sdk);\n  }\n\n  create() {\n    return new Work(Farm.sdk);\n  }\n}\n","import BigNumber from \"bignumber.js\";\nimport { Overrides } from \"ethers\";\nimport { Token } from \"../classes/Token\";\nimport { getSdk } from \"../constants/generated-gql/graphql\";\nimport { DepositTransferStruct } from \"../constants/generated/Beanstalk/Root\";\nimport { assert } from \"../utils\";\nimport { BeanstalkSDK } from \"./BeanstalkSDK\";\nimport { FarmToMode } from \"./farm/types\";\nimport { EIP712Domain, EIP712TypedData, SignedPermit } from \"./permit\";\nimport { DepositTokenPermitMessage, DepositTokensPermitMessage } from \"./silo.utils\";\n\ntype LengthOfArray<T extends readonly any[]> = number extends T[\"length\"] ? never : T[\"length\"]\n\ntype PermitFromLength<Length extends number> = \n  (Length extends 1\n    ? EIP712TypedData<DepositTokenPermitMessage, EIP712Domain>\n    : EIP712TypedData<DepositTokensPermitMessage, EIP712Domain>)\nexport class Root {\n  static sdk : BeanstalkSDK;\n\n  /** @DISCUSS this pattern */\n  static address : string;\n\n  constructor(sdk : BeanstalkSDK) {\n    Root.sdk = sdk;\n    Root.address = sdk.contracts.root.address;\n  }\n\n  /**\n   * Mint ROOT tokens. The `Root.sol` contract supports Beanstalk's \n   * Deposit Transfer permits; this function unpacks a provided\n   * signed permit into the proper argument slots.\n   * \n   * @dev Passing _overrides directly as the last parameter\n   * of a contract method seems to make ethers treat it like\n   * a parameter for the contract call. Instead, we unpack and\n   * thus pass an empty object for overrides if _overrides is undef.\n   */\n  async mint(\n    _depositTransfers: DepositTransferStruct[],\n    _destination: FarmToMode,\n    _permit?: SignedPermit<DepositTokenPermitMessage | DepositTokensPermitMessage>,\n    _overrides?: Overrides\n  ) {\n    if (_permit) {\n      if ((_permit as SignedPermit<DepositTokenPermitMessage>).typedData.message.token) {\n        let permit = _permit as SignedPermit<DepositTokenPermitMessage>;\n        return Root.sdk.contracts.root.mintWithTokenPermit(\n          _depositTransfers,\n          _destination,\n          permit.typedData.message.token,\n          permit.typedData.message.value,\n          permit.typedData.message.deadline,\n          permit.split.v,\n          permit.split.r,\n          permit.split.s,\n          { ..._overrides }\n        );\n      } else if ((_permit as SignedPermit<DepositTokensPermitMessage>).typedData.message.tokens) {\n        let permit = _permit as SignedPermit<DepositTokensPermitMessage>;\n        return Root.sdk.contracts.root.mintWithTokensPermit(\n          _depositTransfers,\n          _destination,\n          permit.typedData.message.tokens,\n          permit.typedData.message.values,\n          permit.typedData.message.deadline,\n          permit.split.v,\n          permit.split.r,\n          permit.split.s,\n          { ..._overrides }\n        );\n      } else {\n        throw new Error('Malformatted permit')\n      }\n    }\n\n    return Root.sdk.contracts.root.mint(\n      _depositTransfers,\n      _destination,\n      { ..._overrides }\n    );\n  }\n\n  /**\n   * Permit the ROOT contract to transfer the user's Deposits.\n   * \n   * @fixme typescript strategy to clarify the return type based on\n   * passage of n = 1 or n > 1\n   */\n  // async permit<\n  //   T extends readonly Token[],\n  //   A extends readonly BigNumber[],\n  // > (\n  //   _tokens: T,\n  //   _amounts: A,\n  // ) : Promise<PermitFromLength<LengthOfArray<T>>> {\n  //   assert(_tokens.length === _amounts.length, \"Root: tokens and amounts length mismatch\");\n\n  //   const tokens  = _tokens.map(t => t.address);\n  //   const amounts = _amounts.map((bn, i) => _tokens[i].stringify(bn));\n  //   const account = await Root.sdk.getAccount();\n\n  //   if (tokens.length === 1) {\n  //     return Root.sdk.silo.permitDepositToken(\n  //       account,\n  //       Root.address,\n  //       tokens[0],\n  //       amounts[0],\n  //     );\n  //   }\n\n  //   return Root.sdk.silo.permitDepositTokens(\n  //     account,\n  //     Root.address,\n  //     tokens,\n  //     amounts,\n  //   );\n  // }\n\n}","import { GraphQLClient } from 'graphql-request';\nimport { ethers } from 'ethers';\nimport { BeanstalkConfig, DataSource, Provider, Reconfigurable, Signer } from '../types';\nimport { enumFromValue } from '../utils';\nimport { addresses, ChainId } from '../constants';\nimport { Tokens } from './tokens';\nimport { Contracts } from './contracts';\n// import { Swap } from './swap';\n\nimport { EventManager } from './events/EventManager';\nimport { Silo } from './silo';\nimport { Sun } from './sun';\nimport { Sdk as Queries, getSdk as getQueries } from '../constants/generated-gql/graphql';\nimport { Farm } from './farm';\nimport { Permit } from './permit';\nimport { Root } from './root';\n\nexport class BeanstalkSDK {\n  public DEBUG: boolean;\n  public signer?: Signer;\n  public provider: Provider;\n  public providerOrSigner: Signer | Provider;\n  public source: DataSource;\n\n  //\n  public readonly chainId: ChainId;\n\n  //\n  public readonly addresses: typeof addresses;\n  public readonly contracts: Contracts;\n  public readonly tokens: Tokens;\n  public readonly graphql: GraphQLClient;\n  public readonly queries: Queries;\n\n  //\n  public readonly farm: Farm;\n  // public readonly swap: Swap;\n  public readonly silo: Silo;\n  public readonly events: EventManager;\n  public readonly sun: Sun;\n  public readonly permit: Permit;\n  public readonly root: Root;\n\n  constructor(config?: BeanstalkConfig) {\n    this.handleConfig(config);\n\n    // FIXME\n    // @ts-ignore\n    this.chainId = enumFromValue(this.provider?.network?.chainId ?? 1, ChainId);\n    this.source = config?.source || DataSource.SUBGRAPH;\n\n    // Globals\n    this.addresses = addresses;\n    this.contracts = new Contracts(this);\n    this.tokens = new Tokens(this);\n    this.graphql = new GraphQLClient(config?.subgraphUrl || 'https://graph.node.bean.money/subgraphs/name/beanstalk');\n    this.queries = getQueries(this.graphql);\n\n    // Facets\n    // this.swap = new Swap(this);\n    this.silo = new Silo(this);\n    this.events = new EventManager(this);\n    this.sun = new Sun(this);\n    this.permit = new Permit(this);\n    this.root = new Root(this);\n\n    // Internal\n    this.farm = new Farm(this);\n  }\n\n  handleConfig(config: BeanstalkConfig = {}) {\n    if (config.rpcUrl) {\n      config.provider = this.getProviderFromUrl(config.rpcUrl);\n    }\n\n    this.signer = config.signer;\n    if (!config.provider && !config.signer) {\n      console.log('WARNING: No provider or signer specified, using DefaultProvider.');\n      this.provider = ethers.getDefaultProvider();\n    } else {\n      this.provider = config.signer?.provider ?? config.provider!;\n    }\n    this.providerOrSigner = config.signer ?? config.provider!;\n    this.DEBUG = config.DEBUG ?? false;\n\n    this.source = DataSource.LEDGER; // FIXME\n  }\n\n  debug(...args: any[]) {\n    if (!this.DEBUG) return;\n    console.debug(...args);\n  }\n\n  getProviderFromUrl(url: string): Provider {\n    if (url.startsWith('ws')) {\n      return new ethers.providers.WebSocketProvider(url);\n    }\n    if (url.startsWith('http')) {\n      return new ethers.providers.JsonRpcProvider();\n    }\n\n    throw new Error('rpcUrl is invalid');\n  }\n\n  async getAccount(_account?: string): Promise<string> {\n    if (_account) return _account.toLowerCase();\n    if (!this.signer) throw new Error('Cannot get account without a signer');\n    const account = await this.signer.getAddress();\n    if (!account) throw new Error('Failed to get account from signer');\n    return account.toLowerCase();\n  }\n\n  deriveSource<T extends { source?: DataSource }>(config?: T): DataSource {\n    return config?.source || this.source;\n  }\n\n  deriveConfig<T extends BeanstalkConfig>(key: keyof Reconfigurable, _config?: T): BeanstalkConfig[typeof key] {\n    return _config?.[key] || this[key];\n  }\n}\n","import { BigNumber } from 'ethers';\nimport { formatUnits, parseUnits, commify } from 'ethers/lib/utils';\n\nexport function assert(value: boolean, message?: string): asserts value;\nexport function assert<T>(value: T | null | undefined, message?: string): asserts value is T;\nexport function assert(value: any, message?: string) {\n  if (value === false || value === null || typeof value === 'undefined') {\n    throw new Error(message || 'Assertion failed');\n  }\n}\n\n/**\n *\n * @export\n * @class DecimalBigNumber\n */\n\nexport class DecimalBigNumber {\n  private _decimals: number;\n  private _value: BigNumber;\n\n  /**\n   * Creates a new instance of `DecimalBigNumber`.\n   *\n   * @description This class expects and suggests that numbers be handled using `DecimalBigNumber`, instead of the inherently inaccurate\n   * use of `number` and `string` types.\n   *\n   * The constructor accepts the following as inputs to the number parameter:\n   * - `BigNumber` (from @ethersproject/bignumber): to easily shift from `BigNumber` used in smart contracts to `DecimalBigNumber`\n   * - `string`: to take input from the user\n   *\n   * Given these design decisions, there are some recommended approaches:\n   * - Obtain user input with type text, instead of a number, in order to retain precision. e.g. `<input type=\"text\" />`\n   * - Where a `number` value is present, convert it to a `DecimalBigNumber` in the manner the developer deems appropriate. This will most commonly be `new DecimalBigNumber((1000222000.2222).toString(), 4)`. While a convenience method could be offered, it could lead to unexpected behaviour around precision.\n   *\n   * @param value the BigNumber or string used to initialize the object\n   * @param decimals the number of decimal places supported by the number. If `number` is a string, this parameter is optional.\n   * @returns a new, immutable instance of `DecimalBigNumber`\n   */\n  constructor(value: string, decimals?: number);\n  constructor(value: BigNumber, decimals: number);\n  constructor(value: BigNumber | string, decimals?: number) {\n    if (typeof value === 'string') {\n      const _value = value.trim() === '' || isNaN(Number(value)) ? '0' : value;\n      const _decimals =\n        decimals === undefined ? this._inferDecimalAmount(value) : this._ensurePositive(decimals);\n      const formatted = this._setDecimalAmount(_value, _decimals);\n\n      this._value = parseUnits(formatted, _decimals);\n      this._decimals = _decimals;\n\n      return;\n    }\n\n    assert(decimals !== undefined, 'Decimal cannot be undefined');\n\n    this._value = value;\n    this._decimals = decimals;\n  }\n\n  private _inferDecimalAmount(value: string): number {\n    const [, decimalStringOrUndefined] = value.split('.');\n\n    return decimalStringOrUndefined?.length || 0;\n  }\n\n  /**\n   * Sets a value to a specific decimal amount\n   *\n   * Trims unnecessary decimals\n   * Or pads decimals if needed\n   *\n   * @param value Input value as a string\n   * @param decimals Desired decimal amount\n   */\n  private _setDecimalAmount(value: string, decimals: number): string {\n    const [integer, _decimalsOrUndefined] = value.split('.');\n\n    const _decimals = _decimalsOrUndefined || '';\n\n    const paddingRequired = this._ensurePositive(decimals - _decimals.length);\n\n    return integer + '.' + _decimals.substring(0, decimals) + '0'.repeat(paddingRequired);\n  }\n\n  /**\n   * Ensures the desired decimal amount is positive\n   */\n  private _ensurePositive(decimals: number) {\n    return Math.max(0, decimals);\n  }\n\n  /**\n   * Converts this value to a BigNumber\n   *\n   * Often used when passing this value as\n   * an argument to a contract method\n   */\n  public toBigNumber(decimals?: number): BigNumber {\n    return decimals === undefined\n      ? this._value\n      : new DecimalBigNumber(this.toString(), decimals)._value;\n  }\n\n  /**\n   * Converts this value to a string\n   *\n   * By default, the string returned will:\n   * - Have the same decimal amount that it was initialized with\n   * - Have trailing zeroes removed\n   * - Not have thousands separators\n   *\n   * This ensures that the number string is accurate.\n   *\n   * To override any of these settings, add the `args` object as a parameter.\n   *\n   * @param args an object containing any of the properties: decimals, trim, format\n   * @returns a string version of the number\n   */\n  public toString({\n    decimals,\n    trim = true,\n    format = false,\n  }: {\n    trim?: boolean;\n    format?: boolean;\n    decimals?: number;\n  } = {}): string {\n    let result = formatUnits(this._value, this._decimals);\n\n    // Add thousands separators\n    if (format) result = commify(result);\n\n    // We default to the number of decimal places specified\n    const _decimals = decimals === undefined ? this._decimals : this._ensurePositive(decimals);\n    result = this._setDecimalAmount(result, _decimals);\n\n    // We default to trimming trailing zeroes (and decimal points), unless there is an override\n    if (trim) result = result.replace(/(?:\\.|(\\..*?))\\.?0*$/, '$1');\n\n    return result;\n  }\n\n  /**\n   * @deprecated\n   * Please avoid using this method.\n   * If used for calculations: rather than converting this DecimalBigNumber\n   * \"down\" to a number, convert the other number \"up\" to a DecimalBigNumber.\n   *\n   * Used when performing approximate calculations with\n   * the number where precision __is not__ important.\n   */\n  public toApproxNumber(): number {\n    return parseFloat(this.toString());\n  }\n\n  /**\n   * Determines if the two values are equal\n   */\n  public eq(value: DecimalBigNumber | string): boolean {\n    const valueAsDBN = value instanceof DecimalBigNumber ? value : new DecimalBigNumber(value);\n\n    // Normalize decimals to the largest of the two values\n    const largestDecimalAmount = Math.max(valueAsDBN._decimals, this._decimals);\n\n    // Normalize values to the correct decimal amount\n    const normalisedThis = new DecimalBigNumber(this.toString(), largestDecimalAmount);\n    const normalisedValue = new DecimalBigNumber(valueAsDBN.toString(), largestDecimalAmount);\n\n    return normalisedThis._value.eq(normalisedValue._value);\n  }\n\n  /**\n   * Subtracts this value by the value provided\n   */\n  public sub(value: DecimalBigNumber | string): DecimalBigNumber {\n    const valueAsDBN = value instanceof DecimalBigNumber ? value : new DecimalBigNumber(value);\n\n    // Normalize decimals to the largest of the two values\n    const largestDecimalAmount = Math.max(valueAsDBN._decimals, this._decimals);\n\n    // Normalize values to the correct decimal amount\n    const normalisedThis = new DecimalBigNumber(this.toString(), largestDecimalAmount);\n    const normalisedValue = new DecimalBigNumber(valueAsDBN.toString(), largestDecimalAmount);\n\n    return new DecimalBigNumber(\n      normalisedThis._value.sub(normalisedValue._value),\n      largestDecimalAmount,\n    );\n  }\n\n  /**\n   * Sums this value and the value provided\n   */\n  public add(value: DecimalBigNumber | string): DecimalBigNumber {\n    const valueAsDBN = value instanceof DecimalBigNumber ? value : new DecimalBigNumber(value);\n\n    // Normalize decimals to the largest of the two values\n    const largestDecimalAmount = Math.max(valueAsDBN._decimals, this._decimals);\n\n    // Normalize values to the correct decimal amount\n    const normalisedThis = new DecimalBigNumber(this.toString(), largestDecimalAmount);\n    const normalisedValue = new DecimalBigNumber(valueAsDBN.toString(), largestDecimalAmount);\n\n    return new DecimalBigNumber(\n      normalisedThis._value.add(normalisedValue._value),\n      largestDecimalAmount,\n    );\n  }\n\n  public isPositive(): boolean {\n    return this._value.gte(0);\n  }\n\n  /**\n   * Determines if this value is greater than the provided value\n   */\n  public gt(value: DecimalBigNumber | string): boolean {\n    const valueAsDBN = value instanceof DecimalBigNumber ? value : new DecimalBigNumber(value);\n\n    // Normalize decimals to the largest of the two values\n    const largestDecimalAmount = Math.max(valueAsDBN._decimals, this._decimals);\n\n    // Normalize values to the correct decimal amount\n    const normalisedThis = new DecimalBigNumber(this.toString(), largestDecimalAmount);\n    const normalisedValue = new DecimalBigNumber(valueAsDBN.toString(), largestDecimalAmount);\n\n    return normalisedThis._value.gt(normalisedValue._value);\n  }\n\n  /**\n   * Determines if this value is less than the provided value\n   */\n  public lt(value: DecimalBigNumber | string): boolean {\n    const valueAsDBN = value instanceof DecimalBigNumber ? value : new DecimalBigNumber(value);\n\n    // Normalize decimals to the largest of the two values\n    const largestDecimalAmount = Math.max(valueAsDBN._decimals, this._decimals);\n\n    // Normalize values to the correct decimal amount\n    const normalisedThis = new DecimalBigNumber(this.toString(), largestDecimalAmount);\n    const normalisedValue = new DecimalBigNumber(valueAsDBN.toString(), largestDecimalAmount);\n\n    return normalisedThis._value.lt(normalisedValue._value);\n  }\n\n  /**\n   * Multiplies this value by the provided value\n   */\n  public mul(value: DecimalBigNumber | string): DecimalBigNumber {\n    const valueAsDBN = value instanceof DecimalBigNumber ? value : new DecimalBigNumber(value);\n\n    const product = this._value.mul(valueAsDBN._value);\n\n    // Multiplying two BigNumbers produces a product with a decimal\n    // amount equal to the sum of the decimal amounts of the two input numbers\n    return new DecimalBigNumber(product, this._decimals + valueAsDBN._decimals);\n  }\n\n  /**\n   * Divides this value by the provided value\n   *\n   * By default, this returns a value whose decimal amount is equal\n   * to the sum of the decimal amounts of the two values used.\n   * If this isn't enough, you can specify a desired\n   * decimal amount using the second function argument.\n   *\n   * @param decimals The expected decimal amount of the output value\n   */\n  public div(value: DecimalBigNumber | string, decimals?: number): DecimalBigNumber {\n    const valueAsDBN = value instanceof DecimalBigNumber ? value : new DecimalBigNumber(value);\n\n    const _decimals =\n      decimals === undefined\n        ? this._decimals + valueAsDBN._decimals\n        : this._ensurePositive(decimals);\n\n    // When we divide two BigNumbers, the result will never\n    // include any decimal places because BigNumber only deals\n    // with whole integer values. Therefore, in order for us to\n    // include a specific decimal amount in our calculation, we need to\n    // normalize the decimal amount of the two numbers, such that the difference\n    // in their decimal amount is equal to the expected decimal amount\n    // of the result, before we do the calculation\n    //\n    // E.g:\n    // 22/5 = 4.4\n    //\n    // But ethers would return:\n    // 22/5 = 4 (no decimals)\n    //\n    // So before we calculate, we add n padding zeros to the\n    // numerator, where n is the expected decimal amount of the result:\n    // 220/5 = 44\n    //\n    // Normalized to the expected decimal amount of the result\n    // 4.4\n\n    const normalisedThis = new DecimalBigNumber(this.toString(), _decimals + valueAsDBN._decimals);\n\n    const quotient = normalisedThis._value.div(valueAsDBN._value);\n\n    // Return result with the expected output decimal amount\n    return new DecimalBigNumber(quotient, _decimals);\n  }\n\n  public abs(): DecimalBigNumber {\n    if (this._value.lt(0)) {\n      return new DecimalBigNumber(this._value.mul('-1'), this._decimals);\n    } else {\n      return this;\n    }\n  }\n\n  //only works for positive exponents\n  public pow(n: number): DecimalBigNumber {\n    if (n==0) return new DecimalBigNumber('1');\n    else if (n==1) return this;\n    else if (this.eq('0') && n !== 0) return new DecimalBigNumber('0');\n    else {\n      var z = new DecimalBigNumber(this._value, this._decimals);\n      for(let i = 1; i < n; i++) {\n        z = z.mul(this);\n      }\n      return z;\n    }\n  }\n}\n\n\n\n// var dbn1 = new DecimalBigNumber('22')\n// var dbn2 = new DecimalBigNumber('5')\n// var dbn3 = dbn1.div(dbn2, 24);\n// var dbn4 = dbn2.pow(2)\n// console.log(dbn3.toString())\n// export class DecimalBigNumber {\n//   constructor(readonly value: BigNumber, readonly divisor: BigNumber) {\n//     this.value = value;\n//     this.divisor = divisor;\n//   }\n\n//   static fromBN(value: BigNumber, decimals: number): DecimalBigNumber {\n//     return new DecimalBigNumber(value, divisorFromDecimals(decimals));\n//   }\n\n//   /**\n//    * Extract as a BigNumber with the specified number of decimal places\n//    */\n//   toBN(decimals: number): BigNumber {\n//     return this.rescaledValue(divisorFromDecimals(decimals));\n//   }\n\n//   /**\n//    * Create by parsing the floating point string using ethers.utils.parseUnits\n//    */\n//   static parseUnits(value: string, totalDecimals: number): DecimalBigNumber {\n//     let [int, safeDecimals] = value.split('.');\n\n//     if (safeDecimals && safeDecimals.length > totalDecimals) {\n//       safeDecimals = safeDecimals.substring(0, totalDecimals);\n//     }\n\n//     const safeValue = safeDecimals ? `${int}.${safeDecimals}` : int;\n//     const bnIn = ethers.utils.parseUnits(safeValue, totalDecimals);\n//     return DecimalBigNumber.fromBN(bnIn, totalDecimals);\n//   }\n\n//   /**\n//    * A floating point string representation using ethers.utils.formatUnits. If\n//    * decimals is not specified, the full precision will used\n//    */\n//   formatUnits(decimals?: number): string {\n//     if (decimals == undefined) {\n//       decimals = this.getDecimals();\n//     }\n//     return ethers.utils.formatUnits(this.toBN(decimals), decimals);\n//   }\n\n//   /**\n//    * Returns the number of decimal places stored\n//    */\n//   getDecimals(): number {\n//     let decimals = 0;\n//     let divisor = this.divisor;\n//     while (divisor.gt(1)) {\n//       divisor = divisor.div(10);\n//       decimals += 1;\n//     }\n//     return decimals;\n//   }\n\n//   /**\n//    * add: to preserve precision, output will have the max divisor of the\n//    * two inputs\n//    */\n//   add(other: DecimalBigNumber): DecimalBigNumber {\n//     const divisor = maxBN(this.divisor, other.divisor);\n//     const value = this.rescaledValue(divisor).add(other.rescaledValue(divisor));\n//     return new DecimalBigNumber(value, divisor);\n//   }\n\n//   /**\n//    * sub: to preserve precision, output will have the max divisor of the\n//    * two inputs\n//    */\n//   sub(other: DecimalBigNumber): DecimalBigNumber {\n//     const divisor = maxBN(this.divisor, other.divisor);\n//     const value = this.rescaledValue(divisor).sub(other.rescaledValue(divisor));\n//     return new DecimalBigNumber(value, divisor);\n//   }\n\n//   /**\n//    * mul: to preserve precision, output will have the combined divisor of the\n//    * two inputs\n//    */\n//   mul(other: DecimalBigNumber): DecimalBigNumber {\n//     const divisor = this.divisor.mul(other.divisor);\n//     const value = this.value.mul(other.value);\n//     return new DecimalBigNumber(value, divisor);\n//   }\n\n//   /**\n//    * div: can always lose precision. Hence the caller must provide the\n//    * target number of decimal places.\n//    * Note this rounds 'half away from zero'\n//    */\n//   div(other: DecimalBigNumber, targetDecimals: number): DecimalBigNumber {\n//     validateInteger(targetDecimals);\n//     const divisor = BigNumber.from(10).pow(targetDecimals);\n\n//     const numerator = this.value.mul(other.divisor).mul(divisor);\n//     const denominator = other.value.mul(this.divisor);\n//     let truncatedResult = numerator.div(denominator);\n\n//     // The divisions truncate the results to integer parts only.\n//     // So in order to round, calculate the fractional remainder with:\n//     //    [(numerator x 10) / denominator] - [(numerator/denominator) x 10]\n//     const resultTimesTen = numerator.mul(10).div(denominator);\n//     const remainder = resultTimesTen.abs().sub(truncatedResult.abs().mul(10));\n\n//     const roundup = remainder.gte(5);\n//     if (roundup) {\n//       truncatedResult = truncatedResult.isNegative() ? truncatedResult.sub(1) : truncatedResult.add(1);\n//     }\n\n//     return new DecimalBigNumber(truncatedResult, divisor);\n//   }\n\n//   lt(other: DecimalBigNumber): boolean {\n//     const divisor = maxBN(this.divisor, other.divisor);\n//     return this.rescaledValue(divisor).lt(other.rescaledValue(divisor));\n//   }\n\n//   lte(other: DecimalBigNumber): boolean {\n//     const divisor = maxBN(this.divisor, other.divisor);\n//     return this.rescaledValue(divisor).lte(other.rescaledValue(divisor));\n//   }\n\n//   gt(other: DecimalBigNumber): boolean {\n//     const divisor = maxBN(this.divisor, other.divisor);\n//     return this.rescaledValue(divisor).gt(other.rescaledValue(divisor));\n//   }\n\n//   isZero(): boolean {\n//     return this.value.isZero();\n//   }\n\n//   min(other: DecimalBigNumber): DecimalBigNumber {\n//     return this.lt(other) ? this : other;\n//   }\n\n//   // Note this rounds 'half away from zero'\n//   private rescaledValue(todivisor: BigNumber): BigNumber {\n//     let result = this.value.mul(todivisor).div(this.divisor);\n//     if (this.value.isZero() || this.divisor.eq(1)) {\n//       return result;\n//     }\n\n//     const roundup = this.value\n//       .abs()\n//       .mul(todivisor)\n//       .mod(this.divisor)\n//       .gte(this.divisor.div(2));\n//     if (roundup) {\n//       result = result.isNegative() ? result.sub(1) : result.add(1);\n//     }\n\n//     return result;\n//   }\n// }\n\n// export const DBN_ZERO = DecimalBigNumber.fromBN(BigNumber.from(0), 0);\n// export const DBN_ONE_HUNDRED = DecimalBigNumber.fromBN(BigNumber.from(100), 0);\n\n// export function minDBN(v1: DecimalBigNumber, v2: DecimalBigNumber): DecimalBigNumber {\n//   return v1.lte(v2) ? v1 : v2;\n// }\n\n// function divisorFromDecimals(decimals: number): BigNumber {\n//   validateInteger(decimals);\n//   return BigNumber.from(10).pow(decimals);\n// }\n\n// export function maxBN(v1: BigNumber, v2: BigNumber): BigNumber {\n//   return v1.gte(v2) ? v1 : v2;\n// }\n\n// function validateInteger(v: number): void {\n//   if (v % 1) {\n//     throw new RangeError(`Expected integer, found ${v}`);\n//   }\n// }\n"],"names":["DataSource","displayFullBN","bn","maxDecimals","minDecimals","toNumber","toLocaleString","minimumFractionDigits","maximumFractionDigits","toBaseUnitBN","decimalAmt","decimals","amt","BigNumber","base","decimalsBN","digits","pow","multipliedBy","integerValue","toTokenUnitsBN","tokenAmt","toString","dividedBy","toStringBaseUnitBN","toFixed","enumFromValue","val","_enum","enumName","Object","keys","find","k","Error","assert","condition","message","zeros","numZeros","padEnd","logger","Logger","_constructorGuard","MAX_SAFE","_warnedToStringRadix","BeanNumber","constructorGuard","hex","_hex","_isBigNumber","_decimals","throwError","errors","UNSUPPORTED_OPERATION","operation","defineProperty","configurable","writable","fromTwos","value","toBeanNumbe","toBN","toTwos","abs","from","substring","add","other","sub","div","o","isZero","throwFault","mul","mod","isNeg","umod","and","isNegative","or","xor","mask","maskn","shl","shln","shr","shrn","eq","lt","lte","gt","gte","error","toBigInt","BigInt","e","arguments","length","warn","UNEXPECTED_ARGUMENT","toHexString","toJSON","key","type","match","toHex","BN","throwArgumentError","String","anyValue","isBytes","hexlify","isHexString","isBigNumber","fault","params","NUMERIC_FAULT","names","NegativeOne","parseUnits","unitName","index","indexOf","parseFixed","undefined","getMultiplier","multiplier","negative","comps","split","whole","fraction","wholeValue","fractionValue","wei","trim","numberString","decimalComponents","decimalsFound","decimalsToTrim","substr","fromBigNumber","console","log","n","fromHuman","int","safeDecimals","safeValue","result","prototype","toHuman","utils","formatUnits","display","allowNegative","fakeDiv","_divisor","divisor","quotient","remainder","displayFull","decimals2","ChainId","TESTNET_CHAINS","Set","LOCALHOST","CUJO","Address","make","input","addresses","MAINNET","assign","lowerCaseAddresses","toLowerCase","get","chainId","has","set","newAddress","BEANSTALK","BEANSTALK_PRICE","BEANSTALK_FERTILIZER","BARNRAISE_CUSTODIAN","BEANFT_GENESIS","BEANFT_WINTER_ADDRESSES","BEAN","ROOT","UNRIPE_BEAN","UNRIPE_BEAN_CRV3","WETH","DAI","USDC","USDT","CRV3","LUSD","BEAN_CRV3","POOL3","TRICRYPTO2","POOL_REGISTRY","META_FACTORY","CRYPTO_FACTORY","CURVE_ZAP","BEAN_ETH_UNIV2_LP","BEAN_LUSD_LP","NEW_BeanNumber","ZERO_BN","MAX_UINT256","bigNumberResult","hasOwnProperty","Token","sdk","address","metadata","rewards","name","displayName","symbol","logo","color","displayDecimals","isLP","isUnripe","getStalk","bdv","stalk","times","getSeeds","seeds","equals","setMetadata","stringify","amount","stringifyToDecimal","tokenResult","BeanstalkToken","getContract","getBalance","Promise","resolve","getAllowance","parseInt","getTotalSupply","_abi","inputs","internalType","outputs","stateMutability","anonymous","indexed","components","Beanstalk__factory","createInterface","Interface","connect","signerOrProvider","Contract","abi","BeanstalkFertilizer__factory","_bytecode","isSuperArgs","xs","Root__factory","args","deploy","overrides","getDeployTransaction","attach","signer","ContractFactory","bytecode","gas","Curve3Pool__factory","CurveTriCrypto2Pool__factory","CurveCryptoFactory__factory","CurveMetaFactory__factory","CurveRegistry__factory","CurveMetaPool__factory","CurvePlainPool__factory","CurveZap__factory","constant","payable","ERC20__factory","ERC20Permit__factory","ERC20Token","contract","providerOrSigner","getName","tokenAddress","tok","provider","getDecimals","account","balanceOf","then","err","spender","allowance","totalSupply","approve","NativeToken","Permit","signatureToRSV","signature","r","s","v","sign","owner","typedData","getAccount","signerAddress","types","_unused","signTypedData","domain","_signTypedData","rawSignature","NONCES_FN","EIP712_DOMAIN","Tokens","ETH","BEAN_CRV3_LP","STALK","SEEDS","PODS","SPROUTS","RINSABLE_SPROUTS","unripeTokens","unripeUnderlyingTokens","siloWhitelist","erc20Tokens","balanceTokens","crv3Underlying","map","_createTypedERC2612Data","EIP712Domain","primaryType","Map","findByAddress","_deriveAddress","_deriveToken","_token","_balanceStructToTokenBalance","token","internal","internalBalance","external","externalBalance","total","totalBalance","_account","balance","contracts","beanstalk","getAllBalance","getBalances","_tokens","tokens","Array","tokenAddresses","balances","getAllBalances","results","forEach","_getEIP712DomainForToken","all","getNetwork","network","version","verifyingContract","permitERC2612","_nonce","_deadline","deadline","nonces","nonce","Contracts","root","fertilizer","curve","beanstalkAddress","rootAddress","beanstalkFertilizerAddress","pool3Address","tricrypto2Address","beancrv3Address","poolRegistryAddress","metaFactoryAddress","cryptoFactoryAddress","zapAddress","pool3","tricrypto2","beanCrv3","poolRegistry","metaFactory","cryptoFactory","zap","pools","registries","EventType","sortEvents","a","b","diff","blockNumber","logIndex","reduceEvent","prev","push","event","transactionHash","transactionIndex","Blocks","BEANSTALK_GENESIS_BLOCK","BIP10_COMMITTED_BLOCK","EXPLOIT_BLOCK","FERTILIZER_LAUNCH_BLOCK","EventManager","filters","getSiloEvents","_fromBlock","_toBlock","fromBlockOrGenesis","toBlock","queryFilter","AddDeposit","AddWithdrawal","RemoveWithdrawal","RemoveWithdrawals","RemoveDeposit","RemoveDeposits","reduceAndSort","getFieldEvents","getRawEventsByType","FIELD","rawEvents","getMarketEvents","MARKET","getFertilizerEvents","FERTILIER","eventType","fromBlockOrBIP10","fromBlockOrFertLaunch","SILO","Harvest","PlotTransfer","PodListingCreated","PodListingFilled","PodOrderCreated","PodOrderCancelled","PodOrderFilled","TransferSingle","TransferBatch","events","flattenDeep","reduce","sort","SupportedEvents","SupportedEventsSet","setToMap","EventProcessor","epp","initialState","plots","deposits","withdrawals","listings","orders","whitelist","ingest","ingestAll","data","getToken","debug","_upsertDeposit","existing","_removeDeposit","season","existingDeposit","tokDeposits","seasons","amounts","_upsertWithdrawal","_removeWithdrawal","_amount","existingWithdrawal","tokWithdrawals","_parseWithdrawalCrates","currentSeason","withdrawnBalance","claimableBalance","withdrawn","claimable","szn","plus","crates","sortCratesBySeason","direction","m","minus","Silo","_createTypedDepositTokenPermitData","_createTypedDepositTokensPermitData","_sortTokenMapByWhitelist","copy","ordered","_","getWhitelist","options","source","deriveConfig","SUBGRAPH","queries","getSiloWhitelist","query","whitelistTokens","_makeTokenSiloBalance","deposited","_applyDeposit","state","rawCrate","crate","_applyWithdrawal","_sortCrates","sun","getSeason","LEDGER","seasonBN","processor","ethers","_crates","getSiloBalance","farmer","tokenBalance","getSiloBalances","prep","handleDeposit","handleWithdrawal","pickCrates","sortedCrates","remaining","some","thisAmount","permitDepositToken","_getEIP712Domain","depositPermitNonces","permitDepositTokens","values","Sun","AddDeposit_OrderBy","Beanstalk_OrderBy","Chop_OrderBy","DewhitelistToken_OrderBy","Event_OrderBy","Farmer_OrderBy","FertilizerBalance_OrderBy","FertilizerToken_OrderBy","Fertilizer_OrderBy","FieldDailySnapshot_OrderBy","FieldEvent_OrderBy","FieldHourlySnapshot_OrderBy","Field_OrderBy","Harvest_OrderBy","Incentive_OrderBy","MarketStatus","MarketplaceEvent_OrderBy","MetapoolOracle_OrderBy","Network","OrderDirection","Plot_OrderBy","PodFill_OrderBy","PodListingCancelled_OrderBy","PodListingCreated_OrderBy","PodListingFilled_OrderBy","PodListing_OrderBy","PodMarketplaceDailySnapshot_OrderBy","PodMarketplaceHourlySnapshot_OrderBy","PodMarketplace_OrderBy","PodOrderCancelled_OrderBy","PodOrderCreated_OrderBy","PodOrderFilled_OrderBy","PodOrder_OrderBy","PodTransfer_OrderBy","ProtocolType","RemoveDeposit_OrderBy","RewardTokenType","RewardToken_OrderBy","Reward_OrderBy","Season_OrderBy","SeedChange_OrderBy","SiloAssetDailySnapshot_OrderBy","SiloAssetHourlySnapshot_OrderBy","SiloAsset_OrderBy","SiloDailySnapshot_OrderBy","SiloDeposit_OrderBy","SiloEvent_OrderBy","SiloHourlySnapshot_OrderBy","SiloWithdraw_OrderBy","SiloYield_OrderBy","Silo_OrderBy","StalkChange_OrderBy","Token_OrderBy","Transaction_OrderBy","WhitelistToken_OrderBy","_SubgraphErrorPolicy_","PodListingFragmentDoc","gql","GetListingByIndexDocument","GetSiloBalanceDocument","GetSiloBalancesDocument","GetSiloWhitelistDocument","defaultWrapper","action","_operationName","_operationType","getSdk","client","withWrapper","getListingByIndex","variables","requestHeaders","wrappedRequestHeaders","request","FarmFromMode","FarmToMode","BaseAction","setSDK","_x1","_x2","_forward","Work","steps","stepResults","slip","_slippage","Math","floor","SLIPPAGE_PRECISION","addStep","Function","addSteps","actions","isArray","runAction","forward","run","amountOut","call","actionResult","encode","decode","estimate","amountIn","nextAmount","i","estimateReversed","desiredAmountOut","encodeStepsWithSlippage","fnData","minAmountOut","encoded","execute","slippage","farm","txn","callStatic","Exchange","pool","registry","tokenIn","tokenOut","fromMode","toMode","INTERNAL_TOLERANT","INTERNAL","_amountInStep","get_coin_indices","gasLimit","j","poolAddr","get_dy","encodeFunctionData","decodeFunctionData","ExchangeUnderlying","WrapEth","UnwrapEth","EXTERNAL","AddLiquidity","_pool","_registry","_amounts","_fromMode","_toMode","amountInStep","calc_token_amount","RemoveLiquidityOneToken","_tokenOut","get_coins","coins","findIndex","addr","calc_withdraw_one_coin","TransferToken","_tokenIn","_recipient","LibraryPresets","weth2usdt","usdt2bean","usdt2weth","bean2usdt","weth2bean","bean2weth","Farm","presets","ActionLibrary","create","Root","mint","_depositTransfers","_destination","_permit","_overrides","permit","mintWithTokenPermit","mintWithTokensPermit","BeanstalkSDK","config","DEBUG","graphql","silo","handleConfig","GraphQLClient","subgraphUrl","getQueries","rpcUrl","getProviderFromUrl","getDefaultProvider","url","startsWith","providers","WebSocketProvider","JsonRpcProvider","getAddress","deriveSource","_config","DecimalBigNumber","_value","isNaN","Number","_inferDecimalAmount","_ensurePositive","formatted","_setDecimalAmount","decimalStringOrUndefined","integer","_decimalsOrUndefined","paddingRequired","repeat","max","toBigNumber","format","commify","replace","toApproxNumber","parseFloat","valueAsDBN","largestDecimalAmount","normalisedThis","normalisedValue","isPositive","product","z"],"mappings":"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,IAAE,CAAC,EAAE,OAAO,IAAI,CAAC,KACtB,IAAI,IAAI,CAACzD,EAAE,CAAC,GAAG,CAAC,IAAIyD,CAAC,KAAK,CAAC,EAAE,OAAO,IAAI2lB,gBAAgB,CAAC,GAAG,CAAC,CAAC,KAC9D;MACH,IAAI0B,CAAC,GAAG,IAAI1B,gBAAgB,CAAC,IAAI,CAACC,MAAM,EAAE,IAAI,CAAC1rB,SAAS,CAAC;MACzD,KAAI,IAAI8lB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGhgB,CAAC,EAAEggB,CAAC,EAAE,EAAE;QACzBqH,CAAC,GAAGA,CAAC,CAAC5rB,GAAG,CAAC,IAAI,CAAC;;MAEjB,OAAO4rB,CAAC;;GAEX;EAAA;AAAA;AAKH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;"}